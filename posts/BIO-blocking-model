<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 7.3.0">
<link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/mygo.jpg">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/mygo.jpg">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha256-dABdfBfUoC8vJUBOwGVdm8L9qlMWaHTIfXt+7GnZCIo=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.css" integrity="sha256-gkQVf8UKZgQ0HyuxL/VnacadJ+D2Kox2TCEBuNQg5+w=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/themes/blue/pace-theme-center-simple.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/pace.min.js" integrity="sha256-gqd7YTjg/BtfqWSwsJOvndl0Bxc8gFImLEkXQT8+qj0=" crossorigin="anonymous"></script>

<script class="next-config" data-name="main" type="application/json">{"hostname":"blog.kayleh.top","root":"/","images":"/images","scheme":"Gemini","darkmode":true,"version":"8.22.0","exturl":true,"sidebar":{"position":"left","width_expanded":320,"width_dual_column":240,"display":"post","padding":18,"offset":12},"hljswrap":true,"copycode":{"enable":false,"style":null},"fold":{"enable":false,"height":500},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":true,"lazyload":true,"pangu":false,"comments":{"style":"tabs","active":"gitalk","storage":true,"lazyload":true,"nav":null,"activeClass":"gitalk"},"stickytabs":false,"motion":{"enable":true,"async":false,"duration":200,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"i18n":{"placeholder":"Searching...","empty":"We didn't find any results for the search: ${query}","hits_time":"${hits} results found in ${time} ms","hits":"${hits} results found"}}</script><script src="/js/config.js"></script>

<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7457165067653912"
     crossorigin="anonymous"></script>
    <meta name="description" content="BIO阻塞模型1. BIO阻塞模型简述BIO模型中服务端与客户端的响应过程">
<meta property="og:type" content="blog">
<meta property="og:title" content="BIO blocking model">
<meta property="og:url" content="https://blog.kayleh.top/posts/BIO-blocking-model">
<meta property="og:site_name" content="Kayleh&#39;s Blog">
<meta property="og:description" content="BIO阻塞模型1. BIO阻塞模型简述BIO模型中服务端与客户端的响应过程">
<meta property="og:locale" content="en_US">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200720183138508.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200720183847235.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200720183859453.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721182800674.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721171646426.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721172110567.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721183219259.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721184044934.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/2020072118380045.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721183932390.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721184510239.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/2020072118470527.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185036367.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185104298.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185243618.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185400861.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/2020072118562745.png">
<meta property="article:published_time" content="2020-12-03T09:46:43.000Z">
<meta property="article:modified_time" content="2025-02-03T16:14:08.805Z">
<meta property="article:author" content="Kayleh">
<meta property="article:tag" content="network">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200720183138508.png">


<link rel="canonical" href="https://blog.kayleh.top/posts/BIO-blocking-model">


<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"en","comments":true,"permalink":"https://blog.kayleh.top/posts/BIO-blocking-model","path":"posts/BIO-blocking-model","title":"BIO blocking model"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>BIO blocking model | Kayleh's Blog</title>
  




  <script>
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "q44a4p85n0");
</script>




  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Kayleh's Blog</p>
      <i class="logo-line"></i>
    </a>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="Search" role="button">
        <i class="fa fa-search fa-fw fa-lg"></i>
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-home fa-fw"></i>Home</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>Archives<span class="badge">247</span></a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>About</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>Tags<span class="badge">34</span></a></li><li class="menu-item menu-item-friends"><a href="/friends" rel="section"><i class="fa fa-heartbeat fa-fw"></i>friends</a></li><li class="menu-item menu-item-sitemap"><a href="/rss.xml" rel="section"><i class="fa fa-sitemap fa-fw"></i>Sitemap</a></li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>Search
        </a>
      </li>
  </ul>
</nav>



  <div class="search-pop-overlay">
    <div class="popup search-popup">
      <div class="search-header">
        <span class="search-icon">
          <i class="fa fa-search"></i>
        </span>
        <div class="search-input-container">
          <input autocomplete="off" autocapitalize="off" maxlength="80"
                placeholder="Searching..." spellcheck="false"
                type="search" class="search-input">
        </div>
        <span class="popup-btn-close" role="button">
          <i class="fa fa-times-circle"></i>
        </span>
      </div>
      <div class="search-result-container">
        <div class="search-result-icon">
          <i class="fa fa-spinner fa-pulse fa-5x"></i>
        </div>
      </div>
    </div>
  </div>

</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B"><span class="nav-number">1.</span> <span class="nav-text">BIO阻塞模型</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#1-BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B"><span class="nav-number">1.1.</span> <span class="nav-text">1. BIO阻塞模型</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#2-%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98%E6%BC%94%E7%A4%BA"><span class="nav-number">1.2.</span> <span class="nav-text">2. 简单实战演示</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#2-1-%E6%9C%8D%E5%8A%A1%E5%99%A8"><span class="nav-number">1.2.1.</span> <span class="nav-text">2.1 服务器</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-2-%E5%AE%A2%E6%88%B7%E7%AB%AF"><span class="nav-number">1.2.2.</span> <span class="nav-text">2.2 客户端</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-3-%E5%93%8D%E5%BA%94%E7%BB%93%E6%9E%9C"><span class="nav-number">1.2.3.</span> <span class="nav-text">2.3 响应结果</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#3-%E5%8A%A0%E6%B7%B1%E7%90%86%E8%A7%A3"><span class="nav-number">1.3.</span> <span class="nav-text">3. 加深理解</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%AE%9E%E6%88%98"><span class="nav-number">2.</span> <span class="nav-text">实战</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#1-%E6%A6%82%E5%BF%B5%E5%9B%BE%E8%A7%A3"><span class="nav-number">2.1.</span> <span class="nav-text">1. 概念图解</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#1-1-%E4%BC%AA%E5%BC%82%E6%AD%A5%E7%9A%84%E4%BC%98%E5%8C%96"><span class="nav-number">2.1.1.</span> <span class="nav-text">1.1 伪异步的优化</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#2-%E8%81%8A%E5%A4%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E7%9A%84%E8%A6%81%E7%82%B9"><span class="nav-number">2.2.</span> <span class="nav-text">2. 聊天服务器中的要点</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#2-1-%E5%AD%97%E6%AE%B5"><span class="nav-number">2.2.1.</span> <span class="nav-text">2.1 字段</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-2-%E8%BD%AC%E5%8F%91%E6%B6%88%E6%81%AF%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.2.</span> <span class="nav-text">2.2 转发消息方法</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-3-%E6%B7%BB%E5%8A%A0%E5%AE%A2%E6%88%B7%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.3.</span> <span class="nav-text">2.3 添加客户方法</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-4-%E7%A7%BB%E9%99%A4%E5%AE%A2%E6%88%B7%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.4.</span> <span class="nav-text">2.4 移除客户方法</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-5-%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%BB%E7%BA%BF%E7%A8%8B%E4%BB%BB%E5%8A%A1"><span class="nav-number">2.2.5.</span> <span class="nav-text">2.5 服务器主线程任务</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-6-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%84%E7%90%86%E7%BA%BF%E7%A8%8B%E4%BB%BB%E5%8A%A1"><span class="nav-number">2.2.6.</span> <span class="nav-text">2.6 服务器处理线程任务</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#3-%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%A6%81%E7%82%B9"><span class="nav-number">2.3.</span> <span class="nav-text">3. 聊天室客户端要点</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#3-1-%E5%90%91%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF%EF%BC%8C%E8%AE%A9%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BD%AC%E5%8F%91%E7%BB%99%E5%85%B6%E4%BB%96%E4%BA%BA"><span class="nav-number">2.3.1.</span> <span class="nav-text">3.1 向服务端发送消息，让服务器转发给其他人</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#3-2-%E6%8E%A5%E6%94%B6%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%9A%84%E6%B6%88%E6%81%AF"><span class="nav-number">2.3.2.</span> <span class="nav-text">3.2 接收服务端的消息</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#3-3-%E4%B8%BB%E7%BA%BF%E7%A8%8B%E4%BB%BB%E5%8A%A1"><span class="nav-number">2.3.3.</span> <span class="nav-text">3.3 主线程任务</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#3-4-%E5%A4%84%E7%90%86%E7%BA%BF%E7%A8%8B%E4%BB%BB%E5%8A%A1"><span class="nav-number">2.3.4.</span> <span class="nav-text">3.4 处理线程任务</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#4-%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C"><span class="nav-number">2.4.</span> <span class="nav-text">4. 测试结果</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#5-%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81"><span class="nav-number">2.5.</span> <span class="nav-text">5. 完整代码</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#5-1-%E6%9C%8D%E5%8A%A1%E5%99%A8"><span class="nav-number">2.5.1.</span> <span class="nav-text">5.1 服务器</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#5-2-%E5%AE%A2%E6%88%B7%E7%AB%AF"><span class="nav-number">2.5.2.</span> <span class="nav-text">5.2 客户端</span></a></li></ol></li></ol></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="Kayleh"
      src="/images/mygo.jpg">
  <p class="site-author-name" itemprop="name">Kayleh</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">247</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
        <span class="site-state-item-count">5</span>
        <span class="site-state-item-name">categories</span>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">34</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author animated">
      <span class="links-of-author-item">
        <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaA==" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;kayleh"><i class="fab fa-github fa-fw"></i>GitHub</span>
      </span>
      <span class="links-of-author-item">
        <span class="exturl" data-url="bWFpbHRvOndlYnNpdGVAa2F5bGVoLnRvcA==" title="E-Mail → mailto:website@kayleh.top"><i class="fa fa-envelope fa-fw"></i>E-Mail</span>
      </span>
  </div>
  <div class="cc-license animated" itemprop="license">
    <span class="exturl cc-opacity" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><img src="https://cdnjs.cloudflare.com/ajax/libs/creativecommons-vocabulary/2020.11.3/assets/license_badges/small/by_nc_sa.svg" alt="Creative Commons"></span>
  </div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="en">
    <link itemprop="mainEntityOfPage" href="https://blog.kayleh.top/posts/BIO-blocking-model">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/mygo.jpg">
      <meta itemprop="name" content="Kayleh">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="BIO blocking model | Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          BIO blocking model<span class="exturl post-edit-link" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaC9rYXlsZWguZ2l0aHViLmlvMi9lZGl0L21hc3Rlci9zb3VyY2UvX3Bvc3RzL0JJT+mYu+WhnuaooeWeiy5tZA==" title="Edit this post"><i class="fa fa-pen-nib"></i></span>
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">Posted on</span>

      <time title="Created: 2020-12-03 17:46:43" itemprop="dateCreated datePublished" datetime="2020-12-03T17:46:43+08:00">2020-12-03</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">Edited on</span>
      <time title="Modified: 2025-02-04 00:14:08" itemprop="dateModified" datetime="2025-02-04T00:14:08+08:00">2025-02-04</time>
    </span>

  
    <span class="post-meta-item" title="Views" id="busuanzi_container_page_pv">
      <span class="post-meta-item-icon">
        <i class="far fa-eye"></i>
      </span>
      <span class="post-meta-item-text">Views: </span>
      <span id="busuanzi_value_page_pv"></span>
    </span>
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><h1 id="BIO阻塞模型"><a href="#BIO阻塞模型" class="headerlink" title="BIO阻塞模型"></a>BIO阻塞模型</h1><h2 id="1-BIO阻塞模型"><a href="#1-BIO阻塞模型" class="headerlink" title="1. BIO阻塞模型"></a>1. BIO阻塞模型</h2><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200720183138508.png" alt="在这里插入图片描述"><br>简述BIO模型中服务端与客户端的响应过程</p>
<ol>
<li>服务器<code>serverSocket</code>先要和<code>端口</code>进行<code>绑定</code></li>
<li>绑定完成后，执行<code>accept方法</code>，等待客户端的连接，这个方法是<code>阻塞式调用</code>，也就是说，要一直等待客户端的连接响应，不做其他事情，一直等，（被阻塞的还有InputStream.read()、OutputStream.write()，这两个也会一直等待客户端的响应）</li>
<li>客户端创建<code>Socket</code>对象，<code>绑定</code>服务器的<code>ip地址</code>与<code>端口号</code>，与服务器进行连接</li>
<li>服务器接收到客户端的连接请求，accept方法获取到<code>客户端的socket信息</code>，连接成功</li>
<li>服务器与客户端创建各自的<code>io流</code>，实现<code>全双工通信</code></li>
<li>之后便可以随时<code>结束连接</code></li>
</ol>
<hr>
<h2 id="2-简单实战演示"><a href="#2-简单实战演示" class="headerlink" title="2. 简单实战演示"></a>2. 简单实战演示</h2><h3 id="2-1-服务器"><a href="#2-1-服务器" class="headerlink" title="2.1 服务器"></a>2.1 服务器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Server</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_PORT</span> <span class="operator">=</span> <span class="number">8888</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">QUIT</span> <span class="operator">=</span> <span class="string">&quot;quit&quot;</span>;</span><br><span class="line">        <span class="type">ServerSocket</span> <span class="variable">serverSocket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//绑定端口号</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(DEFAULT_PORT);</span><br><span class="line">            System.out.println(<span class="string">&quot;服务器已经启动，绑定端口号：&quot;</span> + DEFAULT_PORT);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="comment">//等待客户端的连接</span></span><br><span class="line">                <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端&quot;</span> + socket.getPort() + <span class="string">&quot;:&quot;</span> + <span class="string">&quot;已经连接&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//获取io流</span></span><br><span class="line">                <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(socket.getInputStream())</span><br><span class="line">                );</span><br><span class="line">                <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(socket.getOutputStream())</span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">                <span class="comment">//读取客户发送的信息</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">while</span> ((msg = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;客户端&quot;</span> + socket.getPort() + <span class="string">&quot;:&quot;</span> + msg);</span><br><span class="line">                    <span class="comment">//回复消息</span></span><br><span class="line">                    writer.write( msg + <span class="string">&quot; ok&quot;</span> +<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    writer.flush();</span><br><span class="line">                    System.out.println(<span class="string">&quot;服务器：&quot;</span> + msg + <span class="string">&quot; ok&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(msg.equals(QUIT))&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;客户端&quot;</span> + socket.getPort() + <span class="string">&quot;:断开连接&quot;</span> );</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(serverSocket != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    serverSocket.close();</span><br><span class="line">                    System.out.println(<span class="string">&quot;服务器Socket关闭&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-2-客户端"><a href="#2-2-客户端" class="headerlink" title="2.2 客户端"></a>2.2 客户端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Client</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_SERVER_PORT</span> <span class="operator">=</span> <span class="number">8888</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_ADDRESS</span> <span class="operator">=</span> <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">QUIT</span> <span class="operator">=</span> <span class="string">&quot;quit&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建Socket</span></span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">Socket</span>(DEFAULT_ADDRESS,DEFAULT_SERVER_PORT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//创建io流</span></span><br><span class="line">            writer = <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(socket.getOutputStream())</span><br><span class="line">            );</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(socket.getInputStream())</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//等待用户输入信息</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="type">BufferedReader</span> <span class="variable">consoleReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> consoleReader.readLine();</span><br><span class="line">                <span class="comment">//向服务器发送消息</span></span><br><span class="line">                writer.write(msg + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                writer.flush();</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端&quot;</span>+ <span class="string">&quot;:&quot;</span> + msg);</span><br><span class="line">                <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">                System.out.println(<span class="string">&quot;服务器：&quot;</span> + line);</span><br><span class="line">                <span class="comment">//退出判断</span></span><br><span class="line">                <span class="keyword">if</span>(msg.equals(QUIT))&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(writer != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    writer.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-3-响应结果"><a href="#2-3-响应结果" class="headerlink" title="2.3 响应结果"></a>2.3 响应结果</h3><ul>
<li><strong>客户端</strong><br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200720183847235.png" alt="在这里插入图片描述"></li>
<li><strong>服务器</strong><br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200720183859453.png" alt="在这里插入图片描述"></li>
</ul>
<h2 id="3-加深理解"><a href="#3-加深理解" class="headerlink" title="3. 加深理解"></a>3. 加深理解</h2><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721182800674.png" alt="在这里插入图片描述"></p>
<h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><h2 id="1-概念图解"><a href="#1-概念图解" class="headerlink" title="1. 概念图解"></a>1. 概念图解</h2><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721171646426.png" alt="在这里插入图片描述"></p>
<ul>
<li>BIO模型：客户端每有一个请求，服务端都要有一个线程来单独处理这个请求，典型的<code>一请求一应答</code>，java 1.4版本之前</li>
<li>对于聊天室服务器，它有多个线程，其中一个为图上的<code>Acceptor线程</code>（ChatServer），它实现的就是对来自客户端的请求不断响应，创建分配处理线程；对应客户端的每一个请求，都有一个单独的处理线程</li>
<li>对于客户端来说，它有两个线程，其中一个线程与服务器<code>建立连接，并接收来自服务器的消息</code>；另一个线程则用来<code>处理用户的输入，并将消息发送到服务器</code></li>
</ul>
<h3 id="1-1-伪异步的优化"><a href="#1-1-伪异步的优化" class="headerlink" title="1.1 伪异步的优化"></a>1.1 伪异步的优化</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721172110567.png" alt="在这里插入图片描述"></p>
<ul>
<li>使用线程池的原因是因为防止一大批用户的响应，造成服务器过载，实现线程的复用，减少不停的创建删除线程造成的资源郎芬，这样也实现了BIO的伪异步IO通信</li>
</ul>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaGFpbWlzaGFzaGEvcC8xMDYyNTAyNi5odG1sI2F1dG9pZC0xLTAtMA==">I&#x2F;O模型系列之三：IO通信模型BIO NIO AIO<i class="fa fa-external-link-alt"></i></span></p>
<hr>
<h2 id="2-聊天服务器中的要点"><a href="#2-聊天服务器中的要点" class="headerlink" title="2. 聊天服务器中的要点"></a>2. 聊天服务器中的要点</h2><h3 id="2-1-字段"><a href="#2-1-字段" class="headerlink" title="2.1 字段"></a>2.1 字段</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721183219259.png" alt="在这里插入图片描述"></p>
<h3 id="2-2-转发消息方法"><a href="#2-2-转发消息方法" class="headerlink" title="2.2 转发消息方法"></a>2.2 转发消息方法</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721184044934.png" alt="在这里插入图片描述"></p>
<h3 id="2-3-添加客户方法"><a href="#2-3-添加客户方法" class="headerlink" title="2.3 添加客户方法"></a>2.3 添加客户方法</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/2020072118380045.png" alt="在这里插入图片描述"></p>
<h3 id="2-4-移除客户方法"><a href="#2-4-移除客户方法" class="headerlink" title="2.4 移除客户方法"></a>2.4 移除客户方法</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721183932390.png" alt="在这里插入图片描述"></p>
<h3 id="2-5-服务器主线程任务"><a href="#2-5-服务器主线程任务" class="headerlink" title="2.5 服务器主线程任务"></a>2.5 服务器主线程任务</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721184510239.png" alt="在这里插入图片描述"></p>
<h3 id="2-6-服务器处理线程任务"><a href="#2-6-服务器处理线程任务" class="headerlink" title="2.6 服务器处理线程任务"></a>2.6 服务器处理线程任务</h3><ul>
<li>实现Runnable接口，之后执行的时候将其传入到线程池中执行。<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/2020072118470527.png" alt="在这里插入图片描述"></li>
</ul>
<hr>
<h2 id="3-聊天室客户端要点"><a href="#3-聊天室客户端要点" class="headerlink" title="3. 聊天室客户端要点"></a>3. 聊天室客户端要点</h2><h3 id="3-1-向服务端发送消息，让服务器转发给其他人"><a href="#3-1-向服务端发送消息，让服务器转发给其他人" class="headerlink" title="3.1 向服务端发送消息，让服务器转发给其他人"></a>3.1 向服务端发送消息，让服务器转发给其他人</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185036367.png" alt="在这里插入图片描述"></p>
<h3 id="3-2-接收服务端的消息"><a href="#3-2-接收服务端的消息" class="headerlink" title="3.2 接收服务端的消息"></a>3.2 接收服务端的消息</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185104298.png" alt="在这里插入图片描述"></p>
<h3 id="3-3-主线程任务"><a href="#3-3-主线程任务" class="headerlink" title="3.3 主线程任务"></a>3.3 主线程任务</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185243618.png" alt="在这里插入图片描述"></p>
<h3 id="3-4-处理线程任务"><a href="#3-4-处理线程任务" class="headerlink" title="3.4 处理线程任务"></a>3.4 处理线程任务</h3><ul>
<li>实现Runnable接口，创建线程时启动<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/20200721185400861.png" alt="在这里插入图片描述"></li>
</ul>
<hr>
<h2 id="4-测试结果"><a href="#4-测试结果" class="headerlink" title="4. 测试结果"></a>4. 测试结果</h2><p><strong>服务器端信息</strong><br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/BIO%E9%98%BB%E5%A1%9E%E6%A8%A1%E5%9E%8B/2020072118562745.png" alt="在这里插入图片描述"></p>
<hr>
<h2 id="5-完整代码"><a href="#5-完整代码" class="headerlink" title="5. 完整代码"></a>5. 完整代码</h2><h3 id="5-1-服务器"><a href="#5-1-服务器" class="headerlink" title="5.1 服务器"></a>5.1 服务器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChatServer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">DEFAULT_PORT</span> <span class="operator">=</span> <span class="number">8888</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">QUIT</span> <span class="operator">=</span> <span class="string">&quot;quit&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ServerSocket serverSocket;</span><br><span class="line">    <span class="comment">//存储已经连接的客户们</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Integer, Writer&gt; connectedClients;</span><br><span class="line">    <span class="keyword">private</span> ExecutorService executorService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChatServer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.connectedClients = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.executorService = Executors.newFixedThreadPool(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加客户端</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">addClient</span><span class="params">(Socket socket)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span>(socket != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">key</span> <span class="operator">=</span> socket.getPort();</span><br><span class="line">            <span class="type">Writer</span> <span class="variable">value</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(socket.getOutputStream())</span><br><span class="line">            );</span><br><span class="line">            connectedClients.put(key,value);</span><br><span class="line">            System.out.println(<span class="string">&quot;客户&quot;</span> + key + <span class="string">&quot;：已经连接&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//移除客户端</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">removeClient</span><span class="params">(Socket socket)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span>(socket != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">port</span> <span class="operator">=</span> socket.getPort();</span><br><span class="line">            <span class="keyword">if</span>(connectedClients.containsKey(port))&#123;</span><br><span class="line">                <span class="comment">//移除用户的时候要进行关闭</span></span><br><span class="line">                connectedClients.get(port).close();</span><br><span class="line">                connectedClients.remove(port);</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端&quot;</span> + port + <span class="string">&quot;：已经断开连接&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将消息转发给其他用户</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">forwardMessage</span><span class="params">(Socket socket,String fwdMsg)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">for</span>(Integer port : connectedClients.keySet())&#123;</span><br><span class="line">            <span class="comment">//不转发给自己</span></span><br><span class="line">            <span class="keyword">if</span>(!port.equals(socket.getPort()))&#123;</span><br><span class="line">                <span class="type">Writer</span> <span class="variable">writer</span> <span class="operator">=</span> connectedClients.get(port);</span><br><span class="line">                writer.write(fwdMsg);</span><br><span class="line">                writer.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查是否退出</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">readyToQuit</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> QUIT.equals(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(serverSocket != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                serverSocket.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//启动</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//绑定监听端口</span></span><br><span class="line">            serverSocket = <span class="keyword">new</span> <span class="title class_">ServerSocket</span>(DEFAULT_PORT);</span><br><span class="line">            System.out.println(<span class="string">&quot;聊天室服务器已经成功启动！&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> serverSocket.accept();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//为每个socket创建一条单独的线程进行处理</span></span><br><span class="line">                <span class="comment">//new Thread(new ChatHandler(socket,this)).start();</span></span><br><span class="line">                executorService.execute(<span class="keyword">new</span> <span class="title class_">ChatHandler</span>(socket,<span class="built_in">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ChatServer</span> <span class="variable">chatServer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatServer</span>();</span><br><span class="line">        chatServer.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChatHandler</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Socket socket;</span><br><span class="line">    <span class="keyword">private</span> ChatServer chatServer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChatHandler</span><span class="params">(Socket socket, ChatServer chatServer)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.socket = socket;</span><br><span class="line">        <span class="built_in">this</span>.chatServer = chatServer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//添加对象</span></span><br><span class="line">            chatServer.addClient(socket);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//读取用户发送的信息</span></span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(socket.getInputStream())</span><br><span class="line">            );</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="comment">//必须要读取到换行符</span></span><br><span class="line">            <span class="keyword">while</span> ((msg = reader.readLine()) != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">fwdMsg</span> <span class="operator">=</span><span class="string">&quot;客户端&quot;</span> + socket.getPort() + <span class="string">&quot;：&quot;</span> + msg + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                chatServer.forwardMessage(socket,fwdMsg);</span><br><span class="line">                System.out.print(fwdMsg);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//检查是否退出</span></span><br><span class="line">                <span class="keyword">if</span>(chatServer.readyToQuit(msg))&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                chatServer.removeClient(socket);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-2-客户端"><a href="#5-2-客户端" class="headerlink" title="5.2 客户端"></a>5.2 客户端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Server.ChatServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChatClient</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">DEFAULT_SERVER_HOST</span> <span class="operator">=</span> <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">DEFAULT_PORT</span> <span class="operator">=</span> <span class="number">8888</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">QUIT</span> <span class="operator">=</span> <span class="string">&quot;quit&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Socket socket;</span><br><span class="line">    <span class="keyword">private</span> BufferedReader reader;</span><br><span class="line">    <span class="keyword">private</span> BufferedWriter writer;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发送消息给服务器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendMsg</span><span class="params">(String msg)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//输出流没有关闭的情况</span></span><br><span class="line">        <span class="keyword">if</span>(!socket.isOutputShutdown())&#123;</span><br><span class="line">            writer.write(msg + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            writer.flush();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接受消息从服务器</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">receiveMsg</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span>(!socket.isInputShutdown())&#123;</span><br><span class="line">            <span class="keyword">return</span> reader.readLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查是否退出</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">readyToQuit</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> QUIT.equals(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writer.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//启动开关</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建socket</span></span><br><span class="line">            socket = <span class="keyword">new</span> <span class="title class_">Socket</span>(DEFAULT_SERVER_HOST,DEFAULT_PORT);</span><br><span class="line">            <span class="comment">//创建io流</span></span><br><span class="line">            writer = <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(socket.getOutputStream())</span><br><span class="line">            );</span><br><span class="line">            reader = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(socket.getInputStream())</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">            <span class="comment">//处理用户的输入的线程</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">UserInputHandler</span>(<span class="built_in">this</span>)).start();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//监听从服务器来的消息</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">while</span> ((msg = receiveMsg()) != <span class="literal">null</span>)&#123;</span><br><span class="line">                System.out.println(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ChatClient</span> <span class="variable">chatClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatClient</span>();</span><br><span class="line">        chatClient.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInputHandler</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> ChatClient chatClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInputHandler</span><span class="params">(ChatClient chatClient)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.chatClient = chatClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//等待用户输入信息</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">                <span class="comment">//向服务器发送消息</span></span><br><span class="line">                chatClient.sendMsg(msg);</span><br><span class="line">                <span class="keyword">if</span>(chatClient.readyToQuit(msg))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


    </div>

    
    
    

    <footer class="post-footer">
          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>Post author:  </strong>Kayleh
  </li>
  <li class="post-copyright-link">
      <strong>Post link: </strong>
      <a href="https://blog.kayleh.top/posts/BIO-blocking-model" title="BIO blocking model">https://blog.kayleh.top/posts/BIO-blocking-model</a>
  </li>
  <li class="post-copyright-license">
      <strong>Copyright Notice:  </strong>All articles in this blog are licensed under <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</span> unless stating additionally.
  </li>
</ul>
</div>

          <div class="followme">
  <span>Welcome to my other publishing channels</span>

  <div class="social-list">

      <div class="social-item">
          <a target="_blank" class="social-link" href="/atom.xml">
            <span class="icon">
              <i class="fa fa-rss"></i>
            </span>

            <span class="label">RSS</span>
          </a>
      </div>
  </div>
</div>

          <div class="post-tags">
              <a href="/tags/network/" rel="tag"><i class="fa fa-tag"></i> network</a>
          </div>

        
  <div class="social-like a2a_kit a2a_kit_size_32 a2a_default_style">
    <a class="a2a_dd" target="_blank" rel="noopener" href="https://www.addtoany.com/share"></a>
      <a class="a2a_button_facebook"></a>
      <a class="a2a_button_twitter"></a>
  </div>

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/posts/IO-model" rel="prev" title="I/O model">
                  <i class="fa fa-angle-left"></i> I/O model
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/posts/NIO-blocking-model" rel="next" title="NIO blocking model">
                  NIO blocking model <i class="fa fa-angle-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






    <div class="comments gitalk-container"></div>
</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">

  <div class="copyright">
    &copy; 2019 – 
    <span itemprop="copyrightYear">2025</span>
    <span class="with-love">
      <i class="fa fa-heart"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">true</span>
  </div>
<div class="busuanzi-count">
    <span class="post-meta-item" id="busuanzi_container_site_uv">
      <span class="post-meta-item-icon">
        <i class="fa fa-user"></i>
      </span>
      <span class="site-uv" title="Total Visitors">
        <span id="busuanzi_value_site_uv"></span>
      </span>
    </span>
    <span class="post-meta-item" id="busuanzi_container_site_pv">
      <span class="post-meta-item-icon">
        <i class="fa fa-eye"></i>
      </span>
      <span class="site-pv" title="Total Views">
        <span id="busuanzi_value_site_pv"></span>
      </span>
    </span>
</div>

    </div>
  </footer>

  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>
  <div class="sidebar-dimmer"></div>
  <div class="back-to-top" role="button" aria-label="Back to top">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script size="300" alpha="0.6" zIndex="-1" src="https://cdnjs.cloudflare.com/ajax/libs/ribbon.js/1.0.2/ribbon.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/next-theme-pjax/0.6.0/pjax.min.js" integrity="sha256-vxLn1tSKWD4dqbMRyv940UYw4sXgMtYcK6reefzZrao=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.umd.js" integrity="sha256-a+H7FYzJv6oU2hfsfDGM2Ohw/cR9v+hPfxHCLdmCrE8=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.1.0/medium-zoom.min.js" integrity="sha256-ZgMyDAIYDYGxbcpJcfUnYwNevG/xi9OHKaR/8GK+jWc=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/sidebar.js"></script><script src="/js/next-boot.js"></script><script src="/js/pjax.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/hexo-generator-searchdb/1.4.1/search.js" integrity="sha256-1kfA5uHPf65M5cphT2dvymhkuyHPQp5A53EGZOnOLmc=" crossorigin="anonymous"></script>
<script src="/js/third-party/search/local-search.js"></script>
<script src="//code.tidio.co/dq5klo9ydptaxokj83vcwnusf63dogzr.js"></script>
<script src="/js/third-party/chat/tidio.js"></script>




  <script src="/js/third-party/fancybox.js"></script>

  <script src="/js/third-party/pace.js"></script>

  <script src="/js/third-party/addtoany.js"></script>

  
  <script data-pjax async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>




  

  <script class="next-config" data-name="enableMath" type="application/json">false</script><script class="next-config" data-name="mathjax" type="application/json">{"enable":true,"tags":"ams","js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js","integrity":"sha256-MASABpB4tYktI2Oitl4t+78w/lyA+D7b/s9GEP0JOGI="}}</script>
<script src="/js/third-party/math/mathjax.js"></script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.css" integrity="sha256-AJnUHL7dBv6PGaeyPQJcgQPDjt/Hn/PvYZde1iqfp8U=" crossorigin="anonymous">

<script class="next-config" data-name="gitalk" type="application/json">{"enable":true,"github_id":"Kayleh","repo":"kayleh.top.giscus","client_id":"Ov23liJZlhhVSuSynF9Q","client_secret":"d16c7023956f130d20927ad469dfe83295864094","admin_user":"Kayleh","distraction_free_mode":true,"proxy":"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token","language":null,"js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.min.js","integrity":"sha256-MVK9MGD/XJaGyIghSVrONSnoXoGh3IFxLw0zfvzpxR4="},"path_md5":"ac951fe706824d895ba2f1172611f0ae"}</script>
<script src="/js/third-party/comments/gitalk.js"></script>

</body>
</html>
