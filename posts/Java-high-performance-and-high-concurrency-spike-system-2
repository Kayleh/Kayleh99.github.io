<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 7.3.0">
<link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/mygo.jpg">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/mygo.jpg">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha256-dABdfBfUoC8vJUBOwGVdm8L9qlMWaHTIfXt+7GnZCIo=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.css" integrity="sha256-gkQVf8UKZgQ0HyuxL/VnacadJ+D2Kox2TCEBuNQg5+w=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/themes/blue/pace-theme-center-simple.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/pace.min.js" integrity="sha256-gqd7YTjg/BtfqWSwsJOvndl0Bxc8gFImLEkXQT8+qj0=" crossorigin="anonymous"></script>

<script class="next-config" data-name="main" type="application/json">{"hostname":"blog.kayleh.top","root":"/","images":"/images","scheme":"Gemini","darkmode":true,"version":"8.22.0","exturl":true,"sidebar":{"position":"left","width_expanded":320,"width_dual_column":240,"display":"post","padding":18,"offset":12},"hljswrap":true,"copycode":{"enable":false,"style":null},"fold":{"enable":false,"height":500},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":true,"lazyload":true,"pangu":false,"comments":{"style":"tabs","active":"gitalk","storage":true,"lazyload":true,"nav":null,"activeClass":"gitalk"},"stickytabs":false,"motion":{"enable":true,"async":false,"duration":200,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"i18n":{"placeholder":"Searching...","empty":"We didn't find any results for the search: ${query}","hits_time":"${hits} results found in ${time} ms","hits":"${hits} results found"}}</script><script src="/js/config.js"></script>

<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7457165067653912"
     crossorigin="anonymous"></script>
    <meta name="description" content="MD5加密和全局异常处理器">
<meta property="og:type" content="blog">
<meta property="og:title" content="Java高性能高并发秒杀系统(2)">
<meta property="og:url" content="https://blog.kayleh.top/posts/Java-high-performance-and-high-concurrency-spike-system-2">
<meta property="og:site_name" content="Kayleh&#39;s Blog">
<meta property="og:description" content="MD5加密和全局异常处理器">
<meta property="og:locale" content="en_US">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/Java%E9%AB%98%E6%80%A7%E8%83%BD%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/20200709182209155.png">
<meta property="article:published_time" content="2020-11-06T04:13:45.000Z">
<meta property="article:modified_time" content="2025-02-03T16:14:08.809Z">
<meta property="article:author" content="Kayleh">
<meta property="article:tag" content="project">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/Java%E9%AB%98%E6%80%A7%E8%83%BD%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/20200709182209155.png">


<link rel="canonical" href="https://blog.kayleh.top/posts/Java-high-performance-and-high-concurrency-spike-system-2">


<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"en","comments":true,"permalink":"https://blog.kayleh.top/posts/Java-high-performance-and-high-concurrency-spike-system-2","path":"posts/Java-high-performance-and-high-concurrency-spike-system-2","title":"Java高性能高并发秒杀系统(2)"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>Java高性能高并发秒杀系统(2) | Kayleh's Blog</title>
  




  <script>
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "q44a4p85n0");
</script>




  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Kayleh's Blog</p>
      <i class="logo-line"></i>
    </a>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="Search" role="button">
        <i class="fa fa-search fa-fw fa-lg"></i>
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-home fa-fw"></i>Home</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>Archives<span class="badge">247</span></a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>About</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>Tags<span class="badge">34</span></a></li><li class="menu-item menu-item-friends"><a href="/friends" rel="section"><i class="fa fa-heartbeat fa-fw"></i>friends</a></li><li class="menu-item menu-item-sitemap"><a href="/rss.xml" rel="section"><i class="fa fa-sitemap fa-fw"></i>Sitemap</a></li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>Search
        </a>
      </li>
  </ul>
</nav>



  <div class="search-pop-overlay">
    <div class="popup search-popup">
      <div class="search-header">
        <span class="search-icon">
          <i class="fa fa-search"></i>
        </span>
        <div class="search-input-container">
          <input autocomplete="off" autocapitalize="off" maxlength="80"
                placeholder="Searching..." spellcheck="false"
                type="search" class="search-input">
        </div>
        <span class="popup-btn-close" role="button">
          <i class="fa fa-times-circle"></i>
        </span>
      </div>
      <div class="search-result-container">
        <div class="search-result-icon">
          <i class="fa fa-spinner fa-pulse fa-5x"></i>
        </div>
      </div>
    </div>
  </div>

</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#1-%E7%99%BB%E5%BD%95%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%AF%86%E7%A0%81%E4%B8%A4%E6%AC%A1MD5%E5%8A%A0%E5%AF%86"><span class="nav-number">1.</span> <span class="nav-text">1. 登录过程中，密码两次MD5加密</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#1-1-%E4%B8%BA%E5%95%A5%E7%94%A8%E4%B8%A4%E6%AC%A1MD5%E5%93%87%EF%BC%9F"><span class="nav-number">1.1.</span> <span class="nav-text">1.1 为啥用两次MD5哇？</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#2-%E6%9E%84%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8"><span class="nav-number">2.</span> <span class="nav-text">2. 构建数据库表</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#2-1-%E5%87%A0%E4%B8%AA%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E7%82%B9"><span class="nav-number">2.1.</span> <span class="nav-text">2.1 几个需要注意的点</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#3-%E9%92%88%E5%AF%B9MD5%E5%8A%A0%E5%AF%86%E5%8A%9F%E8%83%BD%EF%BC%8C%E5%B0%81%E8%A3%85%E4%BA%86%E4%B8%93%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB"><span class="nav-number">3.</span> <span class="nav-text">3. 针对MD5加密功能，封装了专用工具类</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#3-1-%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BB%A3%E7%A0%81"><span class="nav-number">3.1.</span> <span class="nav-text">3.1 工具类代码</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#4-%E5%8A%A0%E5%85%A5JSR%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C"><span class="nav-number">4.</span> <span class="nav-text">4. 加入JSR参数校验</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#4-1-JSR%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C"><span class="nav-number">4.1.</span> <span class="nav-text">4.1 JSR参数校验</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#4-2-IsMobile%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3"><span class="nav-number">4.2.</span> <span class="nav-text">4.2 @IsMobile自定义注解</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#5-%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%99%A8"><span class="nav-number">5.</span> <span class="nav-text">5. 全局异常处理器</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#5-1-%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%95%E5%85%A5%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%99%A8%EF%BC%9F"><span class="nav-number">5.1.</span> <span class="nav-text">5.1 我们为什么要引入全局异常处理器？</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#5-2-%E4%BC%98%E5%8C%96"><span class="nav-number">5.2.</span> <span class="nav-text">5.2 优化</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#5-3-%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8"><span class="nav-number">5.3.</span> <span class="nav-text">5.3 全局异常</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#5-4-%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%99%A8"><span class="nav-number">5.4.</span> <span class="nav-text">5.4 全局异常处理器</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#6-%E5%85%B3%E6%B3%A8%E4%B8%80%E4%B8%8B%E5%8F%82%E6%95%B0%E6%9B%BF%E6%8D%A2%E7%9A%84%E6%96%B9%E6%B3%95"><span class="nav-number">6.</span> <span class="nav-text">6. 关注一下参数替换的方法</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="Kayleh"
      src="/images/mygo.jpg">
  <p class="site-author-name" itemprop="name">Kayleh</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">247</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
        <span class="site-state-item-count">5</span>
        <span class="site-state-item-name">categories</span>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">34</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author animated">
      <span class="links-of-author-item">
        <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaA==" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;kayleh"><i class="fab fa-github fa-fw"></i>GitHub</span>
      </span>
      <span class="links-of-author-item">
        <span class="exturl" data-url="bWFpbHRvOndlYnNpdGVAa2F5bGVoLnRvcA==" title="E-Mail → mailto:website@kayleh.top"><i class="fa fa-envelope fa-fw"></i>E-Mail</span>
      </span>
  </div>
  <div class="cc-license animated" itemprop="license">
    <span class="exturl cc-opacity" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><img src="https://cdnjs.cloudflare.com/ajax/libs/creativecommons-vocabulary/2020.11.3/assets/license_badges/small/by_nc_sa.svg" alt="Creative Commons"></span>
  </div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="en">
    <link itemprop="mainEntityOfPage" href="https://blog.kayleh.top/posts/Java-high-performance-and-high-concurrency-spike-system-2">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/mygo.jpg">
      <meta itemprop="name" content="Kayleh">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="Java高性能高并发秒杀系统(2) | Kayleh's Blog">
      <meta itemprop="description" content="MD5加密和全局异常处理器">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          Java高性能高并发秒杀系统(2)<span class="exturl post-edit-link" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaC9rYXlsZWguZ2l0aHViLmlvMi9lZGl0L21hc3Rlci9zb3VyY2UvX3Bvc3RzL0phdmHpq5jmgKfog73pq5jlubblj5Hnp5LmnYDns7vnu58gLSDlia/mnKwubWQ=" title="Edit this post"><i class="fa fa-pen-nib"></i></span>
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">Posted on</span>

      <time title="Created: 2020-11-06 12:13:45" itemprop="dateCreated datePublished" datetime="2020-11-06T12:13:45+08:00">2020-11-06</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">Edited on</span>
      <time title="Modified: 2025-02-04 00:14:08" itemprop="dateModified" datetime="2025-02-04T00:14:08+08:00">2025-02-04</time>
    </span>

  
    <span class="post-meta-item" title="Views" id="busuanzi_container_page_pv">
      <span class="post-meta-item-icon">
        <i class="far fa-eye"></i>
      </span>
      <span class="post-meta-item-text">Views: </span>
      <span id="busuanzi_value_page_pv"></span>
    </span>
</div>

            <div class="post-description">MD5加密和全局异常处理器</div>
        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><h2 id="1-登录过程中，密码两次MD5加密"><a href="#1-登录过程中，密码两次MD5加密" class="headerlink" title="1. 登录过程中，密码两次MD5加密"></a>1. 登录过程中，密码两次MD5加密</h2><h3 id="1-1-为啥用两次MD5哇？"><a href="#1-1-为啥用两次MD5哇？" class="headerlink" title="1.1 为啥用两次MD5哇？"></a>1.1 为啥用两次MD5哇？</h3><ol>
<li>第一次MD5，是针对<code>传输安全</code>做的MD5加密，因为<code>http是明文传递</code>，如果不进行加密的话，密码就直接被劫持了。<br>(Password1 &#x3D; MD5(inputPassword,固定的salt值)，salt为字符串)</li>
<li>第二次MD5，是针对<code>数据库安全</code>做的MD5加密，保证数据库的防盗安全。若不进行二次加密，MD5值经数据库获取，可直接被MD5转换器直接转换为用户密码，不安全。<br>(Password2 &#x3D; MD5(Password1,随机的salt值))</li>
</ol>
<hr>
<h2 id="2-构建数据库表"><a href="#2-构建数据库表" class="headerlink" title="2. 构建数据库表"></a>2. 构建数据库表</h2><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/Java%E9%AB%98%E6%80%A7%E8%83%BD%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/20200709182209155.png" alt="在这里插入图片描述"></p>
<h3 id="2-1-几个需要注意的点"><a href="#2-1-几个需要注意的点" class="headerlink" title="2.1 几个需要注意的点"></a>2.1 几个需要注意的点</h3><ul>
<li>字符集采用的是<code>utf8mb4</code>(most bytes 4)。简单来说，utf8mb4是<code>utf8的超集</code>，能够用<code>4个字节</code>存储更多的字符。标准UTF-8字符集编码可以用1~4个字节取编码21位字符，但是在<code>MySQL中，utf8最多使用3个字节</code>，像一些表情emoji和不常用的字符如“墅”需要用4个字节才能表示出来。用utf8mb4能解决以上问题。</li>
<li>数据库中存储了<code>&quot;动态&quot;salt值</code></li>
</ul>
<hr>
<h2 id="3-针对MD5加密功能，封装了专用工具类"><a href="#3-针对MD5加密功能，封装了专用工具类" class="headerlink" title="3. 针对MD5加密功能，封装了专用工具类"></a>3. 针对MD5加密功能，封装了专用工具类</h2><p>以下MD5包的Maven依赖了解以下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;commons-codec&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.6&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">123456789</span><br></pre></td></tr></table></figure>

<h3 id="3-1-工具类代码"><a href="#3-1-工具类代码" class="headerlink" title="3.1 工具类代码"></a>3.1 工具类代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MD5Util</span> &#123;</span><br><span class="line">    <span class="comment">//静态的salt，用于第一次MD5</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">salt</span> <span class="operator">=</span> <span class="string">&quot;1a2b3c4d&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">md5</span><span class="params">(String src)</span>&#123;</span><br><span class="line">    	<span class="comment">//调用DigestUtils，实现md5处理</span></span><br><span class="line">        <span class="keyword">return</span> DigestUtils.md5Hex(src);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 第一次MD5处理</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputPass</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">inputPassToFormPass</span><span class="params">(String inputPass)</span>&#123;</span><br><span class="line">        <span class="comment">//这里没加“”出现了问题？？？</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">pass</span> <span class="operator">=</span><span class="string">&quot;&quot;</span> + salt.charAt(<span class="number">1</span>) + salt.charAt(<span class="number">7</span>) + inputPass</span><br><span class="line">                + salt.charAt(<span class="number">3</span>) + salt.charAt(<span class="number">5</span>);</span><br><span class="line">        <span class="comment">//System.out.println(pass);</span></span><br><span class="line">        <span class="keyword">return</span> md5(pass);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">123456789101112131415161718192021222324</span></span><br></pre></td></tr></table></figure>

<ul>
<li>我在第一次处理加密时，拼接<code>字符</code>时没有添加<code>&quot;&quot;</code>，出现了登录验证失败的问题</li>
</ul>
<hr>
<h2 id="4-加入JSR参数校验"><a href="#4-加入JSR参数校验" class="headerlink" title="4. 加入JSR参数校验"></a>4. 加入JSR参数校验</h2><h3 id="4-1-JSR参数校验"><a href="#4-1-JSR参数校验" class="headerlink" title="4.1 JSR参数校验"></a>4.1 JSR参数校验</h3><ul>
<li>我们看如下，代码，在登录处理过程中，我们要用<code>代码</code>实现对前端传过来的id和password进行校验（我们这里是验证<code>非空</code>），引入JSR参数校验之后，能够将这些代码省去</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@PostMapping(&quot;/do_login&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;Boolean&gt; <span class="title function_">doLogin</span><span class="params">(LoginVo loginVo)</span>&#123;</span><br><span class="line">        log.info(loginVo.toString());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//参数校验</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">mobile</span> <span class="operator">=</span> loginVo.getMobile();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> loginVo.getPassword();</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(password))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.PASSWORD_EMPTY);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(! ValidatorUtil.isMobile(mobile))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.MOBILE_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">CodeMsg</span> <span class="variable">msg</span> <span class="operator">=</span> miaoShaUserService.login(loginVo);</span><br><span class="line">        <span class="keyword">if</span>(msg.getCode() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.success(<span class="literal">true</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">12345678910111213141516171819202122</span></span><br></pre></td></tr></table></figure>

<ul>
<li>进行JSR参数校验升级</li>
</ul>
<p>我们先看一下导入的包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">1234</span><br></pre></td></tr></table></figure>

<p>我们在doLogin()方法上，加上JSR验证，<code>@Valid</code>注解</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Result&lt;CodeMsg&gt; <span class="title function_">doLogin</span><span class="params">(<span class="meta">@Valid</span> LoginVo loginVo)</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>被标注的参数，我们进入它的实现类中，对其中的字段进行约束，如下（<code>@NotNull</code>，<code>@Length</code>，<code>@IsMobile</code>，其中@IsMobile是我们自定义的注解）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@IsMobile</span></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Length(min = 32)</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1234567891011</span></span><br></pre></td></tr></table></figure>

<h3 id="4-2-IsMobile自定义注解"><a href="#4-2-IsMobile自定义注解" class="headerlink" title="4.2 @IsMobile自定义注解"></a>4.2 @IsMobile自定义注解</h3><p>我们看一下它的代码（这个注解的写法，根据已有注解@NotNull，仿写而来），它实现的是对手机号码的验证</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD, ElementType.ANNOTATION_TYPE, ElementType.CONSTRUCTOR, ElementType.PARAMETER&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Constraint(</span></span><br><span class="line"><span class="meta">        validatedBy = &#123;IsMobileValidator.class&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> IsMobile &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">true</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//以下三条语句，足矣</span></span><br><span class="line">	<span class="comment">//我们在其中添加错误信息</span></span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;手机号码格式错误&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">123456789101112131415161718</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>@Target</code>：表示的是能够标注的范围</li>
<li><code>@Constraint</code>：这个注解帮助我们处理逻辑，其中有<code>IsMobileValidator.class</code>是真正处理逻辑的类，我们看看它的代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IsMobileValidator</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;IsMobile, String&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">required</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String s, ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(required)&#123;</span><br><span class="line">            <span class="comment">//在必须有值的情况下</span></span><br><span class="line">            <span class="keyword">return</span> ValidatorUtil.isMobile(s);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//在不要求有值的情况下</span></span><br><span class="line">            <span class="keyword">if</span>(StringUtils.isEmpty(s))&#123;</span><br><span class="line">                <span class="comment">//空值是允许的</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//有值就给它判断判断</span></span><br><span class="line">                <span class="keyword">return</span> ValidatorUtil.isMobile(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(IsMobile constraintAnnotation)</span> &#123;</span><br><span class="line">        required = constraintAnnotation.required();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1234567891011121314151617181920212223242526</span></span><br></pre></td></tr></table></figure>

<ul>
<li>先看类的声明部分，public class IsMobileValidator implements <code>ConstraintValidator</code>，它有两个泛型，第一个是<code>自定义的注解类</code>，第二个是要<code>验证的参数类型</code>，另外实现该接口的逻辑类，<code>被spring管理成bean</code>，可以在需要的地方进行装配</li>
<li>其中有一个<code>initialize</code>，初始化方法，它调用的是我们自定义注解中写的<code>required()</code>方法，默认需要有值</li>
<li>另一个方法<code>isValid</code>，则对逻辑进行验证，true验证通过，false验证失败</li>
</ul>
<hr>
<h2 id="5-全局异常处理器"><a href="#5-全局异常处理器" class="headerlink" title="5. 全局异常处理器"></a>5. 全局异常处理器</h2><h3 id="5-1-我们为什么要引入全局异常处理器？"><a href="#5-1-我们为什么要引入全局异常处理器？" class="headerlink" title="5.1 我们为什么要引入全局异常处理器？"></a>5.1 我们为什么要引入全局异常处理器？</h3><ul>
<li>一边想，一边看一下下面这个方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> CodeMsg <span class="title function_">login</span><span class="params">(LoginVo loginVo)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(loginVo == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> CodeMsg.SERVER_ERROR;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">mobile</span> <span class="operator">=</span> loginVo.getMobile();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> loginVo.getPassword();</span><br><span class="line">        <span class="comment">//判断手机号是否存在</span></span><br><span class="line">        <span class="type">MiaoShaUser</span> <span class="variable">user</span> <span class="operator">=</span> getById(Long.parseLong(mobile));</span><br><span class="line">        <span class="keyword">if</span>(user == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> CodeMsg.MOBILE_NOT_EXIST;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//验证密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">DBPass</span> <span class="operator">=</span> user.getPassword();</span><br><span class="line">        <span class="comment">//这里对前端来的密码第二次MD5处理</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">formPassToDBPass</span> <span class="operator">=</span> MD5Util.formPassToDBPass(password, user.getSalt());</span><br><span class="line">        <span class="keyword">if</span>(!formPassToDBPass.equals(DBPass))&#123;</span><br><span class="line">            <span class="keyword">return</span> CodeMsg.PASSWORD_ERROR;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> CodeMsg.SUCCESS;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">1234567891011121314151617181920212223</span></span><br></pre></td></tr></table></figure>

<p>它的返回值是CodeMsg，而在业务中，方法对应的返回值应该是<code>确切的</code>，我们登陆，返回应该为 true 或 false，所以，我们要对这里进行优化</p>
<h3 id="5-2-优化"><a href="#5-2-优化" class="headerlink" title="5.2 优化"></a>5.2 优化</h3><p>代码如下</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">login</span><span class="params">(LoginVo loginVo)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(loginVo == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">GlobalException</span>(CodeMsg.SERVER_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">mobile</span> <span class="operator">=</span> loginVo.getMobile();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> loginVo.getPassword();</span><br><span class="line">        <span class="comment">//判断手机号是否存在</span></span><br><span class="line">        <span class="type">MiaoShaUser</span> <span class="variable">user</span> <span class="operator">=</span> getById(Long.parseLong(mobile));</span><br><span class="line">        <span class="keyword">if</span>(user == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">GlobalException</span>(CodeMsg.MOBILE_NOT_EXIST);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//验证密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">DBPass</span> <span class="operator">=</span> user.getPassword();</span><br><span class="line">        <span class="comment">//这里对前端来的密码第二次MD5处理</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">formPassToDBPass</span> <span class="operator">=</span> MD5Util.formPassToDBPass(password, user.getSalt());</span><br><span class="line">        <span class="keyword">if</span>(!formPassToDBPass.equals(DBPass))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">GlobalException</span>(CodeMsg.PASSWORD_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">1234567891011121314151617181920212223</span></span><br></pre></td></tr></table></figure>

<p>我们可以发现，对应的参数验证，并没有返回值，而是直接<code>抛出异常</code>，而且我们也将<code>返回值进行了修改</code>，执行到方法的最后，能够返回ture</p>
<h3 id="5-3-全局异常"><a href="#5-3-全局异常" class="headerlink" title="5.3 全局异常"></a>5.3 全局异常</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> CodeMsg codeMsg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GlobalException</span><span class="params">(CodeMsg codeMsg)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.codeMsg = codeMsg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CodeMsg <span class="title function_">getCodeMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> codeMsg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1234567891011</span></span><br></pre></td></tr></table></figure>

<ul>
<li>全局异常就比较简单了，它<code>继承了RuntimeException类</code>，其中包含我们需要返回的信息CodeMsg的字段</li>
</ul>
<h3 id="5-4-全局异常处理器"><a href="#5-4-全局异常处理器" class="headerlink" title="5.4 全局异常处理器"></a>5.4 全局异常处理器</h3><p>这个处理器可就值得说一说了！</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result&lt;String&gt; <span class="title function_">exceptionHandler</span><span class="params">(HttpServletRequest request,Exception e)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(e <span class="keyword">instanceof</span> GlobalException)&#123;</span><br><span class="line">            <span class="type">GlobalException</span> <span class="variable">ge</span> <span class="operator">=</span> (GlobalException) e;</span><br><span class="line"></span><br><span class="line">            <span class="type">CodeMsg</span> <span class="variable">codeMsg</span> <span class="operator">=</span> ge.getCodeMsg();</span><br><span class="line">            <span class="keyword">return</span> Result.error(codeMsg);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(e <span class="keyword">instanceof</span> BindException)&#123;</span><br><span class="line">            <span class="comment">//获取错误列表，拿取其中的第一个</span></span><br><span class="line">            <span class="type">BindException</span> <span class="variable">be</span> <span class="operator">=</span> (BindException) e;</span><br><span class="line">            List&lt;ObjectError&gt; allErrors = be.getAllErrors();</span><br><span class="line">            <span class="type">ObjectError</span> <span class="variable">error</span> <span class="operator">=</span> allErrors.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> error.getDefaultMessage();</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.BIND_ERROR.fillArgs(message));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(CodeMsg.SERVER_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">12345678910111213141516171819202122232425</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>@ControllerAdvice</code>：它是增强的Controller，能够实现<code>全局异常处理</code>和全局数据绑定</li>
<li>配合<code>@ExceptionHandler(value = Exception.class)</code>，它能够实现对所有异常的接受，而在方法中，对不同的异常进行处理</li>
</ul>
<hr>
<h2 id="6-关注一下参数替换的方法"><a href="#6-关注一下参数替换的方法" class="headerlink" title="6. 关注一下参数替换的方法"></a>6. 关注一下参数替换的方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">CodeMsg</span> <span class="variable">BIND_ERROR</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CodeMsg</span>(<span class="number">500101</span>,<span class="string">&quot;参数校验异常：%s&quot;</span>);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> CodeMsg <span class="title function_">fillArgs</span><span class="params">(Object... args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">code</span> <span class="operator">=</span> <span class="built_in">this</span>.code;</span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> String.format(<span class="built_in">this</span>.msg, args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CodeMsg</span>(code,message);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure>

<ul>
<li>其中<code>String.format()</code>能够根据传入的字符串格式，比如”参数校验异常：%s”，其中<code>%s</code>，能被第二个传入的参数进行替换，从而形成<code>动态的字符串</code></li>
</ul>

    </div>

    
    
    

    <footer class="post-footer">
          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>Post author:  </strong>Kayleh
  </li>
  <li class="post-copyright-link">
      <strong>Post link: </strong>
      <a href="https://blog.kayleh.top/posts/Java-high-performance-and-high-concurrency-spike-system-2" title="Java高性能高并发秒杀系统(2)">https://blog.kayleh.top/posts/Java-high-performance-and-high-concurrency-spike-system-2</a>
  </li>
  <li class="post-copyright-license">
      <strong>Copyright Notice:  </strong>All articles in this blog are licensed under <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</span> unless stating additionally.
  </li>
</ul>
</div>

          <div class="followme">
  <span>Welcome to my other publishing channels</span>

  <div class="social-list">

      <div class="social-item">
          <a target="_blank" class="social-link" href="/atom.xml">
            <span class="icon">
              <i class="fa fa-rss"></i>
            </span>

            <span class="label">RSS</span>
          </a>
      </div>
  </div>
</div>

          <div class="post-tags">
              <a href="/tags/project/" rel="tag"><i class="fa fa-tag"></i> project</a>
          </div>

        
  <div class="social-like a2a_kit a2a_kit_size_32 a2a_default_style">
    <a class="a2a_dd" target="_blank" rel="noopener" href="https://www.addtoany.com/share"></a>
      <a class="a2a_button_facebook"></a>
      <a class="a2a_button_twitter"></a>
  </div>

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/posts/Java-high-performance-and-high-concurrency-spike-system" rel="prev" title="Java高性能高并发秒杀系统">
                  <i class="fa fa-angle-left"></i> Java高性能高并发秒杀系统
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/posts/Java-high-performance-and-high-concurrency-spike-system-3" rel="next" title="Java高性能高并发秒杀系统(3)">
                  Java高性能高并发秒杀系统(3) <i class="fa fa-angle-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






    <div class="comments gitalk-container"></div>
</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">

  <div class="copyright">
    &copy; 2019 – 
    <span itemprop="copyrightYear">2025</span>
    <span class="with-love">
      <i class="fa fa-heart"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">true</span>
  </div>
<div class="busuanzi-count">
    <span class="post-meta-item" id="busuanzi_container_site_uv">
      <span class="post-meta-item-icon">
        <i class="fa fa-user"></i>
      </span>
      <span class="site-uv" title="Total Visitors">
        <span id="busuanzi_value_site_uv"></span>
      </span>
    </span>
    <span class="post-meta-item" id="busuanzi_container_site_pv">
      <span class="post-meta-item-icon">
        <i class="fa fa-eye"></i>
      </span>
      <span class="site-pv" title="Total Views">
        <span id="busuanzi_value_site_pv"></span>
      </span>
    </span>
</div>

    </div>
  </footer>

  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>
  <div class="sidebar-dimmer"></div>
  <div class="back-to-top" role="button" aria-label="Back to top">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script size="300" alpha="0.6" zIndex="-1" src="https://cdnjs.cloudflare.com/ajax/libs/ribbon.js/1.0.2/ribbon.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/next-theme-pjax/0.6.0/pjax.min.js" integrity="sha256-vxLn1tSKWD4dqbMRyv940UYw4sXgMtYcK6reefzZrao=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.umd.js" integrity="sha256-a+H7FYzJv6oU2hfsfDGM2Ohw/cR9v+hPfxHCLdmCrE8=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.1.0/medium-zoom.min.js" integrity="sha256-ZgMyDAIYDYGxbcpJcfUnYwNevG/xi9OHKaR/8GK+jWc=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/sidebar.js"></script><script src="/js/next-boot.js"></script><script src="/js/pjax.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/hexo-generator-searchdb/1.4.1/search.js" integrity="sha256-1kfA5uHPf65M5cphT2dvymhkuyHPQp5A53EGZOnOLmc=" crossorigin="anonymous"></script>
<script src="/js/third-party/search/local-search.js"></script>
<script src="//code.tidio.co/dq5klo9ydptaxokj83vcwnusf63dogzr.js"></script>
<script src="/js/third-party/chat/tidio.js"></script>




  <script src="/js/third-party/fancybox.js"></script>

  <script src="/js/third-party/pace.js"></script>

  <script src="/js/third-party/addtoany.js"></script>

  
  <script data-pjax async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>




  

  <script class="next-config" data-name="enableMath" type="application/json">false</script><script class="next-config" data-name="mathjax" type="application/json">{"enable":true,"tags":"ams","js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js","integrity":"sha256-MASABpB4tYktI2Oitl4t+78w/lyA+D7b/s9GEP0JOGI="}}</script>
<script src="/js/third-party/math/mathjax.js"></script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.css" integrity="sha256-AJnUHL7dBv6PGaeyPQJcgQPDjt/Hn/PvYZde1iqfp8U=" crossorigin="anonymous">

<script class="next-config" data-name="gitalk" type="application/json">{"enable":true,"github_id":"Kayleh","repo":"kayleh.top.giscus","client_id":"Ov23liJZlhhVSuSynF9Q","client_secret":"d16c7023956f130d20927ad469dfe83295864094","admin_user":"Kayleh","distraction_free_mode":true,"proxy":"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token","language":null,"js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.min.js","integrity":"sha256-MVK9MGD/XJaGyIghSVrONSnoXoGh3IFxLw0zfvzpxR4="},"path_md5":"228980030f4144bc175430d11f4257dc"}</script>
<script src="/js/third-party/comments/gitalk.js"></script>

</body>
</html>
