<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 7.3.0">
<link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/mygo.jpg">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/mygo.jpg">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha256-dABdfBfUoC8vJUBOwGVdm8L9qlMWaHTIfXt+7GnZCIo=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.css" integrity="sha256-gkQVf8UKZgQ0HyuxL/VnacadJ+D2Kox2TCEBuNQg5+w=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/themes/blue/pace-theme-center-simple.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/pace.min.js" integrity="sha256-gqd7YTjg/BtfqWSwsJOvndl0Bxc8gFImLEkXQT8+qj0=" crossorigin="anonymous"></script>

<script class="next-config" data-name="main" type="application/json">{"hostname":"blog.kayleh.top","root":"/","images":"/images","scheme":"Gemini","darkmode":true,"version":"8.22.0","exturl":true,"sidebar":{"position":"left","width_expanded":320,"width_dual_column":240,"display":"post","padding":18,"offset":12},"hljswrap":true,"copycode":{"enable":false,"style":null},"fold":{"enable":false,"height":500},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":true,"lazyload":true,"pangu":false,"comments":{"style":"tabs","active":"gitalk","storage":true,"lazyload":true,"nav":null,"activeClass":"gitalk"},"stickytabs":false,"motion":{"enable":true,"async":false,"duration":200,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"i18n":{"placeholder":"Searching...","empty":"We didn't find any results for the search: ${query}","hits_time":"${hits} results found in ${time} ms","hits":"${hits} results found"}}</script><script src="/js/config.js"></script>

<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7457165067653912"
     crossorigin="anonymous"></script>
    <meta name="description" content="善于利用指针 Good use of pointers  指针">
<meta property="og:type" content="blog">
<meta property="og:title" content="Good use of pointers">
<meta property="og:url" content="https://blog.kayleh.top/posts/Good-use-of-pointers">
<meta property="og:site_name" content="Kayleh&#39;s Blog">
<meta property="og:description" content="善于利用指针 Good use of pointers  指针">
<meta property="og:locale" content="en_US">
<meta property="article:published_time" content="2020-10-25T09:18:07.000Z">
<meta property="article:modified_time" content="2025-02-03T16:14:08.806Z">
<meta property="article:author" content="Kayleh">
<meta property="article:tag" content="C">
<meta name="twitter:card" content="summary">


<link rel="canonical" href="https://blog.kayleh.top/posts/Good-use-of-pointers">


<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"en","comments":true,"permalink":"https://blog.kayleh.top/posts/Good-use-of-pointers","path":"posts/Good-use-of-pointers","title":"Good use of pointers"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>Good use of pointers | Kayleh's Blog</title>
  




  <script>
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "q44a4p85n0");
</script>




  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Kayleh's Blog</p>
      <i class="logo-line"></i>
    </a>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="Search" role="button">
        <i class="fa fa-search fa-fw fa-lg"></i>
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-home fa-fw"></i>Home</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>Archives<span class="badge">247</span></a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>About</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>Tags<span class="badge">34</span></a></li><li class="menu-item menu-item-friends"><a href="/friends" rel="section"><i class="fa fa-heartbeat fa-fw"></i>friends</a></li><li class="menu-item menu-item-sitemap"><a href="/rss.xml" rel="section"><i class="fa fa-sitemap fa-fw"></i>Sitemap</a></li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>Search
        </a>
      </li>
  </ul>
</nav>



  <div class="search-pop-overlay">
    <div class="popup search-popup">
      <div class="search-header">
        <span class="search-icon">
          <i class="fa fa-search"></i>
        </span>
        <div class="search-input-container">
          <input autocomplete="off" autocapitalize="off" maxlength="80"
                placeholder="Searching..." spellcheck="false"
                type="search" class="search-input">
        </div>
        <span class="popup-btn-close" role="button">
          <i class="fa fa-times-circle"></i>
        </span>
      </div>
      <div class="search-result-container">
        <div class="search-result-icon">
          <i class="fa fa-spinner fa-pulse fa-5x"></i>
        </div>
      </div>
    </div>
  </div>

</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%96%84%E4%BA%8E%E5%88%A9%E7%94%A8%E6%8C%87%E9%92%88"><span class="nav-number">1.</span> <span class="nav-text">善于利用指针</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8C%87%E9%92%88"><span class="nav-number">1.1.</span> <span class="nav-text">指针</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8C%87%E5%90%91"><span class="nav-number">1.1.1.</span> <span class="nav-text">指向</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.2.</span> <span class="nav-text">指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E8%AE%BF%E9%97%AE%E6%95%B4%E5%9E%8B%E5%8F%98%E9%87%8F"><span class="nav-number">1.2.0.0.1.</span> <span class="nav-text">通过指针变量访问整型变量.</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%80%8E%E4%B9%88%E5%AE%9A%E4%B9%89%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.2.1.</span> <span class="nav-text">怎么定义指针变量</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%80%8E%E6%A0%B7%E5%BC%95%E7%94%A8%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.2.2.</span> <span class="nav-text">怎样引用指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E8%BE%93%E5%85%A5a%E5%92%8Cb%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%EF%BC%8C%E6%8C%89%E5%85%88%E5%A4%A7%E5%90%8E%E5%B0%8F%E7%9A%84%E9%A1%BA%E5%BA%8F%E8%BE%93%E5%87%BA%E3%80%82"><span class="nav-number">1.2.2.0.1.</span> <span class="nav-text">输入a和b两个整数，按先大后小的顺序输出。</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E4%BD%9C%E4%B8%BA%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0"><span class="nav-number">1.3.</span> <span class="nav-text">指针变量作为函数参数</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#heavy-check-mark-%E8%BE%93%E5%85%A5a%E5%92%8Cb%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%EF%BC%8C%E6%8C%89%E5%85%88%E5%A4%A7%E5%90%8E%E5%B0%8F%E7%9A%84%E9%A1%BA%E5%BA%8F%E8%BE%93%E5%87%BA%E3%80%82"><span class="nav-number">1.3.0.0.1.</span> <span class="nav-text">:heavy_check_mark: 输入a和b两个整数，按先大后小的顺序输出。</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#x-%E4%B8%8D%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E6%89%A7%E8%A1%8C%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E6%9D%A5%E6%94%B9%E5%8F%98%E5%AE%9E%E5%8F%82%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC-%E4%BD%86%E6%98%AF%E5%8F%AF%E4%BB%A5%E6%94%B9%E5%8F%98%E5%AE%9E%E5%8F%82%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E6%89%80%E6%8C%87%E5%8F%98%E9%87%8F%E7%9A%84%E5%80%BC"><span class="nav-number">1.3.0.0.2.</span> <span class="nav-text">:x:不可以通过执行调用函数来改变实参指针变量的值,但是可以改变实参指针变量所指变量的值:</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E5%BC%95%E7%94%A8%E6%95%B0%E7%BB%84"><span class="nav-number">1.4.</span> <span class="nav-text">通过指针引用数组</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%9C%A8%E5%BC%95%E7%94%A8%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E6%97%B6%E6%8C%87%E9%92%88%E7%9A%84%E8%BF%90%E7%AE%97"><span class="nav-number">1.4.0.1.</span> <span class="nav-text">在引用数组元素时指针的运算.</span></a></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E5%BC%95%E7%94%A8%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0"><span class="nav-number">1.5.</span> <span class="nav-text">通过指针引用数组元素</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%BC%95%E7%94%A8%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E6%9C%89%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95"><span class="nav-number">1.5.0.1.</span> <span class="nav-text">引用数组元素有两种方法</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B4%E5%9E%8B%E6%95%B0%E7%BB%84a-%E6%9C%8910%E4%B8%AA%E5%85%83%E7%B4%A0-%E8%A6%81%E6%B1%82%E8%BE%93%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%A8%E9%83%A8%E5%85%83%E7%B4%A0"><span class="nav-number">1.5.0.1.1.</span> <span class="nav-text">有一个整型数组a,有10个元素,要求输出数组中的全部元素.</span></a><ol class="nav-child"><li class="nav-item nav-level-6"><a class="nav-link" href="#%E7%BB%93%E8%AE%BA"><span class="nav-number">1.5.0.1.1.1.</span> <span class="nav-text">结论</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%94%A8%E6%95%B0%E7%BB%84%E5%90%8D%E4%BD%9C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0"><span class="nav-number">1.5.1.</span> <span class="nav-text">用数组名作函数参数</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%B0%86%E6%95%B0%E7%BB%84a%E4%B8%ADn%E4%B8%AA%E6%95%B4%E6%95%B0%E6%8C%89%E7%9B%B8%E5%8F%8D%E9%A1%BA%E5%BA%8F%E5%AD%98%E6%94%BE"><span class="nav-number">1.5.1.0.1.</span> <span class="nav-text">将数组a中n个整数按相反顺序存放.</span></a></li></ol></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%BD%92%E7%BA%B3%E5%88%86%E6%9E%90"><span class="nav-number">1.5.1.1.</span> <span class="nav-text">归纳分析</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E7%94%A8%E6%8C%87%E9%92%88%E6%96%B9%E6%B3%95%E5%AF%B910%E4%B8%AA%E6%95%B4%E6%95%B0%E6%8C%89%E7%94%B1%E5%A4%A7%E5%88%B0%E5%B0%8F%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%BA%8F"><span class="nav-number">1.5.1.1.1.</span> <span class="nav-text">用指针方法对10个整数按由大到小顺序排序</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E6%8C%87%E5%90%91%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84"><span class="nav-number">1.6.</span> <span class="nav-text">通过指针指向多维数组</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%9C%B0%E5%9D%80"><span class="nav-number">1.6.0.1.</span> <span class="nav-text">多维数组的地址</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8C%87%E5%90%91%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.6.1.</span> <span class="nav-text">指向多维数组的指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%8C%87%E5%90%91%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.6.1.1.</span> <span class="nav-text">指向数组元素的指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89%E4%B8%80%E4%B8%AA3%C3%974%E7%9A%84%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%EF%BC%8C%E8%A6%81%E6%B1%82%E7%94%A8%E6%8C%87%E5%90%91%E5%85%83%E7%B4%A0%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E8%BE%93%E5%87%BA%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E5%90%84%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC"><span class="nav-number">1.6.1.1.1.</span> <span class="nav-text">有一个3×4的二维数组，要求用指向元素的指针变量输出二维数组各元素的值</span></a></li></ol></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%8C%87%E5%90%91%E7%94%B1m%E4%B8%AA%E5%85%83%E7%B4%A0%E7%BB%84%E6%88%90%E7%9A%84%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.6.1.2.</span> <span class="nav-text">指向由m个元素组成的一维数组的指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E8%BE%93%E5%87%BA%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%BB%BB%E4%B8%80%E8%A1%8C%E4%BB%BB%E4%B8%80%E5%88%97%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC"><span class="nav-number">1.6.1.2.1.</span> <span class="nav-text">输出二维数组任一行任一列元素的值</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%88%86%E6%9E%90%E4%B8%8B%E5%88%97%E7%A8%8B%E5%BA%8F"><span class="nav-number">1.6.1.2.2.</span> <span class="nav-text">分析下列程序</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%94%A8%E6%8C%87%E5%90%91%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88%E4%BD%9C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0"><span class="nav-number">1.6.2.</span> <span class="nav-text">用指向数组的指针作函数参数</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89%E4%B8%80%E4%B8%AA%E7%8F%AD-3%E4%B8%AA%E5%AD%A6%E7%94%9F-%E5%90%84%E5%AD%A64%E9%97%A8%E8%AF%BE-%E8%AE%A1%E7%AE%97%E6%80%BB%E5%B9%B3%E5%9D%87%E5%88%86%E6%95%B0%E4%BB%A5%E5%8F%8A%E7%AC%ACn%E4%B8%AA%E5%AD%A6%E7%94%9F%E7%9A%84%E6%88%90%E7%BB%A9"><span class="nav-number">1.6.2.0.1.</span> <span class="nav-text">有一个班,3个学生,各学4门课,计算总平均分数以及第n个学生的成绩.</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#eight-pointed-black-star-%E5%AE%9E%E5%8F%82%E5%92%8C%E5%BD%A2%E5%8F%82%E5%A6%82%E6%9E%9C%E6%98%AF%E6%8C%87%E9%92%88%E7%B1%BB%E5%9E%8B%EF%BC%8C%E5%BA%94%E5%BD%93%E6%B3%A8%E6%84%8F%E5%AE%83%E4%BB%AC%E7%9A%84%E5%9F%BA%E7%B1%BB%E5%9E%8B%E5%BF%85%E9%A1%BB%E4%B8%80%E8%87%B4"><span class="nav-number">1.6.2.0.2.</span> <span class="nav-text">:eight_pointed_black_star:实参和形参如果是指针类型，应当注意它们的基类型必须一致.</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9F%A5%E6%89%BE%E6%9C%89%E4%B8%80%E9%97%A8%E4%BB%A5%E4%B8%8A%E8%AF%BE%E7%A8%8B%E4%B8%8D%E5%8F%8A%E6%A0%BC%E7%9A%84%E5%AD%A6%E7%94%9F-%E8%BE%93%E5%87%BA%E4%BB%96%E4%BB%AC%E5%85%A8%E9%83%A8%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%88%90%E7%BB%A9"><span class="nav-number">1.6.2.0.3.</span> <span class="nav-text">查找有一门以上课程不及格的学生,输出他们全部课程的成绩</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E9%80%9A%E8%BF%87%E6%8C%87%E9%92%88%E5%BC%95%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2"><span class="nav-number">1.7.</span> <span class="nav-text">通过指针引用字符串</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%BC%95%E7%94%A8%E6%96%B9%E6%B3%95"><span class="nav-number">1.7.0.1.</span> <span class="nav-text">字符串的引用方法</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E7%94%A8-s%E8%83%BD%E5%AF%B9%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9B%E8%A1%8C%E6%95%B4%E4%BD%93%E7%9A%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA"><span class="nav-number">1.7.0.2.</span> <span class="nav-text">用%s能对一个字符串进行整体的输入输出.</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2a%E5%A4%8D%E5%88%B6%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2b-%E7%84%B6%E5%90%8E%E8%BE%93%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2b"><span class="nav-number">1.7.0.2.1.</span> <span class="nav-text">将字符串a复制为字符串b,然后输出字符串b</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%AD%97%E7%AC%A6%E6%8C%87%E9%92%88%E4%BD%9C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0"><span class="nav-number">1.7.1.</span> <span class="nav-text">字符指针作函数参数</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E7%94%A8%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%8D%E5%88%B6"><span class="nav-number">1.7.1.0.1.</span> <span class="nav-text">用函数调用实现字符串的复制</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E4%BD%BF%E7%94%A8%E5%AD%97%E7%AC%A6%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E5%92%8C%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%E7%9A%84%E6%AF%94%E8%BE%83"><span class="nav-number">1.7.2.</span> <span class="nav-text">使用字符指针变量和字符数组的比较</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8C%87%E5%90%91%E5%87%BD%E6%95%B0%E7%9A%84%E6%8C%87%E9%92%88"><span class="nav-number">1.8.</span> <span class="nav-text">指向函数的指针</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%94%A8%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0"><span class="nav-number">1.8.1.</span> <span class="nav-text">用函数指针变量调用函数.</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E7%94%A8%E5%87%BD%E6%95%B0%E6%B1%82a%E5%92%8Cb%E4%B8%AD%E7%9A%84%E5%A4%A7%E8%80%85"><span class="nav-number">1.8.1.0.1.</span> <span class="nav-text">用函数求a和b中的大者.</span></a></li></ol></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%80%8E%E4%B9%88%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BD%BF%E7%94%A8%E6%8C%87%E5%90%91%E5%87%BD%E6%95%B0%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.8.1.1.</span> <span class="nav-text">怎么定义和使用指向函数的指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E8%BE%93%E5%85%A5%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0-%E8%AE%A9%E7%94%A8%E6%88%B7%E9%80%89%E6%8B%A91%E6%88%962-%E9%80%891%E6%97%B6%E8%B0%83%E7%94%A8max%E5%87%BD%E6%95%B0-%E8%BE%93%E5%87%BA%E4%BA%8C%E8%80%85%E4%B8%AD%E7%9A%84%E5%A4%A7%E6%95%B0-%E9%80%892%E6%97%B6%E8%B0%83%E7%94%A8min%E5%87%BD%E6%95%B0-%E8%BE%93%E5%87%BA%E4%BA%8C%E8%80%85%E4%B8%AD%E7%9A%84%E5%B0%8F%E6%95%B0"><span class="nav-number">1.8.1.1.1.</span> <span class="nav-text">输入两个整数,让用户选择1或2,选1时调用max函数,输出二者中的大数,选2时调用min函数,输出二者中的小数.</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%94%A8%E6%8C%87%E5%90%91%E5%87%BD%E6%95%B0%E7%9A%84%E6%8C%87%E9%92%88%E4%BD%9C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0"><span class="nav-number">1.8.2.</span> <span class="nav-text">用指向函数的指针作函数参数</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0a%E5%92%8Cb-%E7%94%B1%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A51-2%E5%92%8C3-%E5%A6%82%E8%BE%93%E5%85%A51-%E7%A8%8B%E5%BA%8F%E5%B0%B1%E7%BB%99%E5%87%BAa%E5%92%8Cb%E4%B8%AD%E7%9A%84%E5%A4%A7%E8%80%85-%E8%BE%93%E5%85%A52-%E7%A8%8B%E5%BA%8F%E5%B0%B1%E7%BB%99%E5%87%BAa%E5%92%8Cb%E4%B8%AD%E7%9A%84%E5%B0%8F%E8%80%85-%E8%BE%93%E5%85%A53-%E5%88%99%E6%B1%82a%E4%B8%8Eb%E4%B9%8B%E5%92%8C"><span class="nav-number">1.8.2.0.1.</span> <span class="nav-text">有两个整数a和b,由用户输入1,2和3.如输入1,程序就给出a和b中的大者.输入2,程序就给出a和b中的小者.输入3,则求a与b之和.</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E8%BF%94%E5%9B%9E%E6%8C%87%E9%92%88%E5%80%BC%E7%9A%84%E5%87%BD%E6%95%B0"><span class="nav-number">1.8.3.</span> <span class="nav-text">返回指针值的函数</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89a%E4%B8%AA%E5%AD%A6%E7%94%9F-%E6%AF%8F%E4%B8%AA%E5%AD%A6%E7%94%9F%E6%9C%89b%E9%97%A8%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%88%90%E7%BB%A9-%E8%A6%81%E6%B1%82%E5%9C%A8%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E5%AD%A6%E7%94%9F%E5%BA%8F%E5%8F%B7%E4%BB%A5%E5%90%8E-%E8%83%BD%E8%BE%93%E5%87%BA%E8%AF%A5%E5%AD%A6%E7%94%9F%E7%9A%84%E5%85%A8%E9%83%A8%E6%88%90%E7%BB%A9-%E7%94%A8%E6%8C%87%E9%92%88%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0"><span class="nav-number">1.8.3.0.1.</span> <span class="nav-text">有a个学生,每个学生有b门课程的成绩,要求在用户输入学生序号以后,能输出该学生的全部成绩.用指针函数实现</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%89%BE%E5%87%BA%E5%85%B6%E4%B8%AD%E6%9C%89%E4%B8%8D%E5%8F%8A%E6%A0%BC%E7%9A%84%E8%AF%BE%E7%A8%8B%E7%9A%84%E5%AD%A6%E7%94%9F%E5%8F%8A%E5%85%B6%E5%AD%A6%E7%94%9F%E5%8F%B7"><span class="nav-number">1.8.3.0.2.</span> <span class="nav-text">找出其中有不及格的课程的学生及其学生号.</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E5%92%8C%E5%A4%9A%E7%BB%B4%E6%8C%87%E9%92%88"><span class="nav-number">1.9.</span> <span class="nav-text">指针数组和多维指针</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%B0%86%E8%8B%A5%E5%B9%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8C%89%E5%AD%97%E6%AF%8D%E9%A1%BA%E5%BA%8F-%E7%94%B1%E5%B0%8F%E5%88%B0%E5%A4%A7-%E8%BE%93%E5%87%BA"><span class="nav-number">1.9.0.0.1.</span> <span class="nav-text">将若干字符串按字母顺序(由小到大)输出.</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8C%87%E5%90%91%E6%8C%87%E9%92%88%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.9.1.</span> <span class="nav-text">指向指针数据的指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%AE%9A%E4%B9%89"><span class="nav-number">1.9.1.1.</span> <span class="nav-text">定义</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E4%BD%BF%E7%94%A8%E6%8C%87%E5%90%91%E6%8C%87%E9%92%88%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">1.9.1.1.1.</span> <span class="nav-text">使用指向指针数据的指针变量</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89%E4%B8%80%E4%B8%AA%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84-%E5%85%B6%E5%85%83%E7%B4%A0%E5%88%86%E5%88%AB%E6%8C%87%E5%90%91%E4%B8%80%E4%B8%AA%E6%95%B4%E5%9E%8B%E6%95%B0%E7%BB%84%E7%9A%84%E5%85%83%E7%B4%A0-%E7%94%A8%E6%8C%87%E5%90%91%E6%8C%87%E9%92%88%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F-%E8%BE%93%E5%87%BA%E6%95%B4%E5%9E%8B%E6%95%B0%E7%BB%84%E5%90%84%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC"><span class="nav-number">1.9.1.1.2.</span> <span class="nav-text">有一个指针数组,其元素分别指向一个整型数组的元素,用指向指针数据的指针变量,输出整型数组各元素的值.</span></a></li></ol></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E9%97%B4%E6%8E%A5%E8%AE%BF%E9%97%AE"><span class="nav-number">1.9.1.2.</span> <span class="nav-text">间接访问</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E4%BD%9Cmain%E5%87%BD%E6%95%B0%E7%9A%84%E5%BD%A2%E5%8F%82"><span class="nav-number">1.9.2.</span> <span class="nav-text">指针数组作main函数的形参</span></a></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E4%B8%8E%E6%8C%87%E5%90%91%E5%AE%83%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F"><span class="nav-number">2.</span> <span class="nav-text">动态内存分配与指向它的指针变量</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%86%85%E5%AD%98%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D"><span class="nav-number">2.0.0.1.</span> <span class="nav-text">内存的动态分配</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%80%8E%E4%B9%88%E5%BB%BA%E7%AB%8B%E5%86%85%E5%AD%98%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D"><span class="nav-number">2.0.1.</span> <span class="nav-text">怎么建立内存的动态分配</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#void%E6%8C%87%E9%92%88%E7%B1%BB%E5%9E%8B"><span class="nav-number">2.0.2.</span> <span class="nav-text">void指针类型</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%BB%BA%E7%AB%8B%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84-%E8%BE%93%E5%85%A55%E4%B8%AA%E5%AD%A6%E7%94%9F%E7%9A%84%E6%88%90%E7%BB%A9-%E5%8F%A6%E5%A4%96%E7%94%A8%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E6%A3%80%E6%9F%A5%E5%85%B6%E4%B8%AD%E6%9C%89%E6%97%A0%E4%BD%8E%E4%BA%8E60%E5%88%86%E7%9A%84-%E8%BE%93%E5%87%BA%E4%B8%8D%E5%90%88%E6%A0%BC%E7%9A%84%E6%88%90%E7%BB%A9"><span class="nav-number">2.0.2.0.1.</span> <span class="nav-text">建立动态数组,输入5个学生的成绩,另外用一个函数检查其中有无低于60分的,输出不合格的成绩.</span></a></li></ol></li></ol></li></ol></li></ol></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="Kayleh"
      src="/images/mygo.jpg">
  <p class="site-author-name" itemprop="name">Kayleh</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">247</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
        <span class="site-state-item-count">5</span>
        <span class="site-state-item-name">categories</span>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">34</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author animated">
      <span class="links-of-author-item">
        <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaA==" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;kayleh"><i class="fab fa-github fa-fw"></i>GitHub</span>
      </span>
      <span class="links-of-author-item">
        <span class="exturl" data-url="bWFpbHRvOndlYnNpdGVAa2F5bGVoLnRvcA==" title="E-Mail → mailto:website@kayleh.top"><i class="fa fa-envelope fa-fw"></i>E-Mail</span>
      </span>
  </div>
  <div class="cc-license animated" itemprop="license">
    <span class="exturl cc-opacity" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><img src="https://cdnjs.cloudflare.com/ajax/libs/creativecommons-vocabulary/2020.11.3/assets/license_badges/small/by_nc_sa.svg" alt="Creative Commons"></span>
  </div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="en">
    <link itemprop="mainEntityOfPage" href="https://blog.kayleh.top/posts/Good-use-of-pointers">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/mygo.jpg">
      <meta itemprop="name" content="Kayleh">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="Good use of pointers | Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          Good use of pointers<span class="exturl post-edit-link" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaC9rYXlsZWguZ2l0aHViLmlvMi9lZGl0L21hc3Rlci9zb3VyY2UvX3Bvc3RzL0dvb2QtdXNlLW9mLXBvaW50ZXJzLm1k" title="Edit this post"><i class="fa fa-pen-nib"></i></span>
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">Posted on</span>

      <time title="Created: 2020-10-25 17:18:07" itemprop="dateCreated datePublished" datetime="2020-10-25T17:18:07+08:00">2020-10-25</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">Edited on</span>
      <time title="Modified: 2025-02-04 00:14:08" itemprop="dateModified" datetime="2025-02-04T00:14:08+08:00">2025-02-04</time>
    </span>

  
    <span class="post-meta-item" title="Views" id="busuanzi_container_page_pv">
      <span class="post-meta-item-icon">
        <i class="far fa-eye"></i>
      </span>
      <span class="post-meta-item-text">Views: </span>
      <span id="busuanzi_value_page_pv"></span>
    </span>
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><h1 id="善于利用指针"><a href="#善于利用指针" class="headerlink" title="善于利用指针"></a>善于利用指针</h1><blockquote>
<p>Good use of pointers</p>
</blockquote>
<h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><p>如果在程序中定义了一个变量，在对程序进行编译时，系统就会给这个变量分配内存单元。编译系统根据程序中定义的变量类型，分配一定长度的空间。</p>
<p>每一个字节都有一个编号，就是“地址”。</p>
<blockquote>
<p>地址指向该变量单元.地址形象化地称为”指针”,它能找到以它为地址的内存单元.</p>
</blockquote>
<p>c语言中的地址包括位置信息(内存编号,或称为纯地址)和它指向的数据的类型信息,或者说它是”带类型的地址”.</p>
<p>在程序中一般通过变量名来引用变量的值,</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>对变量的访问都是通过地址进行的.</p>
</blockquote>
<p>假如有输入语句:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;i);</span><br></pre></td></tr></table></figure>

<p>在执行时,把键盘输入的值送到地址为2000开始的整型存储单元中.</p>
<p>如果有语句:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k=i+j;</span><br></pre></td></tr></table></figure>

<p>则从2000<del>2003字节取出i的值(3),再从2004</del>2007字节取出j的值(6),将它们相加后再将其和(9)送到k所占用的2008~2011字节单元中.这种直接按变量名进行的访问称为”直接访问”</p>
<p>还可以采用另一种称为“间接访问”的方式，即将变量i的地址存放在另一变量中，然后通过该变量来找到变量i的地址。从而访问i变量。</p>
<blockquote>
<p>为了表示将数值3送到变量中，可以有两种表达方式：</p>
<ol>
<li><p>将3直接送到变量i所标识的单元中,例如”i&#x3D;3;”</p>
</li>
<li><p>将3送到变量<em>i_pointer</em>所指向的单元(即变量i的存储单元)，例如“<em>i_pointer&#x3D;3;</em>”,其中*<em>i_pointer</em>表示<em>i_pointer</em>所指向的对象，</p>
</li>
</ol>
</blockquote>
<h3 id="指向"><a href="#指向" class="headerlink" title="指向"></a><strong>指向</strong></h3><p>通过<em>i_pointer</em>能知道i的地址，从而找到变量<em>i</em>的内存单元。</p>
<p><em>i_pointer</em>指向<em>i</em></p>
<hr>
<h2 id="指针变量"><a href="#指针变量" class="headerlink" title="指针变量"></a>指针变量</h2><h5 id="通过指针变量访问整型变量"><a href="#通过指针变量访问整型变量" class="headerlink" title="通过指针变量访问整型变量."></a>通过指针变量访问整型变量.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">100</span>, b = <span class="number">10</span>;    <span class="comment">//定义整型变量a,b,并初始</span></span><br><span class="line">    <span class="type">int</span> *point_1, *point_2; <span class="comment">//定义指向整型数据的指针变量point_1,point_2</span></span><br><span class="line">    point_1 = &amp;a;           <span class="comment">//把变量a的地址赋给指针变量point_1</span></span><br><span class="line">    point_2 = &amp;b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*point_1=%d,*point_2=%d\n&quot;</span>, *point_1, *point_2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">-----</span><br><span class="line">a=<span class="number">100</span>,b=<span class="number">10</span></span><br><span class="line">*point_1=<span class="number">100</span>,*point_2=<span class="number">10</span></span><br></pre></td></tr></table></figure>

<h3 id="怎么定义指针变量"><a href="#怎么定义指针变量" class="headerlink" title="怎么定义指针变量"></a>怎么定义指针变量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类型名	* 指针变量名</span><br></pre></td></tr></table></figure>

<p>指针变量是基本数据类型派生出来的类型,它不能离开基本类型而独立存在.</p>
<hr>
<h3 id="怎样引用指针变量"><a href="#怎样引用指针变量" class="headerlink" title="怎样引用指针变量"></a>怎样引用指针变量</h3><p>1)给指针变量赋值</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p=&amp;a;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>指针变量p的值是变量a的地址,p指向a.</p>
</blockquote>
<p>2)引用指针变量指向的变量.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,*p);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>以整数形式输出指针变量p所指向的变量的值,即变量a的值.</p>
</blockquote>
<p>3)引用指针变量的值</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,p);</span><br></pre></td></tr></table></figure>

<p>以八进制数形式输出指针变量p的值，如果p指向了a，就是输出了a的地址，&amp;a.</p>
<h5 id="输入a和b两个整数，按先大后小的顺序输出。"><a href="#输入a和b两个整数，按先大后小的顺序输出。" class="headerlink" title="输入a和b两个整数，按先大后小的顺序输出。"></a>输入a和b两个整数，按先大后小的顺序输出。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, *point_a, *point_b, *temp;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter two integer number:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    point_a = &amp;a;</span><br><span class="line">    point_b = &amp;b;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = point_b;</span><br><span class="line">        point_b = point_a;</span><br><span class="line">        point_a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>, a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max=%d,min=%d\n&quot;</span>, *point_a, *point_b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="指针变量作为函数参数"><a href="#指针变量作为函数参数" class="headerlink" title="指针变量作为函数参数"></a>指针变量作为函数参数</h2><h5 id="heavy-check-mark-输入a和b两个整数，按先大后小的顺序输出。"><a href="#heavy-check-mark-输入a和b两个整数，按先大后小的顺序输出。" class="headerlink" title=":heavy_check_mark: 输入a和b两个整数，按先大后小的顺序输出。"></a>:heavy_check_mark: 输入a和b两个整数，按先大后小的顺序输出。</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, *point_a, *point_b;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *point_a, <span class="type">int</span> *point_b)</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter two integer number:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    point_a = &amp;a;</span><br><span class="line">    point_b = &amp;b;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">        swap(point_a, point_b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max=%d,min=%d\n&quot;</span>, *point_a, *point_b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *point_a, <span class="type">int</span> *point_b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    temp = *point_a;</span><br><span class="line">    *point_a = *point_b;</span><br><span class="line">    *point_b = temp;</span><br><span class="line">&#125;</span><br><span class="line">----------------</span><br><span class="line"><span class="comment">//如果写成:</span></span><br><span class="line"> 	<span class="type">int</span> *temp;</span><br><span class="line">    *temp = *point_a;<span class="comment">//此语句有错误,不能向一个未知的存储单元赋值.</span></span><br><span class="line">    point_a = *point_b;</span><br><span class="line">    point_b = *temp;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由于”<strong>单向传递</strong>“的值传递方式，形参值的改变不能使实参的值随之改变.</p>
<p>为了<strong>使在函数中改变了的变量值能被主调函数main所用</strong>,不能采取把改变值的变量作为参数的办法,</p>
<p>而应该用<code>指针变量</code>作为函数的参数,<strong>使指针变量所指向的变量值发生变化</strong>,在函数调用结束后,这些变量值的变化<strong>依然保留</strong>了下来.</p>
</blockquote>
<blockquote>
<p>————有关值传递请看：<span class="exturl" data-url="aHR0cHM6Ly9rYXlsZWgudG9wL3Bhc3MtYnktdmFsdWUv">值传递<i class="fa fa-external-link-alt"></i></span>—————————————————-</p>
</blockquote>
<h5 id="x-不可以通过执行调用函数来改变实参指针变量的值-但是可以改变实参指针变量所指变量的值"><a href="#x-不可以通过执行调用函数来改变实参指针变量的值-但是可以改变实参指针变量所指变量的值" class="headerlink" title=":x:不可以通过执行调用函数来改变实参指针变量的值,但是可以改变实参指针变量所指变量的值:"></a>:x:不可以通过执行调用函数来改变实参指针变量的值,但是可以改变实参指针变量所指变量的值:</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *point_a, <span class="type">int</span> *point_b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *temp;</span><br><span class="line">    temp = point_a;</span><br><span class="line">    point_a = point_b;</span><br><span class="line">    point_b = temp;</span><br><span class="line">&#125;</span><br><span class="line">------</span><br><span class="line">×无法改变</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="通过指针引用数组"><a href="#通过指针引用数组" class="headerlink" title="通过指针引用数组"></a>通过指针引用数组</h2><blockquote>
<p>数组元素的指针就是数组元素的地址</p>
</blockquote>
<p>可以用一个指针变量指向一个数组元素.如:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">10</span>]=&#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>&#125;;</span><br><span class="line"><span class="type">int</span> *p;</span><br><span class="line">p=&amp;a[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//也可以写成p=a;</span></span><br><span class="line">指针变量p的值是数组a首元素即a[<span class="number">0</span>]的地址.而不是数组a各元素的值.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="在引用数组元素时指针的运算"><a href="#在引用数组元素时指针的运算" class="headerlink" title="在引用数组元素时指针的运算."></a>在引用数组元素时指针的运算.</h4><blockquote>
<p>指针变量p指向数组元素a[0],希望用p+1表示指向下一个元素a[1];</p>
</blockquote>
<ul>
<li><p>系统会根据指针变量的基类型来确定增加的字节数.</p>
<p>如:</p>
<p>整型类型的指针变量int *p,</p>
<p>p+1就是位移一个数组元素(int)所占用的字节数也就是4.</p>
</li>
<li><p>如果p的初值为&amp;a[0],则p+i和a+i就是数组元素a[i]的地址.</p>
</li>
<li><p>*(p+i)或*(a+i)是p+i或a+i就是数组元素,即a[i].</p>
<p>实际上编译系统在编译时,对数组元素a[i]就是按*(a+i)处理的.即按数组首字母的地址加上相对位移量得到要找的元素的地址,然后找出该单元中的内容.</p>
</li>
</ul>
<blockquote>
<p>[ ]实际上是变址运算符,即将a[i]按a+i计算地址,然后找出此地址单元中的值.</p>
</blockquote>
<p>如果指针变量p1和p2都是指向同一数组元素的长度,如<strong>执行p2-p1,结果是p2-p1的值(两个地址之差)除以数组元素的长度.</strong></p>
<p>通过用p2-p1就可知道它们所指向元素的相对距离.</p>
<blockquote>
<p>两个地址不能相加,如p1+p2是无实际意义的.</p>
</blockquote>
<h2 id="通过指针引用数组元素"><a href="#通过指针引用数组元素" class="headerlink" title="通过指针引用数组元素"></a>通过指针引用数组元素</h2><h4 id="引用数组元素有两种方法"><a href="#引用数组元素有两种方法" class="headerlink" title="引用数组元素有两种方法"></a>引用数组元素有两种方法</h4><ul>
<li><p>下标法( 	a[i]	 )</p>
</li>
<li><p>指针法( 	*(a+i)或*(p+i),其中a是数组名,p是指向数组元素的指针变量.其初值为p&#x3D;a;	 )</p>
</li>
</ul>
<h5 id="有一个整型数组a-有10个元素-要求输出数组中的全部元素"><a href="#有一个整型数组a-有10个元素-要求输出数组中的全部元素" class="headerlink" title="有一个整型数组a,有10个元素,要求输出数组中的全部元素."></a>有一个整型数组a,有10个元素,要求输出数组中的全部元素.</h5><p>1)下标法:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, a[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter 10 integer numbers:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2)通过数组名计算数组元素地址,找出元素的值</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, a[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter 10 integer numbers:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, *(a + i));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3)用指针变量指向数组元素</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>], *p;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter 10 integer numbers:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (p = a; p &lt; (a + <span class="number">10</span>); p++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, p);</span><br><span class="line">    <span class="keyword">for</span> (p = a; p &lt; (a + <span class="number">10</span>); p++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, *p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h6><ul>
<li><p>第1和2种方法执行效率是相同的. 	<code>在编译时,对数组元素a[i]就是按*(a+i)处理的</code></p>
</li>
<li><p>第3种方法比第1和2种方法,用指针变量直接指向元素,不必每次都重新计算地址,像p++这样的自加操作是比较快的.这种有规律地改变地址值(p++)能大大提高效率.</p>
</li>
</ul>
<blockquote>
<p>多次使用指针变量时,应注意指针变量的位置,每次执行后可使指针变量重新指向数组a.</p>
</blockquote>
<h3 id="用数组名作函数参数"><a href="#用数组名作函数参数" class="headerlink" title="用数组名作函数参数"></a>用数组名作函数参数</h3><blockquote>
<p>可以用数组名作函数的参数.</p>
</blockquote>
<p>如:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[<span class="number">10</span>];</span><br><span class="line">    fun(<span class="built_in">array</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>C编译时是将形参数组名作为指针变量来处理的.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span><br><span class="line">等同于</span><br><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> n)</span></span><br></pre></td></tr></table></figure>

<p>:eight_pointed_black_star:由于形参数组名arr接收了实参数组首元素a[0]的地址.所以用数组名参数时,<strong>形参数组中各元素的值发生变化,实参数组元素的值也会发生变化.</strong></p>
<h5 id="将数组a中n个整数按相反顺序存放"><a href="#将数组a中n个整数按相反顺序存放" class="headerlink" title="将数组a中n个整数按相反顺序存放."></a>将数组a中n个整数按相反顺序存放.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">inv</span><span class="params">(<span class="type">int</span> [], <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> i, a[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter original array:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    inv(a, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The array has been inverted:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">inv</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j,temp,m=(n<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">         j = n - <span class="number">1</span> - i;</span><br><span class="line">        temp = arr[j];</span><br><span class="line">        arr[j] = arr[i];</span><br><span class="line">        arr[i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>指针变量作形参：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">inv</span><span class="params">(<span class="type">int</span> [], <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> i, a[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter original array:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    inv(a, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The array has been inverted:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">inv</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *p, *i, *j, temp, m = (n - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    i = arr;        <span class="comment">//头部的指针位置</span></span><br><span class="line">    j = arr + n - <span class="number">1</span>;<span class="comment">//末尾的指针位置</span></span><br><span class="line">    p = arr + m;    <span class="comment">//中值的指针位置</span></span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= p; ++i, j--)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = *j;</span><br><span class="line">        *j = *i;</span><br><span class="line">        *i = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="归纳分析"><a href="#归纳分析" class="headerlink" title="归纳分析"></a>归纳分析</h4><p>如果有一个实参数组,要想在函数中改变此数组中的元素的值,实参与形参的对应关系有:</p>
<ul>
<li><p>形参和实参都用数组名.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">    ...</span><br><span class="line">    f(a, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> x[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>实参用数组名,形参用指针变量</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>];</span><br><span class="line">    ...</span><br><span class="line">    f(a, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> *x, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>实参形参都是用指针变量</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],*p=a;</span><br><span class="line">    ...</span><br><span class="line">    f(p, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> *x, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>实参用指针变量,形参用数组名.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>],*p=a;</span><br><span class="line">    ...</span><br><span class="line">    f(p, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> x[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="用指针方法对10个整数按由大到小顺序排序"><a href="#用指针方法对10个整数按由大到小顺序排序" class="headerlink" title="用指针方法对10个整数按由大到小顺序排序"></a>用指针方法对10个整数按由大到小顺序排序</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> [], <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> i, a[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter original array:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    sort(a, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The array has been sorted:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, temp, max;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        max = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; len; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[max])</span><br><span class="line">                max = j;</span><br><span class="line">            <span class="keyword">if</span> (max != i)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = arr[i];</span><br><span class="line">                arr[i] = arr[max];</span><br><span class="line">                arr[max] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="通过指针指向多维数组"><a href="#通过指针指向多维数组" class="headerlink" title="通过指针指向多维数组"></a>通过指针指向多维数组</h2><h4 id="多维数组的地址"><a href="#多维数组的地址" class="headerlink" title="多维数组的地址"></a>多维数组的地址</h4><p>a[0]表示一维数组a[0]第0列元素的地址，即&amp;a[0][0].</p>
<p>a[0]+1表示a数组0行1列. </p>
<p>a[0]与*(a+0)等价，a[1]和*(a+1)等价，</p>
<blockquote>
<p>a[i]和*(a+i)等价</p>
</blockquote>
<ul>
<li>如果a是一维数组名，则a[i]表示a数组序号为i的元素的存储单元。</li>
<li>但如果a是二维数组，则a[i]是一维数组名，它只是一个地址，并不代表一个存储单元，也不代表存储单元的值(如同一维数组名只是一个指针变量一样)</li>
</ul>
<blockquote>
<ul>
<li>二维数组(如a)是指向行(一维数组)的。因此a+1的“1”代表一行中全部元素所占的字节数。a[0]+1中的1代表一个a元素所占的字节数。</li>
</ul>
<p><em><em>在指向行的指针前面加一个</em>，就转换为列的指针。</em>*</p>
<p><strong>反之，在列指针前面加一个&amp;，就转换为行的指针</strong></p>
<ul>
<li>一维数组名(如a[0],a[1])是指向列元素的。</li>
</ul>
</blockquote>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, a, *a);           <span class="comment">//0行的初始地址,0行0列的元素地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, a[<span class="number">0</span>], *(a + <span class="number">0</span>));  <span class="comment">//0行0列的元素地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, &amp;a[<span class="number">0</span>], &amp;a[<span class="number">0</span>][<span class="number">0</span>]); <span class="comment">//0行起始地址,0行0列的元素地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, a[<span class="number">1</span>], a + <span class="number">1</span>);     <span class="comment">//1行0列的元素地址,1行起始地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, &amp;a[<span class="number">1</span>][<span class="number">0</span>], *(a + <span class="number">1</span>) + <span class="number">0</span>);<span class="comment">//1行0列的元素地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, a[<span class="number">2</span>], *(a + <span class="number">2</span>));  <span class="comment">//2行0列的元素地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, &amp;a[<span class="number">2</span>], a + <span class="number">2</span>);    <span class="comment">//2行的起始地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, a[<span class="number">1</span>][<span class="number">0</span>], *(*(a + <span class="number">1</span>) + <span class="number">0</span>));<span class="comment">//1行0列的元素的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d\n&quot;</span>, *a[<span class="number">2</span>], *(*(a + <span class="number">2</span>) + <span class="number">0</span>));<span class="comment">//2行0列的元素的值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="指向多维数组的指针变量"><a href="#指向多维数组的指针变量" class="headerlink" title="指向多维数组的指针变量"></a>指向多维数组的指针变量</h3><h4 id="指向数组元素的指针变量"><a href="#指向数组元素的指针变量" class="headerlink" title="指向数组元素的指针变量"></a>指向数组元素的指针变量</h4><h5 id="有一个3×4的二维数组，要求用指向元素的指针变量输出二维数组各元素的值"><a href="#有一个3×4的二维数组，要求用指向元素的指针变量输出二维数组各元素的值" class="headerlink" title="有一个3×4的二维数组，要求用指向元素的指针变量输出二维数组各元素的值"></a>有一个3×4的二维数组，要求用指向元素的指针变量输出二维数组各元素的值</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>&#125;;</span><br><span class="line">    <span class="type">int</span> *p;</span><br><span class="line">    <span class="keyword">for</span> (p = a[<span class="number">0</span>]; p &lt; a[<span class="number">0</span>] + <span class="number">12</span>; ++p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((p - a[<span class="number">0</span>]) % <span class="number">4</span> == <span class="number">0</span>)	<span class="comment">//p移动四次后换行</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, *p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>计算a[i][j]在数组中的相对位置：</p>
<p>i*m+j(m为二维数组的列数，二维数组大小为n×m)</p>
<p>如：</p>
<p>在一个3×4的二维数组中，a[2][3]对a[0][0]的相对位移量为2*4+3&#x3D;11元素；</p>
<p>如果一个元素占4个字节，则a[2][3]对a[0][0]的地址差为11*4&#x3D;44字节。</p>
<p>若开始时指针变量p指向a[0][0],a[i][j]的地址为”<code>&amp;a[0]\[0]+(i*m+j)</code>或<code>p+(i*m+j)</code>“.</p>
</li>
</ul>
<h4 id="指向由m个元素组成的一维数组的指针变量"><a href="#指向由m个元素组成的一维数组的指针变量" class="headerlink" title="指向由m个元素组成的一维数组的指针变量"></a>指向由m个元素组成的一维数组的指针变量</h4><h5 id="输出二维数组任一行任一列元素的值"><a href="#输出二维数组任一行任一列元素的值" class="headerlink" title="输出二维数组任一行任一列元素的值"></a>输出二维数组任一行任一列元素的值</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>,</span><br><span class="line">                   <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>,</span><br><span class="line">                   <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>&#125;;</span><br><span class="line">    <span class="type">int</span> (*p)[<span class="number">4</span>], i, j;</span><br><span class="line">    p = a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter row and colum:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a[%d,%d]=%d\n&quot;</span>, i, j, *(*(p + i) + j));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code> int (*p)[4]</code>表示定义p为一个指针变量，它指向包含4个整型元素的一维数组.</p>
<p>p的值是该一维数组的起始地址.虽然这个地址(指纯地址)与该一维数组首元素的地址相同,但它们的基类型不同.</p>
<h5 id="分析下列程序"><a href="#分析下列程序" class="headerlink" title="分析下列程序"></a>分析下列程序</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>&#125;;</span><br><span class="line">    <span class="type">int</span> (*p)[<span class="number">4</span>];</span><br><span class="line">    p = &amp;a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (*p)[<span class="number">3</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意,<code> p = &amp;a;</code>不应写成<code> p = a;</code></p>
<p>因为这样写表示p的值是&amp;a[0],指向首元素a[0].</p>
<p><code> p = &amp;a;</code>表示p指向一维数组(行)，(*p)[3]是p指向的行中序号为3的元素.</p>
<blockquote>
<p>要注意指针变量的类型,从<code>int (*p)[4];</code>可以看到,p的类型不是<code>int *</code>型,而是<code>int(*)[4]</code>.</p>
<p>p被定义为指向一维整型数组的指针变量,一维数组有4个元素,因此p的基类型是一维数组,其长度是16字节.</p>
</blockquote>
<h3 id="用指向数组的指针作函数参数"><a href="#用指向数组的指针作函数参数" class="headerlink" title="用指向数组的指针作函数参数"></a>用指向数组的指针作函数参数</h3><p>可以有两种方法:</p>
<ul>
<li>用指向变量的指针变量</li>
<li>用指向一维数组的指针变量</li>
</ul>
<h5 id="有一个班-3个学生-各学4门课-计算总平均分数以及第n个学生的成绩"><a href="#有一个班-3个学生-各学4门课-计算总平均分数以及第n个学生的成绩" class="headerlink" title="有一个班,3个学生,各学4门课,计算总平均分数以及第n个学生的成绩."></a>有一个班,3个学生,各学4门课,计算总平均分数以及第n个学生的成绩.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">average</span><span class="params">(<span class="type">float</span> *, <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">search</span><span class="params">(<span class="type">float</span> (*p)[<span class="number">4</span>], <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">float</span> score[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>,</span><br><span class="line">                         <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>,</span><br><span class="line">                         <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>&#125;;</span><br><span class="line">    average(*score, <span class="number">12</span>);<span class="comment">//*转换为列指针变量</span></span><br><span class="line">    search(score, <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">average</span><span class="params">(<span class="type">float</span> *p, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> *p_end;</span><br><span class="line">    <span class="type">float</span> sum = <span class="number">0</span>, aver;</span><br><span class="line">    p_end = p + n - <span class="number">1</span>;<span class="comment">//指向最后一个元素</span></span><br><span class="line">    <span class="keyword">for</span> (; p &lt;= p_end; p++)</span><br><span class="line">        sum += (*p);</span><br><span class="line">    aver = sum / n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%5.2f\n&quot;</span>, aver);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">search</span><span class="params">(<span class="type">float</span> (*p)[<span class="number">4</span>], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;the score of No.%d are:\n&quot;</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5.2f\n&quot;</span>, *(*(p + n) + i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="eight-pointed-black-star-实参和形参如果是指针类型，应当注意它们的基类型必须一致"><a href="#eight-pointed-black-star-实参和形参如果是指针类型，应当注意它们的基类型必须一致" class="headerlink" title=":eight_pointed_black_star:实参和形参如果是指针类型，应当注意它们的基类型必须一致."></a>:eight_pointed_black_star:实参和形参如果是指针类型，应当注意它们的基类型必须一致.</h5><p>不应把*int型的指针(即数组元素的地址)传给int(*)[4]型(指向一维数组)的指针变量,反之亦然.</p>
<h5 id="查找有一门以上课程不及格的学生-输出他们全部课程的成绩"><a href="#查找有一门以上课程不及格的学生-输出他们全部课程的成绩" class="headerlink" title="查找有一门以上课程不及格的学生,输出他们全部课程的成绩"></a>查找有一门以上课程不及格的学生,输出他们全部课程的成绩</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//    查找有一门以上课程不及格的学生,输出他们全部课程的成绩</span></span><br><span class="line">    <span class="type">void</span> <span class="title function_">search</span><span class="params">(<span class="type">float</span> (*p)[<span class="number">4</span>], <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">float</span> score[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>,</span><br><span class="line">                         <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>,</span><br><span class="line">                         <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>&#125;;</span><br><span class="line">    search(score, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">search</span><span class="params">(<span class="type">float</span> (*p)[<span class="number">4</span>], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, flag;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">            <span class="keyword">if</span> (*(*(p + j) + i) &lt; <span class="number">60</span>) flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;No.%d fails,his scores are:\n&quot;</span>, j + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%5.2f\t&quot;</span>, *(*(p + j) + i));<span class="comment">// score[j][i]</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="通过指针引用字符串"><a href="#通过指针引用字符串" class="headerlink" title="通过指针引用字符串"></a>通过指针引用字符串</h2><h4 id="字符串的引用方法"><a href="#字符串的引用方法" class="headerlink" title="字符串的引用方法"></a>字符串的引用方法</h4><ul>
<li><p>用字符数组存放一个字符串，可以通过数组名和下标引用字符串中一个字符，也可以通过数组名和格式声明“%s”输出该字符串.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> <span class="built_in">string</span>[] = <span class="string">&quot;I Love China&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="built_in">string</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, <span class="built_in">string</span>[<span class="number">7</span>]); <span class="comment">// string[7]=*(string+7)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>用字符指针变量输出一个字符串常量,通过字符指针变量引用字符串常量.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *<span class="built_in">string</span> = <span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="built_in">string</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>对字符指针变量string初始化,实际上是把字符串第1个元素的地址(即存放字符串的字符数组的首元素地址)赋给指针变量string,使string指向字符串的第1个字符,由于字符串常量”I Love China!”已由系统分配在内存中连续的14个字节中,因此,string就指向了该字符串的第一个字符.</p>
</blockquote>
<p>可以对指针变量再赋值;</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *<span class="built_in">string</span> = <span class="string">&quot;I Love China!&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> = <span class="string">&quot;I&#x27;m a student.&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以通过字符指针变量输出它所指向的字符串</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, <span class="built_in">string</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="用-s能对一个字符串进行整体的输入输出"><a href="#用-s能对一个字符串进行整体的输入输出" class="headerlink" title="用%s能对一个字符串进行整体的输入输出."></a>用<code>%s</code>能对一个字符串进行整体的输入输出.</h4><blockquote>
<p>字符数组,区别于数值型数组(int[ ] a)</p>
</blockquote>
<p><code>%s</code>是输出字符串时所用的格式符.在输出项中给出字符指针变量名string,则系统会输出string所指向的字符串第1个字符,然后自动使string加1,使之指向下一个字符,在输出字符…直到遇到字符串结束标志<code>&#39;\0&#39;</code>为止.</p>
<p>注意:在内存中,字符串的最后被自动加了一个<code>&#39;\0&#39;</code>.因此在输出时能确定输出的字符到何时结束.</p>
<h5 id="将字符串a复制为字符串b-然后输出字符串b"><a href="#将字符串a复制为字符串b-然后输出字符串b" class="headerlink" title="将字符串a复制为字符串b,然后输出字符串b"></a>将字符串a复制为字符串b,然后输出字符串b</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> a[] = <span class="string">&quot;I am a student&quot;</span>, b[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; *(a + i) != <span class="string">&#x27;\0&#x27;</span>; ++i)</span><br><span class="line">        *(b + i) = *(a + i);</span><br><span class="line">    *(b + i) = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a is:%s\n&quot;</span>, a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string b is:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; *(b + i) != <span class="string">&#x27;\0&#x27;</span>; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, b[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>用指针变量:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> a[] = <span class="string">&quot;I am a boy&quot;</span>, b[<span class="number">20</span>], *p1, *p2;</span><br><span class="line">    p1 = a;</span><br><span class="line">    p2 = b;</span><br><span class="line">    <span class="keyword">for</span> (; *p1 != <span class="string">&#x27;\0&#x27;</span>; ++p1, ++p2)</span><br><span class="line">        *p2 = *p1;</span><br><span class="line">    *p2 = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a is:%s\n&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string b is:%s\n&quot;</span>,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="字符指针作函数参数"><a href="#字符指针作函数参数" class="headerlink" title="字符指针作函数参数"></a>字符指针作函数参数</h3><blockquote>
<p>如果想把一个字符串从一个函数“传递”到另一函数，可以用地址传递的办法，即用字符数组名作参数，也可以用字符指针变量作参数。在被调用的函数中可以改变字符串的内容，在主调函数中可以引用改变后的字符串。</p>
</blockquote>
<h5 id="用函数调用实现字符串的复制"><a href="#用函数调用实现字符串的复制" class="headerlink" title="用函数调用实现字符串的复制"></a>用函数调用实现字符串的复制</h5><p>1)用字符数组名作函数参数</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> from[], <span class="type">char</span> to[])</span>;</span><br><span class="line">    <span class="type">char</span> a[] = <span class="string">&quot;I am a teacher.&quot;</span>;</span><br><span class="line">    <span class="type">char</span> b[] = <span class="string">&quot;You are a student.&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a:%s\nstring b:%s\n&quot;</span>, a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;copy string a to string b:\n&quot;</span>);</span><br><span class="line">    copy_string(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a:%s\nstring b:%s\n&quot;</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> from[], <span class="type">char</span> to[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span> (from[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        to[i] = from[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    to[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>复制后的数组仍存在没有被覆盖的值(<code>t</code>, <code>. </code>,<code> \0</code>);</p>
<p>用%s格式输出时,遇到第一个<code>\0</code>后面的字符就不会输出了.</p>
<p>如果用%c逐个字符输出是可以输出后面这些字符的.</p>
</blockquote>
<p>2)用字符型指针变量作实参</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> from[], <span class="type">char</span> to[])</span>;</span><br><span class="line">    <span class="type">char</span> a[] = <span class="string">&quot;I am a teacher.&quot;</span>;</span><br><span class="line">    <span class="type">char</span> b[] = <span class="string">&quot;You are a student.&quot;</span>;</span><br><span class="line">    <span class="type">char</span> *from = a;</span><br><span class="line">    <span class="type">char</span> *to = b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a:%s\nstring b:%s\n&quot;</span>, a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;copy string a to string b:\n&quot;</span>);</span><br><span class="line">    copy_string(from, to);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a:%s\nstring b:%s\n&quot;</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> from[], <span class="type">char</span> to[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span> (from[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        to[i] = from[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    to[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3)用字符指针变量作形参和实参</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> from[], <span class="type">char</span> to[])</span>;</span><br><span class="line">    <span class="type">char</span> *a = <span class="string">&quot;I am a teacher.&quot;</span>;</span><br><span class="line">    <span class="type">char</span> b[] = <span class="string">&quot;You are a student.&quot;</span>;</span><br><span class="line">    <span class="type">char</span> *p = b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a:%s\nstring b:%s\n&quot;</span>, a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;copy string a to string b:\n&quot;</span>);</span><br><span class="line">    copy_string(a, p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;string a:%s\nstring b:%s\n&quot;</span>, a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> *from, <span class="type">char</span> *to)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (; *from != <span class="string">&#x27;\0&#x27;</span>; ++from,++to)</span><br><span class="line">    &#123;</span><br><span class="line">        *to = *from;</span><br><span class="line">    &#125;</span><br><span class="line">    *to = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//精简</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> *from, <span class="type">char</span> *to)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> ((*to = *from) != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ++from, ++to;</span><br><span class="line">    &#125;</span><br><span class="line">    *to = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//再精简</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> *from, <span class="type">char</span> *to)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> ((*to++ = *from++) != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line">    *to = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> *from, <span class="type">char</span> *to)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (*from != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        *to++ = *from++;</span><br><span class="line">    &#125;</span><br><span class="line">    *to = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ASCII码</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> *from, <span class="type">char</span> *to)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (*from)</span><br><span class="line">    &#123;</span><br><span class="line">        *to++ = *from++;</span><br><span class="line">    &#125;</span><br><span class="line">    *to = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//还可以简化为</span></span><br><span class="line">	<span class="keyword">while</span> (*to++ = *from++);</span><br><span class="line">	等价于</span><br><span class="line">	<span class="keyword">while</span> ((*to++ = *from++) != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line"><span class="comment">//for</span></span><br><span class="line">	<span class="keyword">for</span> (; *to++ = *from++;);</span><br><span class="line">	或者</span><br><span class="line">    <span class="keyword">for</span> (; (*to++ = *from++)!=<span class="string">&#x27;\0&#x27;</span>;);</span><br></pre></td></tr></table></figure>

<p>也可以使用字符数组名作函数形参，在函数中另定义两个指针变量p1，p2.函数copy_string可写为</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">copy_string</span><span class="params">(<span class="type">char</span> from[], <span class="type">char</span> to[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *p1, *p2;</span><br><span class="line">    p1 = from;</span><br><span class="line">    p2 = to;</span><br><span class="line">    <span class="keyword">while</span> ((*p2++ = *p1++) != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="使用字符指针变量和字符数组的比较"><a href="#使用字符指针变量和字符数组的比较" class="headerlink" title="使用字符指针变量和字符数组的比较"></a>使用字符指针变量和字符数组的比较</h3><ul>
<li><p>字符数组由若干个元素组成，每个元素中放一个字符，而字符指针变量中存放的是地址(字符串第1个字符的地址),绝不是将字符串放到字符指针变量中.</p>
</li>
<li><p>赋值方式. 可以对字符指针变量赋值,但不能对数组名赋值</p>
</li>
<li><p>初始化的含义.</p>
<p>数组可以在定义时对各元素赋初值,但不能用赋值语句对字符数组中的全部元素整体赋值</p>
</li>
<li><p>存储单元的内容. 编译时为字符数组分配若干存储单元,以存放各元素的值,而对字符指针变量,只分配一个存储单元.</p>
<p>如果定义了字符数组,但未对它赋值,这时数组中的元素的值是不可预料的.</p>
<p>如果定义了字符指针变量,应当及时把一个字符变量(或字符数组元素)的地址赋给它，使它指向一个字符型数据，如果未对它赋予一个地址值，它并未具体指向一个确定的对象，此时如果向该指针变量所指向的对象输入数据，可能会出现严重的后果：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//危险的!</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>指针变量的值是可以改变的,而字符数组名代表一个固定的值(数组首元素的地址)不能改变.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *a = <span class="string">&quot;I love China!&quot;</span>;</span><br><span class="line">    a = a + <span class="number">7</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>引用数组元素</p>
<p>对字符数组可以使用下标法引用一个数组元素,也可以用地址法(<code>*(a+5)</code>).</p>
<p>对字符指针变量p使它指向数组a的首元素,可以使用指针变量带下标法(p[5])引用一个数组元素,也可以用地址法.</p>
</li>
<li><p>用指针变量指向一个格式字符串,可以用它代替printf函数中的格式字符串</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *format;</span><br><span class="line">format = <span class="string">&quot;a=%d,b=%f\n&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(format, a, b);</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<p>这种printf函数称为<strong>可变格式输出函数</strong>.</p>
</li>
</ul>
<h2 id="指向函数的指针"><a href="#指向函数的指针" class="headerlink" title="指向函数的指针"></a>指向函数的指针</h2><p>每次调用函数时都会从函数分配的内存空间的起始地址开始执行此段函数代码。</p>
<p><strong>函数名代表函数的起始地址.</strong></p>
<p>可以定义一个指向函数的指针变量,用来存放某一函数的起始地址.这就意味着此指针变量指向该函数.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (*p)(<span class="type">int</span>,<span class="type">int</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="用函数指针变量调用函数"><a href="#用函数指针变量调用函数" class="headerlink" title="用函数指针变量调用函数."></a>用函数指针变量调用函数.</h3><h5 id="用函数求a和b中的大者"><a href="#用函数求a和b中的大者" class="headerlink" title="用函数求a和b中的大者."></a>用函数求a和b中的大者.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> (*p)(<span class="type">int</span>, <span class="type">int</span>);</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    p = max;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter a and b:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    c = (*p)(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max is:%d&quot;</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="怎么定义和使用指向函数的指针变量"><a href="#怎么定义和使用指向函数的指针变量" class="headerlink" title="怎么定义和使用指向函数的指针变量"></a>怎么定义和使用指向函数的指针变量</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">类型名 (*指针变量名)(函数参数表列)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>类型名是函数返回值类型</p>
</blockquote>
<p>对指向函数的指针变量不能进行算术运算.如p+n,p++,p–等运算都是无意义的.</p>
<h5 id="输入两个整数-让用户选择1或2-选1时调用max函数-输出二者中的大数-选2时调用min函数-输出二者中的小数"><a href="#输入两个整数-让用户选择1或2-选1时调用max函数-输出二者中的大数-选2时调用min函数-输出二者中的小数" class="headerlink" title="输入两个整数,让用户选择1或2,选1时调用max函数,输出二者中的大数,选2时调用min函数,输出二者中的小数."></a>输入两个整数,让用户选择1或2,选1时调用max函数,输出二者中的大数,选2时调用min函数,输出二者中的小数.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> (*p)(<span class="type">int</span>, <span class="type">int</span>);</span><br><span class="line">    <span class="type">int</span> a, b, c, d;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter two integer:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please choose 1 or 2:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;c);</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">1</span>)</span><br><span class="line">        p = max;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">2</span>)</span><br><span class="line">        p = min;</span><br><span class="line">    d = (*p)(a, b);</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;max is:%d&quot;</span>, d);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;min is:%d&quot;</span>, d);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="用指向函数的指针作函数参数"><a href="#用指向函数的指针作函数参数" class="headerlink" title="用指向函数的指针作函数参数"></a>用指向函数的指针作函数参数</h3><blockquote>
<p>指向函数的指针变量的一个重要用途是把函数的入口地址作为参数传递到其他函数.</p>
</blockquote>
<h5 id="有两个整数a和b-由用户输入1-2和3-如输入1-程序就给出a和b中的大者-输入2-程序就给出a和b中的小者-输入3-则求a与b之和"><a href="#有两个整数a和b-由用户输入1-2和3-如输入1-程序就给出a和b中的大者-输入2-程序就给出a和b中的小者-输入3-则求a与b之和" class="headerlink" title="有两个整数a和b,由用户输入1,2和3.如输入1,程序就给出a和b中的大者.输入2,程序就给出a和b中的小者.输入3,则求a与b之和."></a>有两个整数a和b,由用户输入1,2和3.如输入1,程序就给出a和b中的大者.输入2,程序就给出a和b中的小者.输入3,则求a与b之和.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span>;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>, <span class="type">int</span> (*p)(<span class="type">int</span>, <span class="type">int</span>))</span>;</span><br><span class="line">    <span class="type">int</span> a, b, c, d;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter two integer:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please choose 1 , 2 or 3:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;c);</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">1</span>)</span><br><span class="line">        fun(a, b, max);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">2</span>)</span><br><span class="line">        fun(a, b, min);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="number">3</span>)</span><br><span class="line">        fun(a, b, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> (*p)(<span class="type">int</span>, <span class="type">int</span>))</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> result;</span><br><span class="line">    result = (*p)(x, y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max=&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;min=&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="返回指针值的函数"><a href="#返回指针值的函数" class="headerlink" title="返回指针值的函数"></a>返回指针值的函数</h3><p>定义返回指针值函数的原型的一般形式为:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类型名 *函数名 (函数参数表列)</span><br></pre></td></tr></table></figure>

<h5 id="有a个学生-每个学生有b门课程的成绩-要求在用户输入学生序号以后-能输出该学生的全部成绩-用指针函数实现"><a href="#有a个学生-每个学生有b门课程的成绩-要求在用户输入学生序号以后-能输出该学生的全部成绩-用指针函数实现" class="headerlink" title="有a个学生,每个学生有b门课程的成绩,要求在用户输入学生序号以后,能输出该学生的全部成绩.用指针函数实现"></a>有a个学生,每个学生有b门课程的成绩,要求在用户输入学生序号以后,能输出该学生的全部成绩.用指针函数实现</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> score[][<span class="number">4</span>] = &#123;&#123;<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">56</span>, <span class="number">74</span>, <span class="number">45</span>, <span class="number">86</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">65</span>, <span class="number">88</span>, <span class="number">67</span>, <span class="number">99</span>&#125;&#125;;</span><br><span class="line">    <span class="type">float</span> *<span class="title function_">search</span><span class="params">(<span class="type">float</span> (*pointer)[<span class="number">4</span>], <span class="type">int</span> n)</span>;</span><br><span class="line">    <span class="type">float</span> *p;</span><br><span class="line">    <span class="type">int</span> i, k;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;enter number of student:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    p = search(score, k);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5.2f\t&quot;</span>, *(p + i));<span class="comment">//输出  score[k][0]~score[k][3];</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> *<span class="title function_">search</span><span class="params">(<span class="type">float</span> (*pointer)[<span class="number">4</span>], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> *pt;</span><br><span class="line">    pt = *(pointer + n); <span class="comment">//pt的值是&amp;score[k][0]</span></span><br><span class="line">    <span class="keyword">return</span> pt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="找出其中有不及格的课程的学生及其学生号"><a href="#找出其中有不及格的课程的学生及其学生号" class="headerlink" title="找出其中有不及格的课程的学生及其学生号."></a>找出其中有不及格的课程的学生及其学生号.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> score[][<span class="number">4</span>] = &#123;&#123;<span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">56</span>, <span class="number">74</span>, <span class="number">45</span>, <span class="number">86</span>&#125;,</span><br><span class="line">                        &#123;<span class="number">65</span>, <span class="number">88</span>, <span class="number">67</span>, <span class="number">99</span>&#125;&#125;;</span><br><span class="line">    <span class="type">float</span> *<span class="title function_">search</span><span class="params">(<span class="type">float</span> (*pointer)[<span class="number">4</span>])</span>;</span><br><span class="line">    <span class="type">float</span> *p;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        p = search(score + i);</span><br><span class="line">        <span class="keyword">if</span> (p == *(score + i))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;No.%d score:&quot;</span>, i);</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%5.2f&quot;</span>, *(p + j));</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> *<span class="title function_">search</span><span class="params">(<span class="type">float</span> (*pointer)[<span class="number">4</span>])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> *pt;</span><br><span class="line">    pt = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*(*(pointer + i)) &lt; <span class="number">60</span>)</span><br><span class="line">            pt = *pointer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="指针数组和多维指针"><a href="#指针数组和多维指针" class="headerlink" title="指针数组和多维指针"></a>指针数组和多维指针</h2><blockquote>
<p>一个数组，若其元素均为指针类型数据，称为指针数组.</p>
</blockquote>
<p>定义一个指针数组</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">类型名 *数组名[数组长度];</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *p[<span class="number">4</span>];</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="将若干字符串按字母顺序-由小到大-输出"><a href="#将若干字符串按字母顺序-由小到大-输出" class="headerlink" title="将若干字符串按字母顺序(由小到大)输出."></a>将若干字符串按字母顺序(由小到大)输出.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">char</span> *name[], <span class="type">int</span> n)</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">char</span> *name[], <span class="type">int</span> n)</span>;</span><br><span class="line">    <span class="type">char</span> *name[] = &#123;<span class="string">&quot;Follow me&quot;</span>, <span class="string">&quot;BASIC&quot;</span>, <span class="string">&quot;Great Wall&quot;</span>, <span class="string">&quot;FORTRAN&quot;</span>, <span class="string">&quot;Computer design&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line">    sort(name, n);</span><br><span class="line">    print(name, n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">char</span> *name[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *temp;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(name[k], name[i]) &gt; <span class="number">0</span>)</span><br><span class="line">                k = j;</span><br><span class="line">        <span class="keyword">if</span> (k != i)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = name[i];</span><br><span class="line">            name[i] = name[k];</span><br><span class="line">            name[k] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print1</span><span class="params">(<span class="type">char</span> *name[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, name[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//也可以改写成</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">char</span> *name[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> *p;</span><br><span class="line">    p = name[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        p = *(name + i++); <span class="comment">//   name[i];    i++;</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="指向指针数据的指针变量"><a href="#指向指针数据的指针变量" class="headerlink" title="指向指针数据的指针变量"></a>指向指针数据的指针变量</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> **p;</span><br></pre></td></tr></table></figure>

<p>*运算符的结合性是从右到左的.	*(*p).</p>
<p>也就是说p指向一个字符指针变量(这个字符指针变量指向一个字符型数据),如果引用*p,就得到p所指向的字符指针变量的值.</p>
<h5 id="使用指向指针数据的指针变量"><a href="#使用指向指针数据的指针变量" class="headerlink" title="使用指向指针数据的指针变量"></a>使用指向指针数据的指针变量</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *name[] = &#123;<span class="string">&quot;Follow me&quot;</span>, <span class="string">&quot;BASIC&quot;</span>, <span class="string">&quot;Great Wall&quot;</span>, <span class="string">&quot;FORTRAN&quot;</span>, <span class="string">&quot;Computer design&quot;</span>&#125;;</span><br><span class="line">    <span class="type">char</span> **p;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p = name + i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *p);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="有一个指针数组-其元素分别指向一个整型数组的元素-用指向指针数据的指针变量-输出整型数组各元素的值"><a href="#有一个指针数组-其元素分别指向一个整型数组的元素-用指向指针数据的指针变量-输出整型数组各元素的值" class="headerlink" title="有一个指针数组,其元素分别指向一个整型数组的元素,用指向指针数据的指针变量,输出整型数组各元素的值."></a>有一个指针数组,其元素分别指向一个<strong>整型数组</strong>的元素,用指向指针数据的指针变量,输出整型数组各元素的值.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="type">int</span> *num[<span class="number">5</span>] = &#123;&amp;a[<span class="number">0</span>], &amp;a[<span class="number">1</span>], &amp;a[<span class="number">2</span>], &amp;a[<span class="number">3</span>], &amp;a[<span class="number">4</span>]&#125;;</span><br><span class="line">    <span class="type">int</span> **p, i;</span><br><span class="line">    p = num;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, **p);</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="间接访问"><a href="#间接访问" class="headerlink" title="间接访问"></a>间接访问</h4><p>在一个指针变量中存放一个目标变量的地址，这就是“<strong>单机间址</strong>”.</p>
<p>指向指针数据的指针用的是“<strong>二级间址</strong>”.</p>
<p>间址方法可以延伸到更多的级,即<strong>多重指针</strong>.</p>
<h3 id="指针数组作main函数的形参"><a href="#指针数组作main函数的形参" class="headerlink" title="指针数组作main函数的形参"></a>指针数组作main函数的形参</h3><p>main可以用参数:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中，argc和argv就是main函数的形参，它们就是程序的”命令行参数”.</p>
<p>argc是参数的个数,argv是参数向量,它是一个* char指针数组,数组中每一个元素(其值为指针)指向命令行中的一个字符串的首字符.</p>
</blockquote>
<p>用带参数的main函数,其第一个形参必须是int型,用来接收形参个数,第二个参数必须是字符指针数组,用来接收从操作系统命令行传来的字符串中首字母的地址.</p>
<p>在操作命令下,实参是和执行文件的命令一起给出的.例如在DOS,UNIX或Linux等系统的操作命令状态下,在命令行中包括了命令名和需要传给main函数的参数.</p>
<p><strong>命令行的一般形式为</strong></p>
<blockquote>
<p>命令名	参数1 参数2···参数n</p>
<p>命令名和各参数之间用空格分隔.命令行是可执行文件名(此文件含main函数)</p>
<p>如:</p>
<p>file1 China Beijing</p>
<p>file1为可执行文件名(实际上,文件名应包含盘符,路径),China和Beijing是调用main函数时的实参.</p>
</blockquote>
<ul>
<li><p>文件名也作为一个参数.argc的值等于3(有3个命令行参数:file1,China,Beijing)</p>
</li>
<li><p>命令行参数必须都是字符串(“file1”,”China”,”Beijing”都是字符串),这些字符串的首地址构成一个指针数组.</p>
<p>指针数组argv中的元素argv[0]指向字符串”file1”的首字符(argv[0]的值是字符串”file1”的首地址).</p>
</li>
</ul>
<p>名:file1的文件,它包含以下的main函数:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (argc &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ++argv;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *argv);</span><br><span class="line">        --argc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>选择“工程”-“设置”-“调试”-“程序变量”命令，输入 China Beijing，再运行程序。</p>
<p>输出</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">China</span><br><span class="line">Beijing</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>改写:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (argc-- &gt; <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *++argv);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>许多操作系统提供了echo命令,它的作用是实现”参数回送”,即将echo后面的各参数(各字符串)在同一行上输出.实现”参数回送”的C程序(文件名为echo.c)如下:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (--argc &gt; <span class="number">0</span>)									   <span class="comment">//当命令行的参数多于1</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s%c\n&quot;</span>, *++argv, (argc &gt; <span class="number">1</span>) ? <span class="string">&#x27; &#x27;</span> : <span class="string">&#x27;\n&#x27;</span>);<span class="comment">//从第2个参数开始输出各字参数(字符串)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果用UNIX系统的命令行输入:</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./echo Computer and C Language↙   //echo是可执行文件名.</span><br></pre></td></tr></table></figure>

<p>会在显示屏上输出:</p>
<p>Computer and C Language</p>
<p>或者</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; argc; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s%c\n&quot;</span>, argv[i], (argc &gt; <span class="number">1</span>) ? <span class="string">&#x27; &#x27;</span> : <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="动态内存分配与指向它的指针变量"><a href="#动态内存分配与指向它的指针变量" class="headerlink" title="动态内存分配与指向它的指针变量"></a>动态内存分配与指向它的指针变量</h1><h4 id="内存的动态分配"><a href="#内存的动态分配" class="headerlink" title="内存的动态分配"></a>内存的动态分配</h4><p>全局变量是分配在内存中的静态存储区的，非静态的局部变量(包括形参)是分配在内存中的动态存储区的,这个存储区是一个称为<code>栈</code>(stack)的区域.</p>
<p>C语言还允许建立内存动态分配区域,以存放一些临时用的数据,这些数据不必在程序的声明部分定义,也不必等到函数结束时才释放.而是需要时随时开辟,不需要时随时释放.这些数据是临时存放在一个特别的自由存储区.称为<code>堆</code>(heap)区.可以根据需要,向系统申请所需大小的空间.由于未在声明部分定义它们为变量或数组,因此不能通过变量名或数组名去引用这些数据,只能通过指针来引用.</p>
<h3 id="怎么建立内存的动态分配"><a href="#怎么建立内存的动态分配" class="headerlink" title="怎么建立内存的动态分配"></a>怎么建立内存的动态分配</h3><blockquote>
<p>#include &lt;stdlib.h&gt;</p>
</blockquote>
<ul>
<li><p>用malloc函数开辟动态存储区</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> *<span class="title function_">malloc</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> size)</span>;</span><br></pre></td></tr></table></figure>

<p>作用是在内存的动态存储区中分配一个长度为size的连续空间.形参size的类型为无符号整型(不允许为负数).此函数的值(返回值)是所分配区域的第一个字节的地址.或者说是一个指针型函数.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">malloc</span>(<span class="number">100</span>); <span class="comment">//开辟100字节的临时分配域,函数值为其第1个字节的地址</span></span><br></pre></td></tr></table></figure>

<p>注意指针的基类型为void,即指针不指向任何类型的数据,只提供一个纯地址.如果此函数未能成功地执行(例如内存空间不足),则返回空指针(NULL).</p>
</li>
<li><p>用calloc函数开辟动态存储区</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> *<span class="title function_">calloc</span><span class="params">(<span class="type">unsigned</span> n,<span class="type">unsigned</span> <span class="type">int</span> size)</span>;</span><br></pre></td></tr></table></figure>

<p>在内存中动态地分配 num 个长度为 size 的连续空间，并将每一个字节都初始化为 0。所以它的结果是分配了 num*size 个字节长度的内存空间，并且每个字节的值都是0.</p>
<p>这就是<strong>动态数组</strong>.函数返回值指向所分配域的第一个字节的指针;如果分配不成功,则返回NULL.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="built_in">calloc</span>(<span class="number">50</span>, <span class="number">4</span>);<span class="comment">//开辟50×4个字节的临时分配域,把首地址赋给指针变量p</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure>
</li>
<li><p>用realloc重新分配动态存储区.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> *<span class="title function_">realloc</span><span class="params">(<span class="type">void</span> *p, <span class="type">unsigned</span> <span class="type">int</span> size)</span>;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<p>如果已经通过malloc函数或calloc函数获得乐动态空间,想改变大小,可以用realloc函数重新分配.</p>
<p>用realloc函数将p所指向的动态空间的大小改变为size.p的值不变.p的值不变.如果重分配不成功,返回NULL.如:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">realloc</span>(p,<span class="number">50</span>);</span><br><span class="line">  </span><br></pre></td></tr></table></figure>
</li>
<li><p>用free函数释放动态存储区</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">free</span><span class="params">(*p)</span>;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<p>其作用是释放指针变量p所指向的动态空间,使这部分空间能重新被其他变量使用.</p>
<p>p应是最近一次调用calloc或malloc函数时得到的函数返回值.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">free</span>(p);<span class="comment">//释放指针变量p所指向的已分配的额动态空间</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>free函数无返回值.</p>
</blockquote>
</li>
</ul>
<h3 id="void指针类型"><a href="#void指针类型" class="headerlink" title="void指针类型"></a>void指针类型</h3><p>可以定义一个基类型为void的指针变量(即void*型变量).</p>
<p>“指向void类型”理解为 指向空类型或”不指向确定的类型”的数据.</p>
<blockquote>
<p>在将它的值赋给另一指针变量时由系统对它进行类型转换.使之适合于被赋值的变量的类别</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">3</span>;         <span class="comment">//定义a为整型变量.</span></span><br><span class="line">   <span class="type">int</span> *p1 = &amp;a;      <span class="comment">//p1指向int型变量</span></span><br><span class="line">   <span class="type">char</span> *p2;          <span class="comment">//p2指向char型变量</span></span><br><span class="line">   <span class="type">void</span> *p3;          <span class="comment">//p3为无类型指针变量(基类型为void型)</span></span><br><span class="line">   p3 = (<span class="type">void</span> *)p1;   <span class="comment">//将p1的值转换为void *类型,然后赋值给p3</span></span><br><span class="line">   p2 = (<span class="type">char</span> *)p3;   <span class="comment">//将p3的值转换为char *类型,然后赋值给p2</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *p1); <span class="comment">// 3</span></span><br><span class="line">   p3 = &amp;a;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *p3); <span class="comment">//非法,p3是无指向的,不能指向a</span></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在这种无指向的地址所标志的存储单元中不能存储任何数据的,无法通过这种地址对内存存取数据.</p>
</blockquote>
<p><strong>什么情况用到这种地址?</strong></p>
<p>这种情况是在调用动态存储分配函数(如maloc,caloc,realoc函数)时出现的.</p>
<p>用户用这些函数开辟动态存储区,显然希望获得此动态存储区的起始地址,以便利用该动态存储区.</p>
<p>在以前的C版本(包括C89)中,函数的返回地址一律指向字符型数据,即得到char*型指针.</p>
<p>malloc函数的原型为:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> *<span class="title function_">malloc</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> sise)</span>;</span><br></pre></td></tr></table></figure>

<p>人们开辟的动态存储区并不是一定用来存放字符型数据的,例如想用来存放一批整型数据.为此,在向该存储区存放数据前就需要进行地址的类型转换:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *pt;</span><br><span class="line">pt = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="number">100</span>);</span><br></pre></td></tr></table></figure>

<p>系统会将指向字符数据的指针转换为指向整型数据的指针,然后赋给pt.这样pt就指向存储区的首字节,可以通过pt对该动态存储区进行存取操作.</p>
<blockquote>
<p>上面的类型转换只是产生一个临时的中间值赋给了pt,但没有改变malloc函数本身的类型.</p>
</blockquote>
<p>C99修改为:返回void*指针,这种指针不指向任何类型的数据,只提供一个纯地址.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> *pt;</span><br><span class="line">pt = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="number">100</span>); <span class="comment">//malloc(100)是void类型,把它转换为int*型</span></span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line">pt = <span class="built_in">malloc</span>(<span class="number">100</span>); <span class="comment">//自动进行类型转换</span></span><br></pre></td></tr></table></figure>

<h5 id="建立动态数组-输入5个学生的成绩-另外用一个函数检查其中有无低于60分的-输出不合格的成绩"><a href="#建立动态数组-输入5个学生的成绩-另外用一个函数检查其中有无低于60分的-输出不合格的成绩" class="headerlink" title="建立动态数组,输入5个学生的成绩,另外用一个函数检查其中有无低于60分的,输出不合格的成绩."></a>建立动态数组,输入5个学生的成绩,另外用一个函数检查其中有无低于60分的,输出不合格的成绩.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> *p)</span>;</span><br><span class="line">    <span class="type">int</span> *p1, i;</span><br><span class="line">    p1 = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="number">5</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, p1 + i);</span><br><span class="line">    check(p1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> *p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;They are fail:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (p[i] &lt; <span class="number">60</span>)</span><br><span class="line">            prtinf(<span class="string">&quot;%d&quot;</span>, p[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


    </div>

    
    
    

    <footer class="post-footer">
          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>Post author:  </strong>Kayleh
  </li>
  <li class="post-copyright-link">
      <strong>Post link: </strong>
      <a href="https://blog.kayleh.top/posts/Good-use-of-pointers" title="Good use of pointers">https://blog.kayleh.top/posts/Good-use-of-pointers</a>
  </li>
  <li class="post-copyright-license">
      <strong>Copyright Notice:  </strong>All articles in this blog are licensed under <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</span> unless stating additionally.
  </li>
</ul>
</div>

          <div class="followme">
  <span>Welcome to my other publishing channels</span>

  <div class="social-list">

      <div class="social-item">
          <a target="_blank" class="social-link" href="/atom.xml">
            <span class="icon">
              <i class="fa fa-rss"></i>
            </span>

            <span class="label">RSS</span>
          </a>
      </div>
  </div>
</div>

          <div class="post-tags">
              <a href="/tags/C/" rel="tag"><i class="fa fa-tag"></i> C</a>
          </div>

        
  <div class="social-like a2a_kit a2a_kit_size_32 a2a_default_style">
    <a class="a2a_dd" target="_blank" rel="noopener" href="https://www.addtoany.com/share"></a>
      <a class="a2a_button_facebook"></a>
      <a class="a2a_button_twitter"></a>
  </div>

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/posts/realize-modular-programming-with-functions" rel="prev" title="realize modular programming with functions">
                  <i class="fa fa-angle-left"></i> realize modular programming with functions
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/posts/users-create-data-types-themselves" rel="next" title="users create data types themselves">
                  users create data types themselves <i class="fa fa-angle-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






    <div class="comments gitalk-container"></div>
</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">

  <div class="copyright">
    &copy; 2019 – 
    <span itemprop="copyrightYear">2025</span>
    <span class="with-love">
      <i class="fa fa-heart"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">true</span>
  </div>
<div class="busuanzi-count">
    <span class="post-meta-item" id="busuanzi_container_site_uv">
      <span class="post-meta-item-icon">
        <i class="fa fa-user"></i>
      </span>
      <span class="site-uv" title="Total Visitors">
        <span id="busuanzi_value_site_uv"></span>
      </span>
    </span>
    <span class="post-meta-item" id="busuanzi_container_site_pv">
      <span class="post-meta-item-icon">
        <i class="fa fa-eye"></i>
      </span>
      <span class="site-pv" title="Total Views">
        <span id="busuanzi_value_site_pv"></span>
      </span>
    </span>
</div>

    </div>
  </footer>

  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>
  <div class="sidebar-dimmer"></div>
  <div class="back-to-top" role="button" aria-label="Back to top">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script size="300" alpha="0.6" zIndex="-1" src="https://cdnjs.cloudflare.com/ajax/libs/ribbon.js/1.0.2/ribbon.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/next-theme-pjax/0.6.0/pjax.min.js" integrity="sha256-vxLn1tSKWD4dqbMRyv940UYw4sXgMtYcK6reefzZrao=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.umd.js" integrity="sha256-a+H7FYzJv6oU2hfsfDGM2Ohw/cR9v+hPfxHCLdmCrE8=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.1.0/medium-zoom.min.js" integrity="sha256-ZgMyDAIYDYGxbcpJcfUnYwNevG/xi9OHKaR/8GK+jWc=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/sidebar.js"></script><script src="/js/next-boot.js"></script><script src="/js/pjax.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/hexo-generator-searchdb/1.4.1/search.js" integrity="sha256-1kfA5uHPf65M5cphT2dvymhkuyHPQp5A53EGZOnOLmc=" crossorigin="anonymous"></script>
<script src="/js/third-party/search/local-search.js"></script>
<script src="//code.tidio.co/dq5klo9ydptaxokj83vcwnusf63dogzr.js"></script>
<script src="/js/third-party/chat/tidio.js"></script>




  <script src="/js/third-party/fancybox.js"></script>

  <script src="/js/third-party/pace.js"></script>

  <script src="/js/third-party/addtoany.js"></script>

  
  <script data-pjax async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>




  

  <script class="next-config" data-name="enableMath" type="application/json">false</script><script class="next-config" data-name="mathjax" type="application/json">{"enable":true,"tags":"ams","js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js","integrity":"sha256-MASABpB4tYktI2Oitl4t+78w/lyA+D7b/s9GEP0JOGI="}}</script>
<script src="/js/third-party/math/mathjax.js"></script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.css" integrity="sha256-AJnUHL7dBv6PGaeyPQJcgQPDjt/Hn/PvYZde1iqfp8U=" crossorigin="anonymous">

<script class="next-config" data-name="gitalk" type="application/json">{"enable":true,"github_id":"Kayleh","repo":"kayleh.top.giscus","client_id":"Ov23liJZlhhVSuSynF9Q","client_secret":"d16c7023956f130d20927ad469dfe83295864094","admin_user":"Kayleh","distraction_free_mode":true,"proxy":"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token","language":null,"js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.min.js","integrity":"sha256-MVK9MGD/XJaGyIghSVrONSnoXoGh3IFxLw0zfvzpxR4="},"path_md5":"98e062b08cd12a4b1543084f2063c804"}</script>
<script src="/js/third-party/comments/gitalk.js"></script>

</body>
</html>
