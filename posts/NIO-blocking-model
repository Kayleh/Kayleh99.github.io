<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 7.3.0">
<link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/mygo.jpg">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/mygo.jpg">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha256-dABdfBfUoC8vJUBOwGVdm8L9qlMWaHTIfXt+7GnZCIo=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.css" integrity="sha256-gkQVf8UKZgQ0HyuxL/VnacadJ+D2Kox2TCEBuNQg5+w=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/themes/blue/pace-theme-center-simple.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/pace.min.js" integrity="sha256-gqd7YTjg/BtfqWSwsJOvndl0Bxc8gFImLEkXQT8+qj0=" crossorigin="anonymous"></script>

<script class="next-config" data-name="main" type="application/json">{"hostname":"blog.kayleh.top","root":"/","images":"/images","scheme":"Gemini","darkmode":true,"version":"8.22.0","exturl":true,"sidebar":{"position":"left","width_expanded":320,"width_dual_column":240,"display":"post","padding":18,"offset":12},"hljswrap":true,"copycode":{"enable":false,"style":null},"fold":{"enable":false,"height":500},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":true,"lazyload":true,"pangu":false,"comments":{"style":"tabs","active":"gitalk","storage":true,"lazyload":true,"nav":null,"activeClass":"gitalk"},"stickytabs":false,"motion":{"enable":true,"async":false,"duration":200,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"i18n":{"placeholder":"Searching...","empty":"We didn't find any results for the search: ${query}","hits_time":"${hits} results found in ${time} ms","hits":"${hits} results found"}}</script><script src="/js/config.js"></script>

<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7457165067653912"
     crossorigin="anonymous"></script>
    <meta name="description" content="NIO模型1. 概述1.1 翻译翻译？什么叫NIO？">
<meta property="og:type" content="blog">
<meta property="og:title" content="NIO blocking model">
<meta property="og:url" content="https://blog.kayleh.top/posts/NIO-blocking-model">
<meta property="og:site_name" content="Kayleh&#39;s Blog">
<meta property="og:description" content="NIO模型1. 概述1.1 翻译翻译？什么叫NIO？">
<meta property="og:locale" content="en_US">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721215841190.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220142379.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220305715.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220837981.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220618271.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221126713.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221133628.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221448757.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221615368.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221704507.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722145734223.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722145833687.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722150046897.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722150611349.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722150651862.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/202007222229375.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722222907340.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722223243146.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722223923471.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/2020072222584984.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722230412178.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722230845441.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233104941.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722231319234.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722231507769.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722231820775.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/202007222330187.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233204365.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233310845.png">
<meta property="og:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233342438.png">
<meta property="article:published_time" content="2020-12-04T19:33:46.000Z">
<meta property="article:modified_time" content="2025-02-03T16:14:08.810Z">
<meta property="article:author" content="Kayleh">
<meta property="article:tag" content="network">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721215841190.png">


<link rel="canonical" href="https://blog.kayleh.top/posts/NIO-blocking-model">


<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"en","comments":true,"permalink":"https://blog.kayleh.top/posts/NIO-blocking-model","path":"posts/NIO-blocking-model","title":"NIO blocking model"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>NIO blocking model | Kayleh's Blog</title>
  




  <script>
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "q44a4p85n0");
</script>




  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Kayleh's Blog</p>
      <i class="logo-line"></i>
    </a>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="Search" role="button">
        <i class="fa fa-search fa-fw fa-lg"></i>
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-home fa-fw"></i>Home</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>Archives<span class="badge">247</span></a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>About</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>Tags<span class="badge">34</span></a></li><li class="menu-item menu-item-friends"><a href="/friends" rel="section"><i class="fa fa-heartbeat fa-fw"></i>friends</a></li><li class="menu-item menu-item-sitemap"><a href="/rss.xml" rel="section"><i class="fa fa-sitemap fa-fw"></i>Sitemap</a></li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>Search
        </a>
      </li>
  </ul>
</nav>



  <div class="search-pop-overlay">
    <div class="popup search-popup">
      <div class="search-header">
        <span class="search-icon">
          <i class="fa fa-search"></i>
        </span>
        <div class="search-input-container">
          <input autocomplete="off" autocapitalize="off" maxlength="80"
                placeholder="Searching..." spellcheck="false"
                type="search" class="search-input">
        </div>
        <span class="popup-btn-close" role="button">
          <i class="fa fa-times-circle"></i>
        </span>
      </div>
      <div class="search-result-container">
        <div class="search-result-icon">
          <i class="fa fa-spinner fa-pulse fa-5x"></i>
        </div>
      </div>
    </div>
  </div>

</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#NIO%E6%A8%A1%E5%9E%8B"><span class="nav-number">1.</span> <span class="nav-text">NIO模型</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#1-%E6%A6%82%E8%BF%B0"><span class="nav-number">1.1.</span> <span class="nav-text">1. 概述</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#1-1-%E7%BF%BB%E8%AF%91%E7%BF%BB%E8%AF%91%EF%BC%9F%E4%BB%80%E4%B9%88%E5%8F%ABNIO%EF%BC%9F"><span class="nav-number">1.1.1.</span> <span class="nav-text">1.1 翻译翻译？什么叫NIO？</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#1-2-Buffer%E7%AE%80%E4%BB%8B"><span class="nav-number">1.1.2.</span> <span class="nav-text">1.2 Buffer简介</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#1-2-1-%E5%86%99%E6%A8%A1%E5%BC%8F"><span class="nav-number">1.1.2.1.</span> <span class="nav-text">1.2.1 写模式</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#1-2-2-%E8%AF%BB%E6%A8%A1%E5%BC%8F%E5%88%B0%E5%86%99%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%88%87%E6%8D%A2"><span class="nav-number">1.1.2.2.</span> <span class="nav-text">1.2.2 读模式到写模式的两种切换</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#1-3-Channel%E7%AE%80%E4%BB%8B"><span class="nav-number">1.1.3.</span> <span class="nav-text">1.3 Channel简介</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#1-3-1-%E5%87%A0%E4%B8%AA%E9%87%8D%E8%A6%81%E7%9A%84Channel"><span class="nav-number">1.1.3.1.</span> <span class="nav-text">1.3.1 几个重要的Channel</span></a></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#2-%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D%E5%AE%9E%E6%88%98"><span class="nav-number">1.2.</span> <span class="nav-text">2. 文件拷贝实战</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#3-Selector%E6%A6%82%E8%BF%B0"><span class="nav-number">1.3.</span> <span class="nav-text">3. Selector概述</span></a></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%AE%9E%E6%88%98"><span class="nav-number">2.</span> <span class="nav-text">实战</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#1-NIO%E6%A8%A1%E5%9E%8B%E5%88%86%E6%9E%90"><span class="nav-number">2.1.</span> <span class="nav-text">1. NIO模型分析</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#2-%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E9%87%8D%E7%82%B9%E7%9F%A5%E8%AF%86"><span class="nav-number">2.2.</span> <span class="nav-text">2. 聊天室项目代码重点知识</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#2-1-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF"><span class="nav-number">2.2.1.</span> <span class="nav-text">2.1 服务器端</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#2-1-1-%E5%AD%97%E6%AE%B5"><span class="nav-number">2.2.1.1.</span> <span class="nav-text">2.1.1 字段</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-1-2-%E4%B8%BB%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.1.2.</span> <span class="nav-text">2.1.2 主方法</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-1-3-%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.1.3.</span> <span class="nav-text">2.1.3 处理方法</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-1-4-%E8%BD%AC%E5%8F%91%E6%B6%88%E6%81%AF%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.1.4.</span> <span class="nav-text">2.1.4 转发消息方法</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-1-5-%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.1.5.</span> <span class="nav-text">2.1.5 接收消息方法</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#2-2-%E5%AE%A2%E6%88%B7%E7%AB%AF"><span class="nav-number">2.2.2.</span> <span class="nav-text">2.2 客户端</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#2-2-1-%E5%AD%97%E6%AE%B5"><span class="nav-number">2.2.2.1.</span> <span class="nav-text">2.2.1 字段</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-2-2-%E4%B8%BB%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.2.2.</span> <span class="nav-text">2.2.2 主方法</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-2-3-%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.2.3.</span> <span class="nav-text">2.2.3 处理方法</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-2-4-%E6%8E%A5%E6%94%B6%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.2.4.</span> <span class="nav-text">2.2.4 接收方法</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#2-2-5-%E5%8F%91%E9%80%81%E6%96%B9%E6%B3%95"><span class="nav-number">2.2.2.5.</span> <span class="nav-text">2.2.5 发送方法</span></a></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#3-%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C"><span class="nav-number">2.3.</span> <span class="nav-text">3. 测试结果</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#4-%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81"><span class="nav-number">2.4.</span> <span class="nav-text">4. 完整代码</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#4-1-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF"><span class="nav-number">2.4.1.</span> <span class="nav-text">4.1 服务器端</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#4-2-%E5%AE%A2%E6%88%B7%E7%AB%AF"><span class="nav-number">2.4.2.</span> <span class="nav-text">4.2 客户端</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#4-3-%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9B%91%E5%90%AC%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E8%BF%9B%E7%A8%8B"><span class="nav-number">2.4.3.</span> <span class="nav-text">4.3 客户端监听用户输入进程</span></a></li></ol></li></ol></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="Kayleh"
      src="/images/mygo.jpg">
  <p class="site-author-name" itemprop="name">Kayleh</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">247</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
        <span class="site-state-item-count">5</span>
        <span class="site-state-item-name">categories</span>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">34</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author animated">
      <span class="links-of-author-item">
        <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaA==" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;kayleh"><i class="fab fa-github fa-fw"></i>GitHub</span>
      </span>
      <span class="links-of-author-item">
        <span class="exturl" data-url="bWFpbHRvOndlYnNpdGVAa2F5bGVoLnRvcA==" title="E-Mail → mailto:website@kayleh.top"><i class="fa fa-envelope fa-fw"></i>E-Mail</span>
      </span>
  </div>
  <div class="cc-license animated" itemprop="license">
    <span class="exturl cc-opacity" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><img src="https://cdnjs.cloudflare.com/ajax/libs/creativecommons-vocabulary/2020.11.3/assets/license_badges/small/by_nc_sa.svg" alt="Creative Commons"></span>
  </div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="en">
    <link itemprop="mainEntityOfPage" href="https://blog.kayleh.top/posts/NIO-blocking-model">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/mygo.jpg">
      <meta itemprop="name" content="Kayleh">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="NIO blocking model | Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          NIO blocking model<span class="exturl post-edit-link" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaC9rYXlsZWguZ2l0aHViLmlvMi9lZGl0L21hc3Rlci9zb3VyY2UvX3Bvc3RzL05JT+aooeWeiy5tZA==" title="Edit this post"><i class="fa fa-pen-nib"></i></span>
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">Posted on</span>

      <time title="Created: 2020-12-05 03:33:46" itemprop="dateCreated datePublished" datetime="2020-12-05T03:33:46+08:00">2020-12-05</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">Edited on</span>
      <time title="Modified: 2025-02-04 00:14:08" itemprop="dateModified" datetime="2025-02-04T00:14:08+08:00">2025-02-04</time>
    </span>

  
    <span class="post-meta-item" title="Views" id="busuanzi_container_page_pv">
      <span class="post-meta-item-icon">
        <i class="far fa-eye"></i>
      </span>
      <span class="post-meta-item-text">Views: </span>
      <span id="busuanzi_value_page_pv"></span>
    </span>
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><h1 id="NIO模型"><a href="#NIO模型" class="headerlink" title="NIO模型"></a>NIO模型</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><h3 id="1-1-翻译翻译？什么叫NIO？"><a href="#1-1-翻译翻译？什么叫NIO？" class="headerlink" title="1.1 翻译翻译？什么叫NIO？"></a>1.1 翻译翻译？什么叫NIO？</h3><p>NIO：我认为翻译成<code>Non-Blocking</code>，更加的通俗直白，相比于BIO，也有一个对比，叫他非阻塞IO最好不过了</p>
<ul>
<li>它和BIO有以下的区别<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721215841190.png" alt="在这里插入图片描述"></li>
<li>Channel是<code>双向</code>的，即可以读又可以写，相比于Stream，它并不区分出输入流和输出流，而且Channel可以完成非阻塞的读写，也可以完成阻塞的读写</li>
</ul>
<h3 id="1-2-Buffer简介"><a href="#1-2-Buffer简介" class="headerlink" title="1.2 Buffer简介"></a>1.2 Buffer简介</h3><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220142379.png" alt="在这里插入图片描述"></p>
<ul>
<li>Channel的读写是离不开Buffer的，Buffer实际上内存上一块用来读写的区域。</li>
</ul>
<h4 id="1-2-1-写模式"><a href="#1-2-1-写模式" class="headerlink" title="1.2.1 写模式"></a>1.2.1 写模式</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220305715.png" alt="在这里插入图片描述"></p>
<ul>
<li>其中三个指针我们要了解一下，<code>position</code>为当前指针位置，<code>limit</code>用于读模式，用它来标记可读的最大范围，<code>capacity</code>是最大的可写范围阈值</li>
</ul>
<p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220837981.png" alt="在这里插入图片描述"></p>
<p>当我们写数据写了四个格子时，我们执行<code>flip()</code>方法，即可转变为<code>读模式</code>，limit指针就直接变到了我们刚刚写数据的极限位置，position指针回到初始位置，这样我们就可以将数据读出来了<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721220618271.png" alt="在这里插入图片描述"></p>
<h4 id="1-2-2-读模式到写模式的两种切换"><a href="#1-2-2-读模式到写模式的两种切换" class="headerlink" title="1.2.2 读模式到写模式的两种切换"></a>1.2.2 读模式到写模式的两种切换</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221126713.png" alt="在这里插入图片描述"></p>
<ol>
<li>当我们将数据全部读完时，切换到写模式<br>调用<code>clear()</code>方法，它会使position指针回到初始位置，limit回到最远端，这样就可以重新开始数据了，虽然clear意为清除，但是其实它只是将指针的位置移动了，并没有将数据清除，而是会覆盖原来的位置<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221133628.png" alt="在这里插入图片描述"></li>
<li>只读了部分数据，我想将未读的部分保留，而现在我又要开始先进行写模式的操作了，这样可以执行<code>compact()</code>方法<br>这个方法会<code>将没有读到的数据保存到初始位置</code>，而<code>position指针的位置将会移动到这些数据的后面位置</code>，从未读的数据后开始进行写数据<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221448757.png" alt="在这里插入图片描述"><br>之后再读数据的时候，我们就能将上次没有读到的数据读出来了</li>
</ol>
<h3 id="1-3-Channel简介"><a href="#1-3-Channel简介" class="headerlink" title="1.3 Channel简介"></a>1.3 Channel简介</h3><p>Channel间的数据交换，都需要依赖Buffer<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221615368.png" alt="在这里插入图片描述"></p>
<h4 id="1-3-1-几个重要的Channel"><a href="#1-3-1-几个重要的Channel" class="headerlink" title="1.3.1 几个重要的Channel"></a>1.3.1 几个重要的Channel</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200721221704507.png" alt="在这里插入图片描述"></p>
<ul>
<li>FileChannel：用于文件传输</li>
<li>ServerSocketChannel和SocketChannel：用于网络编程的传输</li>
</ul>
<h2 id="2-文件拷贝实战"><a href="#2-文件拷贝实战" class="headerlink" title="2. 文件拷贝实战"></a>2. 文件拷贝实战</h2><ul>
<li>一个字节一个字节的拷贝实在是慢的不行。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.FileChannel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">FileCopyRunner</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">copyFile</span><span class="params">(File source,File target)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileCopyDemo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(Closeable closeable)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(closeable != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                closeable.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不使用任何缓冲的留的拷贝</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">FileCopyRunner</span> <span class="variable">noBufferStreamCopy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileCopyRunner</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">copyFile</span><span class="params">(File source, File target)</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">fin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">OutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fin = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(source);</span><br><span class="line">                fout = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(target);</span><br><span class="line">                <span class="type">int</span> result;</span><br><span class="line">                <span class="keyword">while</span>((result = fin.read()) != - <span class="number">1</span>)&#123;</span><br><span class="line">                    fout.write(result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                close(fin);</span><br><span class="line">                close(fout);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用缓冲区的流的拷贝</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">FileCopyRunner</span> <span class="variable">bufferStreamCopy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileCopyRunner</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">copyFile</span><span class="params">(File source, File target)</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">fin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">OutputStream</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fin = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(source);</span><br><span class="line">                fout = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(target);</span><br><span class="line">                <span class="comment">//创建缓冲区</span></span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">int</span> result;</span><br><span class="line">                <span class="keyword">while</span>((result = fin.read(buffer)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="comment">//result这里表示从中读出来的具体字节数</span></span><br><span class="line">                    <span class="comment">//虽然缓冲区中能缓存1024，但是我们读取的时候不一定就有这么多字节</span></span><br><span class="line">                    <span class="comment">//所以我们使用result做下面的参数</span></span><br><span class="line">                    fout.write(buffer,<span class="number">0</span>,result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                close(fin);</span><br><span class="line">                close(fout);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用带有缓冲区的channel复制 nio</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">FileCopyRunner</span> <span class="variable">nioBufferCopy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileCopyRunner</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">copyFile</span><span class="params">(File source, File target)</span> &#123;</span><br><span class="line">            <span class="type">FileChannel</span> <span class="variable">fin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">FileChannel</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fin = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(source).getChannel();</span><br><span class="line">                fout = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(target).getChannel();</span><br><span class="line">                <span class="type">ByteBuffer</span> <span class="variable">byteBuffer</span> <span class="operator">=</span> ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(fin.read(byteBuffer) != -<span class="number">1</span>)&#123;</span><br><span class="line">                    byteBuffer.flip();<span class="comment">//转变为读模式</span></span><br><span class="line">                    <span class="keyword">while</span> (byteBuffer.hasRemaining())&#123;</span><br><span class="line">                        fout.write(byteBuffer);</span><br><span class="line">                    &#125;</span><br><span class="line">                    byteBuffer.clear();<span class="comment">//转变为写模式</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                close(fin);</span><br><span class="line">                close(fout);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用没有缓冲区的channel复制文件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">FileCopyRunner</span> <span class="variable">nioTransferCopy</span> <span class="operator">=</span> ((source, target) -&gt; &#123;</span><br><span class="line">        <span class="type">FileChannel</span> <span class="variable">fin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">FileChannel</span> <span class="variable">fout</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fin = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(source).getChannel();</span><br><span class="line">            fout = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(target).getChannel();</span><br><span class="line"></span><br><span class="line">            <span class="type">long</span> <span class="variable">transferred</span> <span class="operator">=</span> <span class="number">0L</span>;</span><br><span class="line">            <span class="type">long</span> <span class="variable">size</span> <span class="operator">=</span> fin.size();</span><br><span class="line">            <span class="keyword">while</span>(transferred != size)&#123;</span><br><span class="line">                <span class="comment">//如果拷贝的大小没有达到源文件的大小就要一直拷贝</span></span><br><span class="line">                transferred += fin.transferTo(<span class="number">0</span>,size,fout);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            close(fin);</span><br><span class="line">            close(fout);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;J:\\StudySpace\\Java秒杀系统方案优化-高性能高并发实战\\project.zip&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">target</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;J:\\StudySpace\\Java秒杀系统方案优化-高性能高并发实战\\p1.zip&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">target2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;J:\\StudySpace\\Java秒杀系统方案优化-高性能高并发实战\\p2.zip&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">target3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;J:\\StudySpace\\Java秒杀系统方案优化-高性能高并发实战\\p3.zip&quot;</span>);</span><br><span class="line">        <span class="type">File</span> <span class="variable">target4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;J:\\StudySpace\\Java秒杀系统方案优化-高性能高并发实战\\p4.zip&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; noBufferStreamCopy.copyFile(source,target)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; bufferStreamCopy.copyFile(source,target2)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; nioBufferCopy.copyFile(source,target3)).start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(() -&gt; nioTransferCopy.copyFile(source,target4)).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-Selector概述"><a href="#3-Selector概述" class="headerlink" title="3. Selector概述"></a>3. Selector概述</h2><ul>
<li>Channel需要在Selector上注册<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722145734223.png" alt="在这里插入图片描述"></li>
<li>注册的同时，要告诉Selector监听的状态<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722145833687.png" alt="在这里插入图片描述"></li>
<li>Channel对应的状态有：<code>CONNECT</code>：socketChannel已经与服务器建立连接的状态；<code>ACCEPT</code>：serverSocketChannel已经与客户端建立连接的状态；<code>READ</code>：可读状态；<code>WRITE</code>：可写状态<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722150046897.png" alt="在这里插入图片描述"></li>
<li>Channel在Selector上注册完成后，会返回一个SelectKey对象，其中有几个重要的方法：<code>interestOps</code>：查看注册的Channel绑定的状态；<code>readyOps</code>：查看哪些是可操作的状态；<code>channel</code>：返回channel对象；<code>selector</code>：返回selector对象；<code>attachment</code>：附加其他对象<img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722150611349.png" alt="在这里插入图片描述"></li>
<li>调用Selector的select方法，返回它监听的事件的数量，可同时响应多个事件。不过它是阻塞式的调用，当监听的事件中没有可以用来响应请求的，则会被阻塞，直到有可用的channel能够响应该请求，才会返回<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722150651862.png" alt="在这里插入图片描述"></li>
</ul>
<h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><h2 id="1-NIO模型分析"><a href="#1-NIO模型分析" class="headerlink" title="1. NIO模型分析"></a>1. NIO模型分析</h2><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/202007222229375.png" alt="在这里插入图片描述"></p>
<ul>
<li>在服务器端创建一个<code>Selector</code>，将<code>ServerSocketChannel注册到Selector上</code>，被Selector监听的事件为<code>Accept</code></li>
</ul>
<hr>
<p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722222907340.png" alt="在这里插入图片描述"></p>
<ul>
<li>Client1请求与服务器建立连接，Selector接收到Accept事件，服务器端对其进行处理（handles），服务器与客户端连接成功</li>
</ul>
<hr>
<p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722223243146.png" alt="在这里插入图片描述"></p>
<ul>
<li>建立连接过程中，服务器通道（ServerSocketChannel）调用<code>accept方法</code>，获取到与客户端进行连接的通道（<code>SocketChannel</code>），也将其<code>注册到Selector</code>上，<code>监听READ事件</code>，这样，客户端向服务器发送消息，就能触发该READ事件进行响应，读取该消息。</li>
</ul>
<blockquote>
<p>Tips: 我们处理这个建立连接并接收从客户端传过来的消息，都是在<code>一个线程</code>内完成的。在bio中，则会为单个客户端单独开辟一个线程，用于处理消息，并且客户端在不发送消息的过程中，该线程一直是阻塞的。</p>
</blockquote>
<hr>
<p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722223923471.png" alt="在这里插入图片描述"></p>
<ul>
<li>同样，两个客户连接过来也是一个线程在起作用，将客户端2的SocketChannel注册到服务器的Selector，并监听READ事件，随时响应随时处理。即一个客户端有一个SocketChannel，两个客户端就有两个SocketChannel，这个就是我们使用nio编程模型来用一个selector对象在一个线程里边监听以及处理多个通道的io的操作</li>
</ul>
<hr>
<p>各个Channel是被配置为<code>非阻塞式</code>的（configureBlocking(false)），但是Selector本身调用的<code>select()方法</code>，它是<code>阻塞式</code>的，当监听在Selector上的事件都没有触发时，那么它就会被阻塞，直到有事件对其进行响应</p>
<h2 id="2-聊天室项目代码重点知识"><a href="#2-聊天室项目代码重点知识" class="headerlink" title="2. 聊天室项目代码重点知识"></a>2. 聊天室项目代码重点知识</h2><h3 id="2-1-服务器端"><a href="#2-1-服务器端" class="headerlink" title="2.1 服务器端"></a>2.1 服务器端</h3><h4 id="2-1-1-字段"><a href="#2-1-1-字段" class="headerlink" title="2.1.1 字段"></a>2.1.1 字段</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/2020072222584984.png" alt="在这里插入图片描述"></p>
<h4 id="2-1-2-主方法"><a href="#2-1-2-主方法" class="headerlink" title="2.1.2 主方法"></a>2.1.2 主方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722230412178.png" alt="在这里插入图片描述"></p>
<h4 id="2-1-3-处理方法"><a href="#2-1-3-处理方法" class="headerlink" title="2.1.3 处理方法"></a>2.1.3 处理方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722230845441.png" alt="在这里插入图片描述"></p>
<h4 id="2-1-4-转发消息方法"><a href="#2-1-4-转发消息方法" class="headerlink" title="2.1.4 转发消息方法"></a>2.1.4 转发消息方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233104941.png" alt="在这里插入图片描述"></p>
<h4 id="2-1-5-接收消息方法"><a href="#2-1-5-接收消息方法" class="headerlink" title="2.1.5 接收消息方法"></a>2.1.5 接收消息方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722231319234.png" alt="在这里插入图片描述"></p>
<h3 id="2-2-客户端"><a href="#2-2-客户端" class="headerlink" title="2.2 客户端"></a>2.2 客户端</h3><h4 id="2-2-1-字段"><a href="#2-2-1-字段" class="headerlink" title="2.2.1 字段"></a>2.2.1 字段</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722231507769.png" alt="在这里插入图片描述"></p>
<h4 id="2-2-2-主方法"><a href="#2-2-2-主方法" class="headerlink" title="2.2.2 主方法"></a>2.2.2 主方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722231820775.png" alt="在这里插入图片描述"></p>
<h4 id="2-2-3-处理方法"><a href="#2-2-3-处理方法" class="headerlink" title="2.2.3 处理方法"></a>2.2.3 处理方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/202007222330187.png" alt="在这里插入图片描述"></p>
<h4 id="2-2-4-接收方法"><a href="#2-2-4-接收方法" class="headerlink" title="2.2.4 接收方法"></a>2.2.4 接收方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233204365.png" alt="在这里插入图片描述"></p>
<h4 id="2-2-5-发送方法"><a href="#2-2-5-发送方法" class="headerlink" title="2.2.5 发送方法"></a>2.2.5 发送方法</h4><p><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233310845.png" alt="在这里插入图片描述"></p>
<hr>
<h2 id="3-测试结果"><a href="#3-测试结果" class="headerlink" title="3. 测试结果"></a>3. 测试结果</h2><ul>
<li>服务器端显示信息正确<br><img data-src="https://cdn.kayleh.top/gh/kayleh/cdn2/IO/NIO%E6%A8%A1%E5%9E%8B/20200722233342438.png" alt="在这里插入图片描述"></li>
</ul>
<h2 id="4-完整代码"><a href="#4-完整代码" class="headerlink" title="4. 完整代码"></a>4. 完整代码</h2><h3 id="4-1-服务器端"><a href="#4-1-服务器端" class="headerlink" title="4.1 服务器端"></a>4.1 服务器端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Closeable;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChatServer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_PORT</span> <span class="operator">=</span> <span class="number">8888</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">QUIT</span> <span class="operator">=</span> <span class="string">&quot;quit&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BUFFER</span> <span class="operator">=</span> <span class="number">1024</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ServerSocketChannel serverSocketChannel;</span><br><span class="line">    <span class="keyword">private</span> Selector selector;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ByteBuffer</span> <span class="variable">rBuffer</span> <span class="operator">=</span> ByteBuffer.allocate(BUFFER);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ByteBuffer</span> <span class="variable">wBuffer</span> <span class="operator">=</span> ByteBuffer.allocate(BUFFER);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Charset</span> <span class="variable">charset</span> <span class="operator">=</span> Charset.forName(String.valueOf(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChatServer</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(DEFAULT_PORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChatServer</span><span class="params">(<span class="type">int</span> port)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">readyToQuit</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> QUIT.equals(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(Closeable closeable)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(closeable != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                closeable.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建ServerSocketChannel通道</span></span><br><span class="line">            serverSocketChannel = ServerSocketChannel.open();</span><br><span class="line">            <span class="comment">//设置非阻塞模式，默认情况也是阻塞调用的</span></span><br><span class="line">            serverSocketChannel.configureBlocking(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//绑定端口号</span></span><br><span class="line">            serverSocketChannel.bind(<span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(port));</span><br><span class="line">            <span class="comment">//创建selector</span></span><br><span class="line">            selector = Selector.open();</span><br><span class="line">            <span class="comment">//将accept事件注册到selector上</span></span><br><span class="line">            serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">            System.out.println(<span class="string">&quot;服务器启动成功，监听端口号：&quot;</span> + port + <span class="string">&quot;...&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开始进入监听模式</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="comment">//阻塞式调用</span></span><br><span class="line">                selector.select();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//获取所有的监听事件，</span></span><br><span class="line">                Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">                <span class="keyword">for</span> (SelectionKey selectionKey : selectionKeys) &#123;</span><br><span class="line">                    <span class="comment">//处理事件</span></span><br><span class="line">                    handles(selectionKey);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//将已经处理完成的事件进行清空</span></span><br><span class="line">                selectionKeys.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            close(selector);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理事件 处理accept事件 和 read事件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> selectionKey 与selector绑定的channel的key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">handles</span><span class="params">(SelectionKey selectionKey)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span>(selectionKey.isAcceptable())&#123;</span><br><span class="line">            <span class="comment">//处理accept事件</span></span><br><span class="line">            <span class="comment">//先要获取ServerSocketChannel</span></span><br><span class="line">            <span class="type">ServerSocketChannel</span> <span class="variable">server</span> <span class="operator">=</span>(ServerSocketChannel) selectionKey.channel();</span><br><span class="line">            <span class="comment">// 我觉得这样写也行 直接调用全局变量 SocketChannel socketChannel = serverSocketChannel.accept();</span></span><br><span class="line">            <span class="comment">//获取对应的客户端的通道</span></span><br><span class="line">            <span class="type">SocketChannel</span> <span class="variable">socketChannel</span> <span class="operator">=</span> server.accept();</span><br><span class="line">            socketChannel.configureBlocking(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//将客户端通道绑定到selector上，监听read事件</span></span><br><span class="line">            socketChannel.register(selector,SelectionKey.OP_READ);</span><br><span class="line">            System.out.println(<span class="string">&quot;客户端&quot;</span> + socketChannel.socket().getPort() + <span class="string">&quot;:已经连接&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(selectionKey.isReadable())&#123;</span><br><span class="line">            <span class="comment">//处理read事件</span></span><br><span class="line">            <span class="type">SocketChannel</span> <span class="variable">clientChannel</span> <span class="operator">=</span> (SocketChannel) selectionKey.channel();</span><br><span class="line">            <span class="type">String</span> <span class="variable">fwdMsg</span> <span class="operator">=</span> receive(clientChannel);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(fwdMsg.isEmpty())&#123;</span><br><span class="line">                <span class="comment">//接不到消息了，那么就把这个通道给他移除了</span></span><br><span class="line">                selectionKey.cancel();</span><br><span class="line">                <span class="comment">//通知selector有注册的通道被移除了，更新状态</span></span><br><span class="line">                selector.wakeup();</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//转发消息</span></span><br><span class="line">                forwardMessage(clientChannel,fwdMsg);</span><br><span class="line">                <span class="keyword">if</span>(readyToQuit(fwdMsg))&#123;</span><br><span class="line">                    selectionKey.cancel();</span><br><span class="line">                    selector.wakeup();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转发消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientChannel 客户端通道</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fwdMsg 转发的消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">forwardMessage</span><span class="params">(SocketChannel clientChannel, String fwdMsg)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//keys方法区别于selectedKeys,这个方法返回的是接下来需要被处理的通道key</span></span><br><span class="line">        <span class="comment">//而keys则返回与selector绑定的所有通道key</span></span><br><span class="line">        <span class="comment">//跳过ServerSocketChannel和本身</span></span><br><span class="line">        <span class="keyword">for</span> (SelectionKey selectionKey : selector.keys()) &#123;</span><br><span class="line">            <span class="type">SelectableChannel</span> <span class="variable">channel</span> <span class="operator">=</span> selectionKey.channel();</span><br><span class="line">            <span class="keyword">if</span>(channel <span class="keyword">instanceof</span> ServerSocketChannel)</span><br><span class="line">                System.out.println(<span class="string">&quot;客户端&quot;</span> + clientChannel.socket().getPort() + <span class="string">&quot;：&quot;</span> + fwdMsg);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(selectionKey.isValid() &amp;&amp; !channel.equals(clientChannel))&#123;</span><br><span class="line">                wBuffer.clear();</span><br><span class="line">                <span class="comment">//写入消息</span></span><br><span class="line">                wBuffer.put(charset.encode(<span class="string">&quot;客户端&quot;</span> + clientChannel.socket().getPort() + <span class="string">&quot;：&quot;</span> + fwdMsg));</span><br><span class="line">                <span class="comment">//转换为读模式</span></span><br><span class="line">                wBuffer.flip();</span><br><span class="line">                <span class="comment">//有数据就一直读</span></span><br><span class="line">                <span class="keyword">while</span>(wBuffer.hasRemaining())</span><br><span class="line">                    ((SocketChannel)channel).write(wBuffer);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从客户通道上读取消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clientChannel 客户通道</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">receive</span><span class="params">(SocketChannel clientChannel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//将当前指针置于初始位置，覆盖已有的消息（清空消息）</span></span><br><span class="line">        rBuffer.clear();</span><br><span class="line">        <span class="comment">//不停的向缓存中写</span></span><br><span class="line">        <span class="keyword">while</span>(clientChannel.read(rBuffer) &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="comment">//由写模式到读模式</span></span><br><span class="line">        rBuffer.flip();</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(charset.decode(rBuffer));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ChatServer</span> <span class="variable">chatServer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatServer</span>();</span><br><span class="line">        chatServer.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-2-客户端"><a href="#4-2-客户端" class="headerlink" title="4.2 客户端"></a>4.2 客户端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Closeable;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChatClient</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_SERVER_HOST</span> <span class="operator">=</span> <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_SERVER_PORT</span> <span class="operator">=</span> <span class="number">8888</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">QUIT</span> <span class="operator">=</span> <span class="string">&quot;quit&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BUFFER</span> <span class="operator">=</span> <span class="number">1024</span>;</span><br><span class="line">    <span class="keyword">private</span> String host;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> port;</span><br><span class="line">    <span class="keyword">private</span> SocketChannel clientChannel;</span><br><span class="line">    <span class="keyword">private</span> Selector selector;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ByteBuffer</span> <span class="variable">rBuffer</span> <span class="operator">=</span> ByteBuffer.allocate(BUFFER);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ByteBuffer</span> <span class="variable">wBuffer</span> <span class="operator">=</span> ByteBuffer.allocate(BUFFER);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Charset</span> <span class="variable">charset</span> <span class="operator">=</span> Charset.forName(String.valueOf(StandardCharsets.UTF_8));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChatClient</span><span class="params">(String host, <span class="type">int</span> port)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.host = host;</span><br><span class="line">        <span class="built_in">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ChatClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(DEFAULT_SERVER_HOST,DEFAULT_SERVER_PORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">readyToQuit</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> QUIT.equals(msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(Closeable closeable)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(closeable != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                closeable.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建用户通道</span></span><br><span class="line">            clientChannel = SocketChannel.open();</span><br><span class="line">            clientChannel.configureBlocking(<span class="literal">false</span>);<span class="comment">//这一步千万不能忘了</span></span><br><span class="line">            <span class="comment">//创建selector，并且将用户通道的connect请求注册上去</span></span><br><span class="line">            selector = Selector.open();</span><br><span class="line">            clientChannel.register(selector, SelectionKey.OP_CONNECT);</span><br><span class="line">            <span class="comment">//尝试与服务器创建连接</span></span><br><span class="line">            clientChannel.connect(<span class="keyword">new</span> <span class="title class_">InetSocketAddress</span>(host,port));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (selector.isOpen())&#123;</span><br><span class="line">                <span class="comment">//一直监听selector上注册的channel请求</span></span><br><span class="line">                selector.select();</span><br><span class="line"></span><br><span class="line">                Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">                <span class="keyword">for</span> (SelectionKey selectionKey : selectionKeys) &#123;</span><br><span class="line">                    <span class="comment">//响应请求</span></span><br><span class="line">                    handles(selectionKey);</span><br><span class="line">                &#125;</span><br><span class="line">                selectionKeys.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ClosedSelectorException e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            close(selector);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">handles</span><span class="params">(SelectionKey selectionKey)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//处理connect事件</span></span><br><span class="line">        <span class="keyword">if</span>(selectionKey.isConnectable())&#123;</span><br><span class="line">            <span class="comment">//如果能够与服务器响应了</span></span><br><span class="line">            <span class="type">SocketChannel</span> <span class="variable">channel</span> <span class="operator">=</span> (SocketChannel) selectionKey.channel();</span><br><span class="line">            <span class="keyword">if</span>(channel.isConnectionPending())&#123;</span><br><span class="line">                channel.finishConnect(); <span class="comment">//正式建立连接</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">UserInputHandler</span>(<span class="built_in">this</span>)).start();</span><br><span class="line">            &#125;</span><br><span class="line">            channel.register(selector,SelectionKey.OP_READ);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(selectionKey.isReadable())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> receive(clientChannel);</span><br><span class="line">            <span class="type">SocketChannel</span> <span class="variable">channel</span> <span class="operator">=</span> (SocketChannel) selectionKey.channel();</span><br><span class="line">            <span class="keyword">if</span>(msg.isEmpty())&#123;</span><br><span class="line">                <span class="comment">//服务端异常</span></span><br><span class="line">                close(selector);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//TODO 看看这里信息对不对</span></span><br><span class="line">                System.out.println(msg);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">receive</span><span class="params">(SocketChannel clientChannel)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        rBuffer.clear();</span><br><span class="line">        <span class="comment">//一直读数据</span></span><br><span class="line">        <span class="keyword">while</span> (clientChannel.read(rBuffer) &gt; <span class="number">0</span>);</span><br><span class="line">        rBuffer.flip();</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(charset.decode(rBuffer));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">send</span><span class="params">(String msg)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span>(msg.isEmpty())</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        wBuffer.clear();</span><br><span class="line">        wBuffer.put(charset.encode(msg));</span><br><span class="line">        wBuffer.flip();</span><br><span class="line">        <span class="keyword">while</span>(wBuffer.hasRemaining())&#123;</span><br><span class="line">            clientChannel.write(wBuffer);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(QUIT.equals(msg))</span><br><span class="line">            close(selector);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ChatClient</span> <span class="variable">chatClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChatClient</span>();</span><br><span class="line">        chatClient.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-3-客户端监听用户输入进程"><a href="#4-3-客户端监听用户输入进程" class="headerlink" title="4.3 客户端监听用户输入进程"></a>4.3 客户端监听用户输入进程</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInputHandler</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ChatClient chatClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInputHandler</span><span class="params">(ChatClient chatClient)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.chatClient = chatClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//等待用户输入信息</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">consoleReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> consoleReader.readLine();</span><br><span class="line">                chatClient.send(msg);</span><br><span class="line">                <span class="keyword">if</span>(chatClient.readyToQuit(msg)) <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


    </div>

    
    
    

    <footer class="post-footer">
          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>Post author:  </strong>Kayleh
  </li>
  <li class="post-copyright-link">
      <strong>Post link: </strong>
      <a href="https://blog.kayleh.top/posts/NIO-blocking-model" title="NIO blocking model">https://blog.kayleh.top/posts/NIO-blocking-model</a>
  </li>
  <li class="post-copyright-license">
      <strong>Copyright Notice:  </strong>All articles in this blog are licensed under <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</span> unless stating additionally.
  </li>
</ul>
</div>

          <div class="followme">
  <span>Welcome to my other publishing channels</span>

  <div class="social-list">

      <div class="social-item">
          <a target="_blank" class="social-link" href="/atom.xml">
            <span class="icon">
              <i class="fa fa-rss"></i>
            </span>

            <span class="label">RSS</span>
          </a>
      </div>
  </div>
</div>

          <div class="post-tags">
              <a href="/tags/network/" rel="tag"><i class="fa fa-tag"></i> network</a>
          </div>

        
  <div class="social-like a2a_kit a2a_kit_size_32 a2a_default_style">
    <a class="a2a_dd" target="_blank" rel="noopener" href="https://www.addtoany.com/share"></a>
      <a class="a2a_button_facebook"></a>
      <a class="a2a_button_twitter"></a>
  </div>

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/posts/BIO-blocking-model" rel="prev" title="BIO blocking model">
                  <i class="fa fa-angle-left"></i> BIO blocking model
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/posts/AIO-blocking-model" rel="next" title="AIO blocking model">
                  AIO blocking model <i class="fa fa-angle-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






    <div class="comments gitalk-container"></div>
</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">

  <div class="copyright">
    &copy; 2019 – 
    <span itemprop="copyrightYear">2025</span>
    <span class="with-love">
      <i class="fa fa-heart"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">true</span>
  </div>
<div class="busuanzi-count">
    <span class="post-meta-item" id="busuanzi_container_site_uv">
      <span class="post-meta-item-icon">
        <i class="fa fa-user"></i>
      </span>
      <span class="site-uv" title="Total Visitors">
        <span id="busuanzi_value_site_uv"></span>
      </span>
    </span>
    <span class="post-meta-item" id="busuanzi_container_site_pv">
      <span class="post-meta-item-icon">
        <i class="fa fa-eye"></i>
      </span>
      <span class="site-pv" title="Total Views">
        <span id="busuanzi_value_site_pv"></span>
      </span>
    </span>
</div>

    </div>
  </footer>

  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>
  <div class="sidebar-dimmer"></div>
  <div class="back-to-top" role="button" aria-label="Back to top">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script size="300" alpha="0.6" zIndex="-1" src="https://cdnjs.cloudflare.com/ajax/libs/ribbon.js/1.0.2/ribbon.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/next-theme-pjax/0.6.0/pjax.min.js" integrity="sha256-vxLn1tSKWD4dqbMRyv940UYw4sXgMtYcK6reefzZrao=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.umd.js" integrity="sha256-a+H7FYzJv6oU2hfsfDGM2Ohw/cR9v+hPfxHCLdmCrE8=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.1.0/medium-zoom.min.js" integrity="sha256-ZgMyDAIYDYGxbcpJcfUnYwNevG/xi9OHKaR/8GK+jWc=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/sidebar.js"></script><script src="/js/next-boot.js"></script><script src="/js/pjax.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/hexo-generator-searchdb/1.4.1/search.js" integrity="sha256-1kfA5uHPf65M5cphT2dvymhkuyHPQp5A53EGZOnOLmc=" crossorigin="anonymous"></script>
<script src="/js/third-party/search/local-search.js"></script>
<script src="//code.tidio.co/dq5klo9ydptaxokj83vcwnusf63dogzr.js"></script>
<script src="/js/third-party/chat/tidio.js"></script>




  <script src="/js/third-party/fancybox.js"></script>

  <script src="/js/third-party/pace.js"></script>

  <script src="/js/third-party/addtoany.js"></script>

  
  <script data-pjax async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>




  

  <script class="next-config" data-name="enableMath" type="application/json">false</script><script class="next-config" data-name="mathjax" type="application/json">{"enable":true,"tags":"ams","js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js","integrity":"sha256-MASABpB4tYktI2Oitl4t+78w/lyA+D7b/s9GEP0JOGI="}}</script>
<script src="/js/third-party/math/mathjax.js"></script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.css" integrity="sha256-AJnUHL7dBv6PGaeyPQJcgQPDjt/Hn/PvYZde1iqfp8U=" crossorigin="anonymous">

<script class="next-config" data-name="gitalk" type="application/json">{"enable":true,"github_id":"Kayleh","repo":"kayleh.top.giscus","client_id":"Ov23liJZlhhVSuSynF9Q","client_secret":"d16c7023956f130d20927ad469dfe83295864094","admin_user":"Kayleh","distraction_free_mode":true,"proxy":"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token","language":null,"js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.min.js","integrity":"sha256-MVK9MGD/XJaGyIghSVrONSnoXoGh3IFxLw0zfvzpxR4="},"path_md5":"501aba2d6ba555b3577fafdb048249cc"}</script>
<script src="/js/third-party/comments/gitalk.js"></script>

</body>
</html>
