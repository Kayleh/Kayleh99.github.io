<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#222" media="(prefers-color-scheme: dark)"><meta name="generator" content="Hexo 7.3.0">
<link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/mygo.jpg">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/mygo.jpg">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha256-dABdfBfUoC8vJUBOwGVdm8L9qlMWaHTIfXt+7GnZCIo=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.css" integrity="sha256-gkQVf8UKZgQ0HyuxL/VnacadJ+D2Kox2TCEBuNQg5+w=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/themes/blue/pace-theme-center-simple.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pace/1.2.4/pace.min.js" integrity="sha256-gqd7YTjg/BtfqWSwsJOvndl0Bxc8gFImLEkXQT8+qj0=" crossorigin="anonymous"></script>

<script class="next-config" data-name="main" type="application/json">{"hostname":"blog.kayleh.top","root":"/","images":"/images","scheme":"Gemini","darkmode":true,"version":"8.22.0","exturl":true,"sidebar":{"position":"left","width_expanded":320,"width_dual_column":240,"display":"post","padding":18,"offset":12},"hljswrap":true,"copycode":{"enable":false,"style":null},"fold":{"enable":false,"height":500},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":true,"lazyload":true,"pangu":false,"comments":{"style":"tabs","active":"gitalk","storage":true,"lazyload":true,"nav":null,"activeClass":"gitalk"},"stickytabs":false,"motion":{"enable":true,"async":false,"duration":200,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"i18n":{"placeholder":"Searching...","empty":"We didn't find any results for the search: ${query}","hits_time":"${hits} results found in ${time} ms","hits":"${hits} results found"}}</script><script src="/js/config.js"></script>

<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7457165067653912"
     crossorigin="anonymous"></script>
    <meta name="description" content="用户自己建立数据类型定义和使用结构体变量由不同类型数据组成的组合型的数据结构，它称为结构体.">
<meta property="og:type" content="blog">
<meta property="og:title" content="users create data types themselves">
<meta property="og:url" content="https://blog.kayleh.top/posts/users-create-data-types-themselves">
<meta property="og:site_name" content="Kayleh&#39;s Blog">
<meta property="og:description" content="用户自己建立数据类型定义和使用结构体变量由不同类型数据组成的组合型的数据结构，它称为结构体.">
<meta property="og:locale" content="en_US">
<meta property="article:published_time" content="2020-10-25T09:18:07.000Z">
<meta property="article:modified_time" content="2025-02-03T16:14:08.805Z">
<meta property="article:author" content="Kayleh">
<meta property="article:tag" content="C">
<meta name="twitter:card" content="summary">


<link rel="canonical" href="https://blog.kayleh.top/posts/users-create-data-types-themselves">


<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"en","comments":true,"permalink":"https://blog.kayleh.top/posts/users-create-data-types-themselves","path":"posts/users-create-data-types-themselves","title":"users create data types themselves"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>users create data types themselves | Kayleh's Blog</title>
  




  <script>
    (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
    })(window, document, "clarity", "script", "q44a4p85n0");
</script>




  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">Kayleh's Blog</p>
      <i class="logo-line"></i>
    </a>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="Search" role="button">
        <i class="fa fa-search fa-fw fa-lg"></i>
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="fa fa-home fa-fw"></i>Home</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>Archives<span class="badge">247</span></a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="fa fa-user fa-fw"></i>About</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="fa fa-tags fa-fw"></i>Tags<span class="badge">34</span></a></li><li class="menu-item menu-item-friends"><a href="/friends" rel="section"><i class="fa fa-heartbeat fa-fw"></i>friends</a></li><li class="menu-item menu-item-sitemap"><a href="/rss.xml" rel="section"><i class="fa fa-sitemap fa-fw"></i>Sitemap</a></li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>Search
        </a>
      </li>
  </ul>
</nav>



  <div class="search-pop-overlay">
    <div class="popup search-popup">
      <div class="search-header">
        <span class="search-icon">
          <i class="fa fa-search"></i>
        </span>
        <div class="search-input-container">
          <input autocomplete="off" autocapitalize="off" maxlength="80"
                placeholder="Searching..." spellcheck="false"
                type="search" class="search-input">
        </div>
        <span class="popup-btn-close" role="button">
          <i class="fa fa-times-circle"></i>
        </span>
      </div>
      <div class="search-result-container">
        <div class="search-result-icon">
          <i class="fa fa-spinner fa-pulse fa-5x"></i>
        </div>
      </div>
    </div>
  </div>

</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#%E7%94%A8%E6%88%B7%E8%87%AA%E5%B7%B1%E5%BB%BA%E7%AB%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"><span class="nav-number">1.</span> <span class="nav-text">用户自己建立数据类型</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%AE%9A%E4%B9%89%E5%92%8C%E4%BD%BF%E7%94%A8%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F"><span class="nav-number">1.0.1.</span> <span class="nav-text">定义和使用结构体变量</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%AE%9A%E4%B9%89%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E5%8F%98%E9%87%8F"><span class="nav-number">1.0.2.</span> <span class="nav-text">定义结构体类型变量</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%85%88%E5%A3%B0%E6%98%8E%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B-%E5%86%8D%E5%AE%9A%E4%B9%89%E8%AF%A5%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8F%98%E9%87%8F"><span class="nav-number">1.0.2.1.</span> <span class="nav-text">先声明结构体类型,再定义该类型的变量.</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%9C%A8%E5%A3%B0%E6%98%8E%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%90%8C%E6%97%B6%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F"><span class="nav-number">1.0.2.2.</span> <span class="nav-text">在声明类型的同时定义变量</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E4%B8%8D%E6%8C%87%E5%AE%9A%E7%B1%BB%E5%9E%8B%E5%90%8D%E8%80%8C%E7%9B%B4%E6%8E%A5%E5%AE%9A%E4%B9%89%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E5%8F%98%E9%87%8F"><span class="nav-number">1.0.2.3.</span> <span class="nav-text">不指定类型名而直接定义结构体类型变量</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%BC%95%E7%94%A8"><span class="nav-number">1.0.3.</span> <span class="nav-text">结构体变量的初始化和引用</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%8A%8A%E4%B8%80%E4%B8%AA%E5%AD%A6%E7%94%9F%E7%9A%84%E4%BF%A1%E6%81%AF-%E5%8C%85%E6%8B%AC%E5%AD%A6%E5%8F%B7-%E5%A7%93%E5%90%8D%E7%AD%89-%E6%94%BE%E5%9C%A8%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E4%B8%AD-%E7%84%B6%E5%90%8E%E8%BE%93%E5%87%BA%E8%BF%99%E4%B8%AA%E5%AD%A6%E7%94%9F%E7%9A%84%E4%BF%A1%E6%81%AF"><span class="nav-number">1.0.3.0.1.</span> <span class="nav-text">把一个学生的信息(包括学号,姓名等)放在一个结构体变量中,然后输出这个学生的信息.</span></a></li><li class="nav-item nav-level-5"><a class="nav-link" href="#%E8%BE%93%E5%85%A5%E4%B8%A4%E4%B8%AA%E5%AD%A6%E7%94%9F%E7%9A%84%E5%AD%A6%E5%8F%B7-%E5%A7%93%E5%90%8D%E5%92%8C%E6%88%90%E7%BB%A9%E8%BE%83%E9%AB%98%E7%9A%84%E5%AD%A6%E7%94%9F%E7%9A%84%E5%AD%A6%E5%8F%B7-%E5%A7%93%E5%90%8D%E5%92%8C%E6%88%90%E7%BB%A9"><span class="nav-number">1.0.3.0.2.</span> <span class="nav-text">输入两个学生的学号,姓名和成绩较高的学生的学号,姓名和成绩.</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E4%BD%BF%E7%94%A8%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84"><span class="nav-number">1.1.</span> <span class="nav-text">使用结构体数组</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%AE%9A%E4%B9%89%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84"><span class="nav-number">1.1.0.1.</span> <span class="nav-text">定义结构体数组</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%AE%9A%E4%B9%89%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E4%B8%80%E8%88%AC%E5%BD%A2%E5%BC%8F"><span class="nav-number">1.1.0.2.</span> <span class="nav-text">定义结构体数组一般形式</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89n%E4%B8%AA%E5%AD%A6%E7%94%9F%E7%9A%84%E4%BF%A1%E6%81%AF-%E5%8C%85%E6%8B%AC%E5%AD%A6%E5%8F%B7-%E5%A7%93%E5%90%8D-%E6%88%90%E7%BB%A9-%E8%A6%81%E6%B1%82%E6%8C%89%E7%85%A7%E6%88%90%E7%BB%A9%E7%9A%84%E9%AB%98%E4%BD%8E%E9%A1%BA%E5%BA%8F%E8%BE%93%E5%87%BA%E5%90%84%E5%AD%A6%E7%94%9F%E7%9A%84%E4%BF%A1%E6%81%AF"><span class="nav-number">1.1.0.2.1.</span> <span class="nav-text">有n个学生的信息(包括学号,姓名,成绩),要求按照成绩的高低顺序输出各学生的信息.</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%BB%93%E6%9E%84%E4%BD%93%E6%8C%87%E9%92%88"><span class="nav-number">1.2.</span> <span class="nav-text">结构体指针</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8C%87%E5%90%91%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88"><span class="nav-number">1.2.1.</span> <span class="nav-text">指向结构体变量的指针</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E9%80%9A%E8%BF%87%E6%8C%87%E5%90%91%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E4%B8%AD%E6%88%90%E5%91%98%E7%9A%84%E4%BF%A1%E6%81%AF"><span class="nav-number">1.2.1.0.1.</span> <span class="nav-text">通过指向结构体变量的指针变量输出结构体变量中成员的信息</span></a></li></ol></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%A6%82%E6%9E%9Cp%E6%8C%87%E5%90%91%E4%B8%80%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8Fstu-%E4%BB%A5%E4%B8%8B3%E7%A7%8D%E7%94%A8%E6%B3%95%E7%AD%89%E4%BB%B7"><span class="nav-number">1.2.1.1.</span> <span class="nav-text">如果p指向一个结构体变量stu,以下3种用法等价.</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8C%87%E5%90%91%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E7%9A%84%E6%8C%87%E9%92%88"><span class="nav-number">1.2.2.</span> <span class="nav-text">指向结构体数组的指针</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%893%E4%B8%AA%E5%90%8C%E5%AD%A6%E7%9A%84%E4%BF%A1%E6%81%AF-%E6%94%BE%E5%9C%A8%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E4%B8%AD-%E8%A6%81%E6%B1%82%E8%BE%93%E5%87%BA%E5%85%A8%E9%83%A8%E5%90%8C%E5%AD%A6%E7%9A%84%E4%BF%A1%E6%81%AF"><span class="nav-number">1.2.2.0.1.</span> <span class="nav-text">有3个同学的信息,放在结构体数组中,要求输出全部同学的信息.</span></a></li></ol></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%94%A8%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E5%92%8C%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88%E4%BD%9C%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0"><span class="nav-number">1.2.3.</span> <span class="nav-text">用结构体变量和结构体变量的指针作函数参数</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89n%E4%B8%AA%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F-%E5%86%85%E5%90%AB%E5%AD%A6%E7%94%9F%E5%AD%A6%E5%8F%B7-%E5%A7%93%E5%90%8D%E5%92%8C3%E9%97%A8%E8%AF%BE%E7%A8%8B%E7%9A%84%E6%88%90%E7%BB%A9-%E8%A6%81%E6%B1%82%E8%BE%93%E5%87%BA%E5%B9%B3%E5%9D%87%E6%88%90%E7%BB%A9%E6%9C%80%E9%AB%98%E7%9A%84%E5%AD%A6%E7%94%9F%E7%9A%84%E6%88%90%E7%BB%A9-%E5%8C%85%E6%8B%AC%E5%AD%A6%E5%8F%B7-%E5%A7%93%E5%90%8D-3%E9%97%A8%E8%AF%BE%E7%A8%8B%E7%BB%A9%E5%92%8C%E5%B9%B3%E5%9D%87%E6%88%90%E7%BB%A9"><span class="nav-number">1.2.3.0.1.</span> <span class="nav-text">有n个结构体变量,内含学生学号,姓名和3门课程的成绩.要求输出平均成绩最高的学生的成绩(包括学号,姓名,3门课程绩和平均成绩).</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%94%A8%E6%8C%87%E9%92%88%E5%A4%84%E7%90%86%E9%93%BE%E8%A1%A8"><span class="nav-number">1.3.</span> <span class="nav-text">用指针处理链表</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%BB%BA%E7%AB%8B%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%99%E6%80%81%E9%93%BE%E8%A1%A8"><span class="nav-number">1.3.0.1.</span> <span class="nav-text">建立简单的静态链表</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E7%94%B13%E4%B8%AA%E5%AD%A6%E7%94%9F%E6%95%B0%E6%8D%AE%E7%BB%84%E6%88%90%E7%9A%84%E7%BB%93%E7%82%B9%E7%BB%84%E6%88%90%EF%BC%8C%E8%A6%81%E6%B1%82%E8%BE%93%E5%87%BA%E5%90%84%E7%BB%93%E7%82%B9%E7%9A%84%E6%95%B0%E6%8D%AE"><span class="nav-number">1.3.0.1.1.</span> <span class="nav-text">由3个学生数据组成的结点组成，要求输出各结点的数据.</span></a></li></ol></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%BB%BA%E7%AB%8B%E5%8A%A8%E6%80%81%E9%93%BE%E8%A1%A8"><span class="nav-number">1.3.0.2.</span> <span class="nav-text">建立动态链表</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%86%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%E6%9C%893%E5%90%8D%E5%AD%A6%E7%94%9F%E6%95%B0%E6%8D%AE%E7%9A%84%E5%8D%95%E5%90%91%E5%8A%A8%E6%80%81%E9%93%BE%E8%A1%A8"><span class="nav-number">1.3.0.2.1.</span> <span class="nav-text">写一个函数建立一个有3名学生数据的单向动态链表</span></a></li></ol></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E8%BE%93%E5%87%BA%E9%93%BE%E8%A1%A8"><span class="nav-number">1.3.0.3.</span> <span class="nav-text">输出链表</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%B0%86%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%90%84%E7%BB%93%E7%82%B9%E7%9A%84%E6%95%B0%E6%8D%AE%E4%BE%9D%E6%AC%A1%E8%BE%93%E5%87%BAprint"><span class="nav-number">1.3.0.3.1.</span> <span class="nav-text">将链表中各结点的数据依次输出print</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%85%B1%E7%94%A8%E4%BD%93%E7%B1%BB%E5%9E%8B"><span class="nav-number">1.4.</span> <span class="nav-text">共用体类型</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%BC%95%E7%94%A8%E5%85%B1%E7%94%A8%E4%BD%93%E5%8F%98%E9%87%8F%E7%9A%84%E6%96%B9%E5%BC%8F"><span class="nav-number">1.4.0.1.</span> <span class="nav-text">引用共用体变量的方式</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%85%B1%E7%94%A8%E4%BD%93%E7%B1%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E7%89%B9%E7%82%B9"><span class="nav-number">1.4.0.2.</span> <span class="nav-text">共用体类型数据的特点</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E6%9C%89%E8%8B%A5%E5%B9%B2%E4%B8%AA%E4%BA%BA%E5%91%98%E7%9A%84%E6%95%B0%E6%8D%AE-%E5%85%B6%E4%B8%AD%E6%9C%89%E5%AD%A6%E7%94%9F%E5%92%8C%E6%95%99%E5%B8%88-%E5%AD%A6%E7%94%9F%E7%9A%84%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%8C%85%E6%8B%AC-%E5%A7%93%E5%90%8D-%E5%8F%B7%E7%A0%81-%E6%80%A7%E5%88%AB-%E8%81%8C%E4%B8%9A-%E7%8F%AD%E7%BA%A7-%E6%95%99%E5%B8%88%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85%E6%8B%AC-%E5%A7%93%E5%90%8D-%E5%8F%B7%E7%A0%81-%E6%80%A7%E5%88%AB-%E8%81%8C%E4%B8%9A-%E8%81%8C%E5%8A%A1-%E8%A6%81%E6%B1%82%E7%94%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%A1%A8%E6%A0%BC%E6%9D%A5%E5%A4%84%E7%90%86"><span class="nav-number">1.4.0.2.1.</span> <span class="nav-text">有若干个人员的数据,其中有学生和教师.学生的数据中包括:姓名,号码,性别,职业,班级.教师的数据包括:姓名,号码,性别,职业,职务.要求用同一个表格来处理.</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E4%BD%BF%E7%94%A8%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B"><span class="nav-number">1.5.</span> <span class="nav-text">使用枚举类型</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%AE%9A%E4%B9%89"><span class="nav-number">1.5.0.1.</span> <span class="nav-text">定义</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E8%AF%B4%E6%98%8E"><span class="nav-number">1.5.0.2.</span> <span class="nav-text">说明</span></a><ol class="nav-child"><li class="nav-item nav-level-5"><a class="nav-link" href="#%E5%8F%A3%E8%A2%8B%E4%B8%AD%E6%9C%89%E7%BA%A2-%E9%BB%84-%E8%93%9D-%E7%99%BD-%E9%BB%915%E7%A7%8D%E9%A2%9C%E8%89%B2%E7%9A%84%E7%90%83%E8%8B%A5%E5%B9%B2%E4%B8%AA-%E6%AF%8F%E6%AC%A1%E4%BB%8E%E5%8F%A3%E8%A2%8B%E4%B8%AD%E5%85%88%E5%90%8E%E5%8F%96%E5%87%BA3%E4%B8%AA%E7%90%83-%E9%97%AE%E5%BE%97%E5%88%B03%E7%A7%8D%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E7%90%83%E7%9A%84%E5%8F%AF%E8%83%BD%E5%8F%96%E6%B3%95-%E8%BE%93%E5%87%BA%E6%AF%8F%E7%A7%8D%E6%8E%92%E5%88%97%E7%9A%84%E6%83%85%E5%86%B5"><span class="nav-number">1.5.0.2.1.</span> <span class="nav-text">口袋中有红,黄,蓝,白,黑5种颜色的球若干个.每次从口袋中先后取出3个球,问得到3种不同颜色的球的可能取法,输出每种排列的情况.</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E7%94%A8typedef%E5%A3%B0%E6%98%8E%E6%96%B0%E7%B1%BB%E5%9E%8B%E5%90%8D"><span class="nav-number">1.6.</span> <span class="nav-text">用typedef声明新类型名</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#typedef%E5%92%8C-define%E8%A1%A8%E9%9D%A2%E4%B8%8A%E6%9C%89%E7%9B%B8%E4%BC%BC%E4%B9%8B%E5%A4%84"><span class="nav-number">1.6.0.1.</span> <span class="nav-text">typedef和#define表面上有相似之处</span></a></li></ol></li></ol></li></ol></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="Kayleh"
      src="/images/mygo.jpg">
  <p class="site-author-name" itemprop="name">Kayleh</p>
  <div class="site-description" itemprop="description"></div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">247</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
        <span class="site-state-item-count">5</span>
        <span class="site-state-item-name">categories</span>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">34</span>
        <span class="site-state-item-name">tags</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author animated">
      <span class="links-of-author-item">
        <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaA==" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;kayleh"><i class="fab fa-github fa-fw"></i>GitHub</span>
      </span>
      <span class="links-of-author-item">
        <span class="exturl" data-url="bWFpbHRvOndlYnNpdGVAa2F5bGVoLnRvcA==" title="E-Mail → mailto:website@kayleh.top"><i class="fa fa-envelope fa-fw"></i>E-Mail</span>
      </span>
  </div>
  <div class="cc-license animated" itemprop="license">
    <span class="exturl cc-opacity" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><img src="https://cdnjs.cloudflare.com/ajax/libs/creativecommons-vocabulary/2020.11.3/assets/license_badges/small/by_nc_sa.svg" alt="Creative Commons"></span>
  </div>

        </div>
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="en">
    <link itemprop="mainEntityOfPage" href="https://blog.kayleh.top/posts/users-create-data-types-themselves">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/mygo.jpg">
      <meta itemprop="name" content="Kayleh">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="users create data types themselves | Kayleh's Blog">
      <meta itemprop="description" content="">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          users create data types themselves<span class="exturl post-edit-link" data-url="aHR0cHM6Ly9naXRodWIuY29tL2theWxlaC9rYXlsZWguZ2l0aHViLmlvMi9lZGl0L21hc3Rlci9zb3VyY2UvX3Bvc3RzLzkudXNlcnMtY3JlYXRlLWRhdGEtdHlwZXMtdGhlbXNlbHZlcy5tZA==" title="Edit this post"><i class="fa fa-pen-nib"></i></span>
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">Posted on</span>

      <time title="Created: 2020-10-25 17:18:07" itemprop="dateCreated datePublished" datetime="2020-10-25T17:18:07+08:00">2020-10-25</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">Edited on</span>
      <time title="Modified: 2025-02-04 00:14:08" itemprop="dateModified" datetime="2025-02-04T00:14:08+08:00">2025-02-04</time>
    </span>

  
    <span class="post-meta-item" title="Views" id="busuanzi_container_page_pv">
      <span class="post-meta-item-icon">
        <i class="far fa-eye"></i>
      </span>
      <span class="post-meta-item-text">Views: </span>
      <span id="busuanzi_value_page_pv"></span>
    </span>
</div>

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><h1 id="用户自己建立数据类型"><a href="#用户自己建立数据类型" class="headerlink" title="用户自己建立数据类型"></a>用户自己建立数据类型</h1><h3 id="定义和使用结构体变量"><a href="#定义和使用结构体变量" class="headerlink" title="定义和使用结构体变量"></a>定义和使用结构体变量</h3><p>由不同类型数据组成的组合型的数据结构，它称为<strong>结构体</strong>.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">int</span> num;</span><br><span class="line">        <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="type">char</span> sex;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line">        <span class="type">float</span> score;</span><br><span class="line">        <span class="type">char</span> addr[<span class="number">30</span>];</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<p>声明结构体类型的一般形式</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">	&#123;</span>成员表列&#125;;</span><br><span class="line"></span><br><span class="line">结构体成员:</span><br><span class="line">类型名 成员名;</span><br></pre></td></tr></table></figure>

<p>成员可以属于另一个结构体类型</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Date</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Date</span> <span class="title">birthday</span>;</span> <span class="comment">//成员birthday属于struct Date类型</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="定义结构体类型变量"><a href="#定义结构体类型变量" class="headerlink" title="定义结构体类型变量"></a>定义结构体类型变量</h3><h4 id="先声明结构体类型-再定义该类型的变量"><a href="#先声明结构体类型-再定义该类型的变量" class="headerlink" title="先声明结构体类型,再定义该类型的变量."></a>先声明结构体类型,再定义该类型的变量.</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student1</span>,<span class="title">student2</span>;</span></span><br></pre></td></tr></table></figure>

<h4 id="在声明类型的同时定义变量"><a href="#在声明类型的同时定义变量" class="headerlink" title="在声明类型的同时定义变量"></a>在声明类型的同时定义变量</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">float</span> score;</span><br><span class="line">    <span class="type">char</span> addr[<span class="number">30</span>];</span><br><span class="line">&#125; student1, student2;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员表列</span><br><span class="line">&#125;变量名表列;</span><br></pre></td></tr></table></figure>

<h4 id="不指定类型名而直接定义结构体类型变量"><a href="#不指定类型名而直接定义结构体类型变量" class="headerlink" title="不指定类型名而直接定义结构体类型变量"></a>不指定类型名而直接定义结构体类型变量</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员表列</span><br><span class="line">&#125;变量名表列;</span><br></pre></td></tr></table></figure>

<p>没有名字.显然不能再以此结构类型去定义其他变量.</p>
<blockquote>
<ul>
<li>对类型是不分配空间的,只对变量分配空间</li>
<li>结构体类型中的成员名可以与程序中的变量名相同,但二者不代表同一对象</li>
</ul>
</blockquote>
<h3 id="结构体变量的初始化和引用"><a href="#结构体变量的初始化和引用" class="headerlink" title="结构体变量的初始化和引用"></a>结构体变量的初始化和引用</h3><h5 id="把一个学生的信息-包括学号-姓名等-放在一个结构体变量中-然后输出这个学生的信息"><a href="#把一个学生的信息-包括学号-姓名等-放在一个结构体变量中-然后输出这个学生的信息" class="headerlink" title="把一个学生的信息(包括学号,姓名等)放在一个结构体变量中,然后输出这个学生的信息."></a>把一个学生的信息(包括学号,姓名等)放在一个结构体变量中,然后输出这个学生的信息.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">char</span> addr[<span class="number">30</span>];</span><br><span class="line">&#125; a = &#123;<span class="number">10101</span>, <span class="string">&quot;Li Lin&quot;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&quot;123 Beijing Road&quot;</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No.:%ld\nname:%s\nsex:%c\naddress:%s\n&quot;</span>, a.num, a.name, a.sex, a.addr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>C99标准允许对某一成员b.name.其他未被指定初始化的数值型成员被系统初始化为0.字符型成员被系统初始化为’\0’,指针型成员被系统初始化为NULL</p>
</blockquote>
<p>引用结构体变量中成员的值,引用方式为</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">结构体变量名.成员名</span><br></pre></td></tr></table></figure>

<p><code>.</code>是成员运算符,在所有的运算符中优先级最高.</p>
<ul>
<li><p>可以对变量的成员赋值.</p>
</li>
<li><p>同类的结构体变量可以互相赋值</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">student1=student2;</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="输入两个学生的学号-姓名和成绩较高的学生的学号-姓名和成绩"><a href="#输入两个学生的学号-姓名和成绩较高的学生的学号-姓名和成绩" class="headerlink" title="输入两个学生的学号,姓名和成绩较高的学生的学号,姓名和成绩."></a>输入两个学生的学号,姓名和成绩较高的学生的学号,姓名和成绩.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">int</span> num;</span><br><span class="line">        <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="type">float</span> score;</span><br><span class="line">    &#125; student1, student2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter student1 num,name,score:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%s%f&quot;</span>, &amp;student1.num, student1.name, &amp;student1.score);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter student2 num,name,score:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%s%f&quot;</span>, &amp;student2.num, student2.name, &amp;student2.score);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (student1.score &gt; student2.score)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No.:%ld\nname:%s\nscore:%c\n&quot;</span>, student1.num, student1.name, student1.score);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (student1.score &lt; student2.score)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No.:%ld\nname:%s\nscore:%c\n&quot;</span>, student2.num, student2.name, student2.score);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No.:%ld\nname:%s\nscore:%c\n&quot;</span>, student1.num, student1.name, student1.score);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No.:%ld\nname:%s\nscore:%c\n&quot;</span>, student2.num, student2.name, student2.score);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="使用结构体数组"><a href="#使用结构体数组" class="headerlink" title="使用结构体数组"></a>使用结构体数组</h2><h4 id="定义结构体数组"><a href="#定义结构体数组" class="headerlink" title="定义结构体数组"></a>定义结构体数组</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> count;</span><br><span class="line">&#125; leader[<span class="number">3</span>] = &#123;<span class="string">&quot;Li&quot;</span>, <span class="number">0</span>, <span class="string">&quot;Zhang&quot;</span>, <span class="number">0</span>, <span class="string">&quot;Sun&quot;</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> leader_name[<span class="number">20</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, leader_name);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(leader_name, leader[j].name) == <span class="number">0</span>)</span><br><span class="line">                leader[j].count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nResult:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5s:%d\n&quot;</span>, leader[i].name, leader[i].count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="定义结构体数组一般形式"><a href="#定义结构体数组一般形式" class="headerlink" title="定义结构体数组一般形式"></a>定义结构体数组一般形式</h4><p>①</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构体名</span></span><br><span class="line"><span class="class">&#123;</span>成员表列&#125; 数组名[数组长度];</span><br></pre></td></tr></table></figure>

<p>②先声明一个结构体类型(如struct Person),然后再用此类型定义结构体数组</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结构体类型 数组名[数组长度]</span><br><span class="line">如:</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span> <span class="title">leader</span>;</span></span><br></pre></td></tr></table></figure>

<p>对结构体数组初始化的形式是在定义数组的后面加上</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=&#123;初值表列&#125;;</span><br></pre></td></tr></table></figure>

<p>如:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span>  <span class="title">leader</span>[3] =</span> &#123;<span class="string">&quot;Li&quot;</span>, <span class="number">0</span>, <span class="string">&quot;Zhang&quot;</span>, <span class="number">0</span>, <span class="string">&quot;Sun&quot;</span>, <span class="number">0</span>&#125;;</span><br></pre></td></tr></table></figure>

<h5 id="有n个学生的信息-包括学号-姓名-成绩-要求按照成绩的高低顺序输出各学生的信息"><a href="#有n个学生的信息-包括学号-姓名-成绩-要求按照成绩的高低顺序输出各学生的信息" class="headerlink" title="有n个学生的信息(包括学号,姓名,成绩),要求按照成绩的高低顺序输出各学生的信息."></a>有n个学生的信息(包括学号,姓名,成绩),要求按照成绩的高低顺序输出各学生的信息.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">float</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有n个学生的信息(包括学号,姓名,成绩),要求按照成绩的高低顺序输出各学生的信息.</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[5] =</span> &#123;&#123;<span class="number">10101</span>, <span class="string">&quot;Zhang&quot;</span>, <span class="number">78</span>&#125;, &#123;<span class="number">10103</span>, <span class="string">&quot;Wang&quot;</span>, <span class="number">98.5</span>&#125;, &#123;<span class="number">10106</span>, <span class="string">&quot;Li&quot;</span>, <span class="number">86</span>&#125;, &#123;<span class="number">10108</span>, <span class="string">&quot;Ling&quot;</span>, <span class="number">73.5</span>&#125;, &#123;<span class="number">10110</span>, <span class="string">&quot;Sun&quot;</span>, <span class="number">100</span>&#125;&#125;;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">temp</span>;</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        k = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="keyword">if</span> (stu[j].score &gt; stu[k].score)</span><br><span class="line">                k = j;</span><br><span class="line">        temp = stu[k];</span><br><span class="line">        stu[k] = stu[i];</span><br><span class="line">        stu[i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6d%8s%6.2f\n&quot;</span>, stu[i].num, stu[i].name, stu[i].score);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h2><h3 id="指向结构体变量的指针"><a href="#指向结构体变量的指针" class="headerlink" title="指向结构体变量的指针"></a>指向结构体变量的指针</h3><p>指向结构体对象的指针变量既可指向结构体变量,也可指向结构体数组中的元素.指针变量的基类型必须与结构体变量的类型相同.如:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">pt</span>;</span> <span class="comment">//pt可以指向struct Student类型的变量或数组元素.</span></span><br></pre></td></tr></table></figure>

<h5 id="通过指向结构体变量的指针变量输出结构体变量中成员的信息"><a href="#通过指向结构体变量的指针变量输出结构体变量中成员的信息" class="headerlink" title="通过指向结构体变量的指针变量输出结构体变量中成员的信息"></a>通过指向结构体变量的指针变量输出结构体变量中成员的信息</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">long</span> num;</span><br><span class="line">        <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="type">char</span> sex;</span><br><span class="line">        <span class="type">float</span> score;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu_1</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">p</span>;</span></span><br><span class="line">    p = &amp;stu_1;</span><br><span class="line">    stu_1.num = <span class="number">10101</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(stu_1.name, <span class="string">&quot;Li Lin&quot;</span>); </span><br><span class="line">    <span class="comment">//stu_1.name = &quot;Li Lin&quot;; 非法,表达式必须是可修改的左值,stu_1.name是临时的值</span></span><br><span class="line">    stu_1.sex = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">    stu_1.score = <span class="number">89.5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No.:%ld\nname:%s\nsex:%c\nscore:%5.1f\n&quot;</span>, stu_1.num, stu_1.name, stu_1.sex, stu_1.score);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No.:%ld\nname:%s\nsex:%c\nscore:%5.1f\n&quot;</span>, (*p).num, (*p).name, (*p).sex, (*p).score);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="如果p指向一个结构体变量stu-以下3种用法等价"><a href="#如果p指向一个结构体变量stu-以下3种用法等价" class="headerlink" title="如果p指向一个结构体变量stu,以下3种用法等价."></a>如果p指向一个结构体变量stu,以下3种用法等价.</h4><ul>
<li><p>stu.成员名( 如stu.num )</p>
</li>
<li><p>(*p).成员名( 如(*p).num )</p>
</li>
<li><p>p-&gt;成员名( 如p-&gt;num )</p>
</li>
</ul>
<h3 id="指向结构体数组的指针"><a href="#指向结构体数组的指针" class="headerlink" title="指向结构体数组的指针"></a>指向结构体数组的指针</h3><blockquote>
<p>可以用指针变量指向结构体数组的元素</p>
</blockquote>
<h5 id="有3个同学的信息-放在结构体数组中-要求输出全部同学的信息"><a href="#有3个同学的信息-放在结构体数组中-要求输出全部同学的信息" class="headerlink" title="有3个同学的信息,放在结构体数组中,要求输出全部同学的信息."></a>有3个同学的信息,放在结构体数组中,要求输出全部同学的信息.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">long</span> num;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[3] =</span> &#123;&#123;<span class="number">10101</span>, <span class="string">&quot;Zhang&quot;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">1</span>&#125;, &#123;<span class="number">10103</span>, <span class="string">&quot;Wang&quot;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="number">98</span>&#125;, &#123;<span class="number">10106</span>, <span class="string">&quot;Li&quot;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="number">86</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">p</span>;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No.    Name               sex   age\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (p = stu; p &lt; stu + <span class="number">3</span>; p++) <span class="comment">//执行p++后p的值等于stu+1,p指向stu[1]a</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5d %-20s %2c %4d\n&quot;</span>, p-&gt;num, p-&gt;name, p-&gt;sex, p-&gt;age);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="用结构体变量和结构体变量的指针作函数参数"><a href="#用结构体变量和结构体变量的指针作函数参数" class="headerlink" title="用结构体变量和结构体变量的指针作函数参数"></a>用结构体变量和结构体变量的指针作函数参数</h3><p>将一个结构体变量的值传递给另一个函数，有3种方法：</p>
<ul>
<li>用结构体变量的成员作参数.</li>
<li>用结构体变量作实参</li>
<li>用指向结构体变量(或数组元素)的指针作实参,将结构体变量(或数组元素)的地址传给形参</li>
</ul>
<h5 id="有n个结构体变量-内含学生学号-姓名和3门课程的成绩-要求输出平均成绩最高的学生的成绩-包括学号-姓名-3门课程绩和平均成绩"><a href="#有n个结构体变量-内含学生学号-姓名和3门课程的成绩-要求输出平均成绩最高的学生的成绩-包括学号-姓名-3门课程绩和平均成绩" class="headerlink" title="有n个结构体变量,内含学生学号,姓名和3门课程的成绩.要求输出平均成绩最高的学生的成绩(包括学号,姓名,3门课程绩和平均成绩)."></a>有n个结构体变量,内含学生学号,姓名和3门课程的成绩.要求输出平均成绩最高的学生的成绩(包括学号,姓名,3门课程绩和平均成绩).</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 3</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">long</span> num;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">float</span> score[<span class="number">3</span>];</span><br><span class="line">    <span class="type">int</span> aver;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 有n个结构体变量,内含学生学号,姓名和3门课程的成绩.要求输出平均成绩最高的学生的成绩(包括学号,姓名,3门课程成绩和平均成绩).</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> Student stu[])</span>;</span><br><span class="line">    <span class="keyword">struct</span> Student <span class="title function_">max</span><span class="params">(<span class="keyword">struct</span> Student stu[])</span>;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> Student stud)</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[<span class="title">N</span>], *<span class="title">p</span> =</span> stu;</span><br><span class="line">    input(p);</span><br><span class="line">    print(max(p));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="keyword">struct</span> Student stu[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输出各学生的信息:学号,姓名,3门课成绩:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %s %f %f %f&quot;</span>, &amp;stu[i].num, stu[i].name, &amp;stu[i].score[<span class="number">0</span>], &amp;stu[i].score[<span class="number">1</span>], &amp;stu[i].score[<span class="number">2</span>]);</span><br><span class="line">        stu[i].aver = (stu[i].score[<span class="number">0</span>], stu[i].score[<span class="number">1</span>], stu[i].score[<span class="number">2</span>]) / <span class="number">3.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> Student <span class="title function_">max</span><span class="params">(<span class="keyword">struct</span> Student stu[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (stu[i].aver &gt; stu[max].aver)</span><br><span class="line">            max = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stu[max];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> Student stud)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n成绩最高的学生是:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生:%d\n姓名:%s\n三门课成绩:%5.1f,%5.1f,%5.1f\n平均成绩:%6.2f\n&quot;</span>, stud.num, stud.name, stud.score[<span class="number">0</span>], stud.score[<span class="number">1</span>], stud.score[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="用指针处理链表"><a href="#用指针处理链表" class="headerlink" title="用指针处理链表"></a>用指针处理链表</h2><blockquote>
<p>链表中各元素在内存中的地址可以是不连续的，要找到某一元素，必须先找到上一个元素，根据它提供的下一个元素地址才能找到一个元素.</p>
</blockquote>
<h4 id="建立简单的静态链表"><a href="#建立简单的静态链表" class="headerlink" title="建立简单的静态链表"></a>建立简单的静态链表</h4><h5 id="由3个学生数据组成的结点组成，要求输出各结点的数据"><a href="#由3个学生数据组成的结点组成，要求输出各结点的数据" class="headerlink" title="由3个学生数据组成的结点组成，要求输出各结点的数据."></a>由3个学生数据组成的结点组成，要求输出各结点的数据.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">long</span> num;</span><br><span class="line">    <span class="type">float</span> score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">a</span>, <span class="title">b</span>, <span class="title">c</span>, *<span class="title">head</span>, *<span class="title">p</span>;</span></span><br><span class="line">    a.num = <span class="number">10101</span>;</span><br><span class="line">    a.score = <span class="number">89.5</span>;</span><br><span class="line">    b.num = <span class="number">10103</span>;</span><br><span class="line">    b.score = <span class="number">90</span>;</span><br><span class="line">    c.num = <span class="number">10107</span>;</span><br><span class="line">    c.score = <span class="number">85</span>;</span><br><span class="line">    head = &amp;a;</span><br><span class="line">    a.next = &amp;b;</span><br><span class="line">    b.next = &amp;c;</span><br><span class="line">    c.next = <span class="literal">NULL</span>;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%ld %5.1f\n&quot;</span>, p-&gt;num, p-&gt;score);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125; <span class="keyword">while</span> (p != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="建立动态链表"><a href="#建立动态链表" class="headerlink" title="建立动态链表"></a>建立动态链表</h4><h5 id="写一个函数建立一个有3名学生数据的单向动态链表"><a href="#写一个函数建立一个有3名学生数据的单向动态链表" class="headerlink" title="写一个函数建立一个有3名学生数据的单向动态链表"></a>写一个函数建立一个有3名学生数据的单向动态链表</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LEN sizeof(struct Student)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">long</span> num;</span><br><span class="line">    <span class="type">float</span> score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> Student *<span class="title function_">create</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">//此函数返回一个指向链表头的指针</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">head</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">p1</span>, *<span class="title">p2</span>;</span></span><br><span class="line">    n = <span class="number">0</span>; <span class="comment">//结点的个数</span></span><br><span class="line">    p1 = p2 = (<span class="keyword">struct</span> Student *)<span class="built_in">malloc</span>(LEN);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%ld,%f&quot;</span>, &amp;p1-&gt;num, &amp;p1-&gt;score);</span><br><span class="line">    head = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span> (p1-&gt;num != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        n = n + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">            head = p1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p2-&gt;next = p1;<span class="comment">//将新结点的地址赋给第1个结点的next成员</span></span><br><span class="line">        p2 = p1; <span class="comment">//使p2指向刚才建立的结点。</span></span><br><span class="line">        p1 = (<span class="keyword">struct</span> Student *)<span class="built_in">malloc</span>(LEN);<span class="comment">//开辟结点并使p1指向它</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld,%f&quot;</span>, &amp;p1-&gt;num, &amp;p1-&gt;score);</span><br><span class="line">    &#125;</span><br><span class="line">    p2-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> (head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">pt</span>;</span></span><br><span class="line">    pt = create();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nnum:%ld\nsocre:%5.1f\n&quot;</span>, pt-&gt;num, pt-&gt;score); <span class="comment">//输入0,0表示结束</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="输出链表"><a href="#输出链表" class="headerlink" title="输出链表"></a>输出链表</h4><h5 id="将链表中各结点的数据依次输出print"><a href="#将链表中各结点的数据依次输出print" class="headerlink" title="将链表中各结点的数据依次输出print"></a>将链表中各结点的数据依次输出print</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> Student *head)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">p</span>;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nNow,These %d records are:\n&quot;</span>, n);</span><br><span class="line">    <span class="keyword">if</span> (head != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\nnum:%ld\nsocre:%5.1f\n&quot;</span>, p-&gt;num, p-&gt;score);</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125; <span class="keyword">while</span> (p != <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="共用体类型"><a href="#共用体类型" class="headerlink" title="共用体类型"></a>共用体类型</h2><p>定义:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> 共用体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    成员表列</span><br><span class="line">&#125;变量表列;</span><br></pre></td></tr></table></figure>

<p>如</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">float</span> f;</span><br><span class="line">&#125; a, b, c;</span><br></pre></td></tr></table></figure>

<p>结构体和共用体的区别:</p>
<ul>
<li>结构体变量所占用内存长度是各成员占的内存长度之和.每个成员分别占有其自己的内存单元.</li>
<li>共用体变量所占的内存长度等于最长的成员的长度.</li>
</ul>
<h4 id="引用共用体变量的方式"><a href="#引用共用体变量的方式" class="headerlink" title="引用共用体变量的方式"></a>引用共用体变量的方式</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.ch;</span><br><span class="line">a.i;</span><br></pre></td></tr></table></figure>

<h4 id="共用体类型数据的特点"><a href="#共用体类型数据的特点" class="headerlink" title="共用体类型数据的特点"></a>共用体类型数据的特点</h4><ul>
<li><p>同一内存段可以用来存放几种不同类型的成员,但在每一瞬间时只能存放其中一个成员,而不是同时存放几个.因为在每一瞬时,存储单元只能有唯一的内容,也就是说,在共用体变量中只能存放一个值.</p>
</li>
<li><p>可以对共用体变量初始化,但初始化表中只能有一个常量.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="type">char</span> ch;</span><br><span class="line">        <span class="type">float</span> f;</span><br><span class="line">    &#125; a = &#123;<span class="number">1</span>, <span class="string">&#x27;a&#x27;</span>, <span class="number">1.5</span>&#125;; <span class="comment">//非法，不能初始化3个成员，它们占用同一段存储单元.</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">Data</span> <span class="title">a</span> =</span> &#123;<span class="number">16</span>&#125;;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">Data</span> <span class="title">a</span> =</span> &#123;.ch=<span class="string">&#x27;j&#x27;</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>共用体变量中起作用的成员是最后一次被赋值的成员，在对共用体变量中的一个成员赋值，原有变量存储单元中的值就取代。</p>
</li>
<li><p>共用体变量的地址和它的各成员的地址都是同一地址。例如：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;a.i,&amp;a.c,&amp;a.f都是同一值.</span><br></pre></td></tr></table></figure>
</li>
<li><p>不能对共用体变量赋值,也不能企图引用变量名来得到一个值.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">1</span>;<span class="comment">//非法</span></span><br><span class="line"><span class="type">int</span> m=a;<span class="comment">//非法</span></span><br><span class="line">C99允许同类型的共用体变量互相赋值.如:</span><br><span class="line">b=a;<span class="comment">//a和b是同一类型的共同体变量</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>C99允许用共同体变量作函数参数.</p>
</li>
<li><p>共同体类型可以出现在结构体类型定义中,也可以定义共用体数组.</p>
<p>结构体也可以出现在共用体类型定义中,数组也可以作为共用体的成员</p>
</li>
</ul>
<h5 id="有若干个人员的数据-其中有学生和教师-学生的数据中包括-姓名-号码-性别-职业-班级-教师的数据包括-姓名-号码-性别-职业-职务-要求用同一个表格来处理"><a href="#有若干个人员的数据-其中有学生和教师-学生的数据中包括-姓名-号码-性别-职业-班级-教师的数据包括-姓名-号码-性别-职业-职务-要求用同一个表格来处理" class="headerlink" title="有若干个人员的数据,其中有学生和教师.学生的数据中包括:姓名,号码,性别,职业,班级.教师的数据包括:姓名,号码,性别,职业,职务.要求用同一个表格来处理."></a>有若干个人员的数据,其中有学生和教师.学生的数据中包括:姓名,号码,性别,职业,班级.教师的数据包括:姓名,号码,性别,职业,职务.要求用同一个表格来处理.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">char</span> job;</span><br><span class="line">    <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">int</span> clas;          <span class="comment">//班级</span></span><br><span class="line">        <span class="type">char</span> position[<span class="number">10</span>]; <span class="comment">//职务</span></span><br><span class="line">    &#125; category;            <span class="comment">//共用体变量</span></span><br><span class="line">&#125; person[<span class="number">2</span>];               <span class="comment">//结构体数组</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;please enter the data of person:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %s %c %c&quot;</span>, &amp;person[i].num, &amp;person[i].name, &amp;person[i].sex, &amp;person[i].job);</span><br><span class="line">        <span class="keyword">if</span> (person[i].job == <span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;person[i].category.clas); <span class="comment">//如是学生输入班级</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (person[i].job == <span class="string">&#x27;t&#x27;</span>)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;person[i].category.position); <span class="comment">//如是老师输入职务</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Input error!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No.     name        sex     job class/position\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (person[i].job == <span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-6d%-10s%-4c%-4c%-10d\n&quot;</span>, person[i].num, person[i].name, person[i].sex, person[i].job, person[i].category.clas);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-6d%-10s%-4c%-4c%-10d\n&quot;</span>, person[i].num, person[i].name, person[i].sex, person[i].job, person[i].category.position);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="使用枚举类型"><a href="#使用枚举类型" class="headerlink" title="使用枚举类型"></a>使用枚举类型</h2><p>如果一个变量只有几种可能的值,则可以定义为<strong>枚举(enumeration)类型</strong>,所谓”枚举”就是把可能的值一一列举出来,变量的值只限于列举出来的值的范围内.</p>
<h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>如:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Weekday</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    sun,</span><br><span class="line">    mon,</span><br><span class="line">    tue,</span><br><span class="line">    wed,</span><br><span class="line">    thu,</span><br><span class="line">    fri,</span><br><span class="line">    sat</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>用此类型来定义变量</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Weekday</span> <span class="title">workday</span>, <span class="title">weekend</span>;</span></span><br></pre></td></tr></table></figure>

<p>workday, weekend被定义为<strong>枚举变量</strong>，花括号中的 sun,mon,tue,wed,thu,fri,sat称为<strong>枚举元素</strong>或<strong>枚举常量</strong>。</p>
<p>声明枚举类型的一般形式为：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> [枚举名]&#123;</span>枚举元素列表&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ul>
<li><p>C编译器对枚举类型的枚举元素按常量处理</p>
</li>
<li><p>每个枚举元素都代表一个整数,按定义时的顺序,默认为0,1,2,3….</p>
<p>也可以人为地指定枚举元素的数值</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Weekday</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        sun=<span class="number">7</span>,</span><br><span class="line">        mon=<span class="number">1</span>,</span><br><span class="line">        tue,</span><br><span class="line">        wed,</span><br><span class="line">        thu,</span><br><span class="line">        fri,</span><br><span class="line">        sat</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>

<p>以后的顺序加1,sat为6.</p>
</li>
<li><p>枚举元素可以用来作判断比较.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(workday==mon)...</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="口袋中有红-黄-蓝-白-黑5种颜色的球若干个-每次从口袋中先后取出3个球-问得到3种不同颜色的球的可能取法-输出每种排列的情况"><a href="#口袋中有红-黄-蓝-白-黑5种颜色的球若干个-每次从口袋中先后取出3个球-问得到3种不同颜色的球的可能取法-输出每种排列的情况" class="headerlink" title="口袋中有红,黄,蓝,白,黑5种颜色的球若干个.每次从口袋中先后取出3个球,问得到3种不同颜色的球的可能取法,输出每种排列的情况."></a>口袋中有红,黄,蓝,白,黑5种颜色的球若干个.每次从口袋中先后取出3个球,问得到3种不同颜色的球的可能取法,输出每种排列的情况.</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 口袋中有红,黄,蓝,白,黑5种颜色的球若干个.每次从口袋中先后取出3个球,问得到3种不同颜色的球的可能取法,输出每种排列的情况.</span></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Color</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        red,</span><br><span class="line">        yellow,</span><br><span class="line">        blue,</span><br><span class="line">        white,</span><br><span class="line">        black</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Color</span> <span class="title">i</span>, <span class="title">j</span>, <span class="title">k</span>, <span class="title">pri</span>;</span></span><br><span class="line">    <span class="type">int</span> n, loop;</span><br><span class="line">    n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = red; i &lt;= black; i++)     <span class="comment">//第一个球</span></span><br><span class="line">        <span class="keyword">for</span> (j = red; j &lt;= black; j++) <span class="comment">//第二个球</span></span><br><span class="line">            <span class="keyword">if</span> (i != j)</span><br><span class="line">                <span class="keyword">for</span> (k = red; k &lt;= black; k++) <span class="comment">//第三个球</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((k != j) &amp;&amp; (k != i))</span><br><span class="line">                    &#123;</span><br><span class="line">                        n++;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>, n);             <span class="comment">//输出当前是第几个符合条件的组合</span></span><br><span class="line">                        <span class="keyword">for</span> (loop = <span class="number">1</span>; loop &lt;= <span class="number">3</span>; i++) <span class="comment">//先后对3个球分别处理</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">switch</span> (loop)</span><br><span class="line">                            &#123;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                pri = i;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                pri = j;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                                pri = k;</span><br><span class="line">                            <span class="keyword">default</span>:</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">switch</span> (pri)</span><br><span class="line">                            &#123;</span><br><span class="line">                            <span class="keyword">case</span> red:</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;red&quot;</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> yellow:</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;yellow&quot;</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> blue:</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;blue&quot;</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> white:</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;white&quot;</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> black:</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;black&quot;</span>);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">default</span>:</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nTotal:%5d\n&quot;</span>, n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="用typedef声明新类型名"><a href="#用typedef声明新类型名" class="headerlink" title="用typedef声明新类型名"></a>用typedef声明新类型名</h2><p>简单地用一个新的类型名代替原有的类型名。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Integer;</span><br><span class="line">Integer i, j; <span class="comment">//作用与int相同</span></span><br></pre></td></tr></table></figure>

<p>命名一个简单的类型名代替复杂的类型表示方法</p>
<ul>
<li><p>命名一个新的类型名代表结构体类型</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">&#125; Date;</span><br><span class="line">  </span><br><span class="line">Date birthday;</span><br><span class="line">Date *p;</span><br></pre></td></tr></table></figure>
</li>
<li><p>代表数组类型</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Num[<span class="number">10</span>];</span><br><span class="line">Num a;</span><br></pre></td></tr></table></figure>
</li>
<li><p>代表指针类型</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> *String;</span><br><span class="line">String p, s[<span class="number">10</span>];<span class="comment">//p为字符指针变量,s为字符指针数组</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>代表指向函数的指针类型</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="title function_">int</span> <span class="params">(*Pointer)</span><span class="params">()</span>;</span><br><span class="line">Pointer p1, p2;</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="typedef和-define表面上有相似之处"><a href="#typedef和-define表面上有相似之处" class="headerlink" title="typedef和#define表面上有相似之处"></a>typedef和#define表面上有相似之处</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Count;</span><br><span class="line">和</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Count int;</span></span><br></pre></td></tr></table></figure>

<p>#define是在预编译时处理的.它只能做简单的字符串替换</p>
<p>而typedef是在编译阶段处理的,采用如同定义变量的方法那样先生成一个类型名,然后用它去定义变量.</p>
<blockquote>
<p>当不同源文件中用到同一类型数据,常用typedef声明一些数据类型.</p>
</blockquote>
<p>使用typedef名称有利于程序的通用和移植.有的计算机系统int型数据占用不一样,需要修改:</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Integer;</span><br><span class="line">修改为:</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> Integer;</span><br></pre></td></tr></table></figure>








    </div>

    
    
    

    <footer class="post-footer">
          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>Post author:  </strong>Kayleh
  </li>
  <li class="post-copyright-link">
      <strong>Post link: </strong>
      <a href="https://blog.kayleh.top/posts/users-create-data-types-themselves" title="users create data types themselves">https://blog.kayleh.top/posts/users-create-data-types-themselves</a>
  </li>
  <li class="post-copyright-license">
      <strong>Copyright Notice:  </strong>All articles in this blog are licensed under <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC8="><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</span> unless stating additionally.
  </li>
</ul>
</div>

          <div class="followme">
  <span>Welcome to my other publishing channels</span>

  <div class="social-list">

      <div class="social-item">
          <a target="_blank" class="social-link" href="/atom.xml">
            <span class="icon">
              <i class="fa fa-rss"></i>
            </span>

            <span class="label">RSS</span>
          </a>
      </div>
  </div>
</div>

          <div class="post-tags">
              <a href="/tags/C/" rel="tag"><i class="fa fa-tag"></i> C</a>
          </div>

        
  <div class="social-like a2a_kit a2a_kit_size_32 a2a_default_style">
    <a class="a2a_dd" target="_blank" rel="noopener" href="https://www.addtoany.com/share"></a>
      <a class="a2a_button_facebook"></a>
      <a class="a2a_button_twitter"></a>
  </div>

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/posts/Good-use-of-pointers" rel="prev" title="Good use of pointers">
                  <i class="fa fa-angle-left"></i> Good use of pointers
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/posts/file-input-and-output" rel="next" title="file input and output">
                  file input and output <i class="fa fa-angle-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






    <div class="comments gitalk-container"></div>
</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">

  <div class="copyright">
    &copy; 2019 – 
    <span itemprop="copyrightYear">2025</span>
    <span class="with-love">
      <i class="fa fa-heart"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">true</span>
  </div>
<div class="busuanzi-count">
    <span class="post-meta-item" id="busuanzi_container_site_uv">
      <span class="post-meta-item-icon">
        <i class="fa fa-user"></i>
      </span>
      <span class="site-uv" title="Total Visitors">
        <span id="busuanzi_value_site_uv"></span>
      </span>
    </span>
    <span class="post-meta-item" id="busuanzi_container_site_pv">
      <span class="post-meta-item-icon">
        <i class="fa fa-eye"></i>
      </span>
      <span class="site-pv" title="Total Views">
        <span id="busuanzi_value_site_pv"></span>
      </span>
    </span>
</div>

    </div>
  </footer>

  
  <div class="toggle sidebar-toggle" role="button">
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
    <span class="toggle-line"></span>
  </div>
  <div class="sidebar-dimmer"></div>
  <div class="back-to-top" role="button" aria-label="Back to top">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script size="300" alpha="0.6" zIndex="-1" src="https://cdnjs.cloudflare.com/ajax/libs/ribbon.js/1.0.2/ribbon.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/next-theme-pjax/0.6.0/pjax.min.js" integrity="sha256-vxLn1tSKWD4dqbMRyv940UYw4sXgMtYcK6reefzZrao=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancyapps-ui/5.0.31/fancybox/fancybox.umd.js" integrity="sha256-a+H7FYzJv6oU2hfsfDGM2Ohw/cR9v+hPfxHCLdmCrE8=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/medium-zoom/1.1.0/medium-zoom.min.js" integrity="sha256-ZgMyDAIYDYGxbcpJcfUnYwNevG/xi9OHKaR/8GK+jWc=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/lozad.js/1.16.0/lozad.min.js" integrity="sha256-mOFREFhqmHeQbXpK2lp4nA3qooVgACfh88fpJftLBbc=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/sidebar.js"></script><script src="/js/next-boot.js"></script><script src="/js/pjax.js"></script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/hexo-generator-searchdb/1.4.1/search.js" integrity="sha256-1kfA5uHPf65M5cphT2dvymhkuyHPQp5A53EGZOnOLmc=" crossorigin="anonymous"></script>
<script src="/js/third-party/search/local-search.js"></script>
<script src="//code.tidio.co/dq5klo9ydptaxokj83vcwnusf63dogzr.js"></script>
<script src="/js/third-party/chat/tidio.js"></script>




  <script src="/js/third-party/fancybox.js"></script>

  <script src="/js/third-party/pace.js"></script>

  <script src="/js/third-party/addtoany.js"></script>

  
  <script data-pjax async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>




  

  <script class="next-config" data-name="enableMath" type="application/json">false</script><script class="next-config" data-name="mathjax" type="application/json">{"enable":true,"tags":"ams","js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js","integrity":"sha256-MASABpB4tYktI2Oitl4t+78w/lyA+D7b/s9GEP0JOGI="}}</script>
<script src="/js/third-party/math/mathjax.js"></script>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.css" integrity="sha256-AJnUHL7dBv6PGaeyPQJcgQPDjt/Hn/PvYZde1iqfp8U=" crossorigin="anonymous">

<script class="next-config" data-name="gitalk" type="application/json">{"enable":true,"github_id":"Kayleh","repo":"kayleh.top.giscus","client_id":"Ov23liJZlhhVSuSynF9Q","client_secret":"d16c7023956f130d20927ad469dfe83295864094","admin_user":"Kayleh","distraction_free_mode":true,"proxy":"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token","language":null,"js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.min.js","integrity":"sha256-MVK9MGD/XJaGyIghSVrONSnoXoGh3IFxLw0zfvzpxR4="},"path_md5":"900e05dddcbb59bd67aeeac8a73ecfa8"}</script>
<script src="/js/third-party/comments/gitalk.js"></script>

</body>
</html>
